{
  "version": 3,
  "sources": ["../animation-events/node_modules/@wonderlandengine/api/dist/index.js", "../animation-events/node_modules/wasm-feature-detect/dist/esm/index.js", "../animation-events/node_modules/@wonderlandengine/api/dist/property.js", "../animation-events/node_modules/@wonderlandengine/api/dist/decorators.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/object.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/event.js", "../animation-events/node_modules/@wonderlandengine/api/dist/resources/resource.js", "../animation-events/node_modules/@wonderlandengine/api/dist/component.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/fetch.js", "../animation-events/node_modules/@wonderlandengine/api/dist/prefab.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/misc.js", "../animation-events/node_modules/@wonderlandengine/api/dist/wonderland.js", "../animation-events/node_modules/@wonderlandengine/api/dist/resources/material-manager.js", "../animation-events/node_modules/@wonderlandengine/api/dist/resources/mesh-manager.js", "../animation-events/node_modules/@wonderlandengine/api/dist/resources/texture-manager.js", "../animation-events/node_modules/@wonderlandengine/api/dist/scene-gltf.js", "../animation-events/node_modules/@wonderlandengine/api/dist/scene.js", "../animation-events/node_modules/@wonderlandengine/api/dist/engine.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/bitset.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/logger.js", "../animation-events/node_modules/@wonderlandengine/api/dist/utils/cbor.js", "../animation-events/node_modules/@wonderlandengine/api/dist/wasm.js", "../animation-events/node_modules/@wonderlandengine/api/dist/version.js", "../animation-events/js/gun.js", "../animation-events/js/gun-controller.js", "../animation-events/js/controls.js", "../animation-events/js/index.js"],
  "sourcesContent": ["import { simd, threads } from 'wasm-feature-detect';\nimport { WonderlandEngine } from './engine.js';\nimport { LogLevel } from './utils/logger.js';\nimport { WASM } from './wasm.js';\nimport { APIVersion } from './version.js';\nimport { getBaseUrl } from './utils/fetch.js';\nexport * from './utils/bitset.js';\nexport * from './utils/event.js';\nexport * from './utils/logger.js';\nexport * from './wonderland.js';\nexport * from './engine.js';\nexport * from './property.js';\nexport * from './prefab.js';\nexport * from './scene.js';\nexport * from './scene-gltf.js';\nexport * from './resources/resource.js';\nexport * from './resources/material-manager.js';\nexport * from './resources/mesh-manager.js';\nexport * from './resources/texture-manager.js';\nexport * from './types.js';\nexport * from './version.js';\nexport * from './wasm.js';\n/** Relative default path for the loading screen. */\nconst LOADING_SCREEN_PATH = 'WonderlandRuntime-LoadingScreen.bin';\nfunction loadScript(scriptURL) {\n    return new Promise((res, rej) => {\n        const s = document.createElement('script');\n        const node = document.body.appendChild(s);\n        s.onload = () => {\n            document.body.removeChild(node);\n            res();\n        };\n        s.onerror = (e) => {\n            document.body.removeChild(node);\n            rej(e);\n        };\n        s.src = scriptURL;\n    });\n}\n/**\n * Finds whether simd & threading are supported or not.\n *\n * @returns An object containing boolean for simd and thread.\n */\nasync function detectFeatures() {\n    let [simdSupported, threadsSupported] = await Promise.all([simd(), threads()]);\n    if (simdSupported) {\n        console.log('WASM SIMD is supported');\n    }\n    else {\n        console.warn('WASM SIMD is not supported');\n    }\n    if (threadsSupported) {\n        if (self.crossOriginIsolated) {\n            console.log('WASM Threads is supported');\n        }\n        else {\n            console.warn('WASM Threads is supported, but the page is not crossOriginIsolated, therefore thread support is disabled.');\n        }\n    }\n    else {\n        console.warn('WASM Threads is not supported');\n    }\n    threadsSupported = threadsSupported && self.crossOriginIsolated;\n    return {\n        simdSupported,\n        threadsSupported,\n    };\n}\n/* Global boolean to check if AR/VR is supported. */\nconst xrSupported = {\n    ar: null,\n    vr: null,\n};\n/**\n * Check whether XR is supported and store the result in the global space.\n */\nfunction checkXRSupport() {\n    if (typeof navigator === 'undefined' || !navigator.xr) {\n        xrSupported.vr = false;\n        xrSupported.ar = false;\n        return Promise.resolve(xrSupported);\n    }\n    const vrPromise = xrSupported.vr !== null\n        ? Promise.resolve()\n        : navigator.xr\n            .isSessionSupported('immersive-vr')\n            .then((supported) => (xrSupported.vr = supported));\n    const arPromise = xrSupported.ar !== null\n        ? Promise.resolve()\n        : navigator.xr\n            .isSessionSupported('immersive-ar')\n            .then((supported) => (xrSupported.ar = supported));\n    return Promise.all([vrPromise, arPromise]).then(() => xrSupported);\n}\n/**\n * Ensures that this API is compatible with the given\n * runtime version.\n *\n * We only enforce compatibility for major and minor components, i.e.,\n * the runtime and the API must both be of the form `x.y.*`.\n *\n * @throws If the major or the minor components are different.\n *\n * @param version The target version\n */\nexport function checkRuntimeCompatibility(version) {\n    const { major, minor } = version;\n    let majorDiff = major - APIVersion.major;\n    let minorDiff = minor - APIVersion.minor;\n    /* Same version, so perfectly compatible. */\n    if (!majorDiff && !minorDiff)\n        return;\n    const error = 'checkRuntimeCompatibility(): Version compatibility mismatch:\\n' +\n        '\\t\u2192 API and runtime compatibility is enforced on a patch level (versions x.y.*)\\n';\n    const isRuntimeOlder = majorDiff < 0 || (!majorDiff && minorDiff < 0);\n    if (isRuntimeOlder) {\n        /* Runtime is out of date. */\n        throw new Error(`${error}\\t\u2192 Please use a Wonderland Engine editor version >= ${APIVersion.major}.${APIVersion.minor}.*`);\n    }\n    /* API is out of date. */\n    throw new Error(`${error}\\t\u2192 Please use a new API version >= ${version.major}.${version.minor}.*`);\n}\n/**\n * Load the runtime using the WASM and JS files.\n *\n * @param runtime The runtime base string, e.g,: `WonderlandRuntime-loader-physx`.\n * @param options Options to modify the loading behaviour.\n *\n * @returns A promise that resolves when the engine is ready to be used.\n */\nexport async function loadRuntime(runtime, options = {}) {\n    const xrPromise = checkXRSupport();\n    const baseURL = getBaseUrl(runtime);\n    const { simdSupported, threadsSupported } = await detectFeatures();\n    const { simd = simdSupported, threads = threadsSupported, webgpu = false, physx = false, loader = false, xrFramebufferScaleFactor = 1.0, xrOfferSession = null, loadingScreen = baseURL ? `${baseURL}/${LOADING_SCREEN_PATH}` : LOADING_SCREEN_PATH, canvas = 'canvas', logs = [LogLevel.Info, LogLevel.Warn, LogLevel.Error], } = options;\n    const variant = [];\n    if (webgpu)\n        variant.push('webgpu');\n    if (loader)\n        variant.push('loader');\n    if (physx)\n        variant.push('physx');\n    if (simd)\n        variant.push('simd');\n    if (threads)\n        variant.push('threads');\n    const variantStr = variant.join('-');\n    let filename = runtime;\n    if (variantStr)\n        filename = `${filename}-${variantStr}`;\n    const download = function (filename, errorMessage) {\n        return fetch(filename)\n            .then((r) => {\n            if (!r.ok)\n                return Promise.reject(errorMessage);\n            return r.arrayBuffer();\n        })\n            .catch((_) => Promise.reject(errorMessage));\n    };\n    const [wasmData, loadingScreenData] = await Promise.all([\n        download(`${filename}.wasm`, 'Failed to fetch runtime .wasm file'),\n        download(loadingScreen, 'Failed to fetch loading screen file'),\n    ]);\n    const canvasElement = document.getElementById(canvas);\n    if (!canvasElement) {\n        throw new Error(`loadRuntime(): Failed to find canvas with id '${canvas}'`);\n    }\n    if (!(canvasElement instanceof HTMLCanvasElement)) {\n        throw new Error(`loadRuntime(): HTML element '${canvas}' must be a canvas`);\n    }\n    const wasm = new WASM(threads);\n    wasm.worker = `${filename}.worker.js`;\n    wasm.wasm = wasmData;\n    wasm.canvas = canvasElement;\n    wasm._log.levels.enable(...logs);\n    if (webgpu) {\n        const adapter = await navigator.gpu.requestAdapter();\n        const desc = {\n            requiredFeatures: ['texture-compression-bc'],\n        };\n        const device = await adapter.requestDevice(desc);\n        wasm.preinitializedWebGPUDevice = device;\n    }\n    const engine = new WonderlandEngine(wasm, loadingScreenData);\n    if (!window._WL) {\n        window._WL = { runtimes: {} };\n    }\n    const runtimes = window._WL.runtimes;\n    /* Global identifier of this runtime in `window`. */\n    const runtimeGlobalId = variantStr ? variantStr : 'default';\n    /* Only load the runtime if not previously loaded in the page */\n    if (!runtimes[runtimeGlobalId]) {\n        await loadScript(`${filename}.js`);\n        runtimes[runtimeGlobalId] = window.instantiateWonderlandRuntime;\n        window.instantiateWonderlandRuntime = undefined;\n    }\n    await runtimes[runtimeGlobalId](wasm);\n    engine._init();\n    /* Throws if the runtime isn't compatible with the API. */\n    checkRuntimeCompatibility(engine.runtimeVersion);\n    const xr = await xrPromise;\n    engine.arSupported = xr.ar;\n    engine.vrSupported = xr.vr;\n    engine.xrFramebufferScaleFactor = xrFramebufferScaleFactor;\n    engine.autoResizeCanvas = true;\n    engine.start();\n    if (xrOfferSession !== null) {\n        let mode = xrOfferSession.mode;\n        if (mode == 'auto') {\n            if (engine.vrSupported) {\n                mode = 'immersive-vr';\n            }\n            else if (engine.arSupported) {\n                mode = 'immersive-ar';\n            }\n            else {\n                mode = 'inline';\n            }\n        }\n        const offerSession = function () {\n            engine\n                .offerXRSession(mode, xrOfferSession.features, xrOfferSession.optionalFeatures)\n                .then(\n            /* When the session ends, offer to start a new one again */\n            (s) => s.addEventListener('end', offerSession))\n                /* The browser may not suppoer offer session, or a previous request\n                 * was replaced by a new one. Not crucial, but inform the user. */\n                .catch(console.warn);\n        };\n        offerSession();\n    }\n    return engine;\n}\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jspi=()=>(async()=>\"Suspender\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)();\n", "/**\n * Component property type.\n */\nexport var Type;\n(function (Type) {\n    /**\n     * **Native**\n     *\n     * Property of a native component. Must not be used in custom components.\n     *\n     * @hidden\n     */\n    Type[Type[\"Native\"] = 0] = \"Native\";\n    /**\n     * **Bool**:\n     *\n     * Appears in the editor as a checkbox.\n     *\n     * Initial value is `false`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Bool\"] = 1] = \"Bool\";\n    /**\n     * **Int**:\n     *\n     * Appears in the editor as an integer input field.\n     *\n     * Initial value is `0`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /**\n     * **Float**:\n     *\n     * Appears in the editor as a floating point input field.\n     *\n     * Initial value is `0.0`, unless overridden by the `default` property.\n     */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /**\n     * **String / Text**:\n     *\n     * Appears in the editor as a single-line text input field.\n     *\n     * Initial value is an empty string, unless overridden by the `default`\n     * property.\n     */\n    Type[Type[\"String\"] = 4] = \"String\";\n    /**\n     * **Enumeration**:\n     *\n     * Appears in the editor as a dropdown with given values. The additional\n     * `values` parameter with selection options is mandatory.\n     *\n     * The property value is resolved to an **index** into the `values` array.\n     *\n     * Initial value is the first element in `values`, unless overridden by\n     * the `default` property. The `default` value can be a string or an index\n     * into `values`.\n     *\n     * @example\n     *\n     * ```js\n     *     camera: {type: Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\n     * ```\n     */\n    Type[Type[\"Enum\"] = 5] = \"Enum\";\n    /**\n     * **Object reference**:\n     *\n     * Appears in the editor as an object resource selection dropdown\n     * with object picker.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Object\"] = 6] = \"Object\";\n    /**\n     * **Mesh reference**:\n     *\n     * Appears in the editor as a mesh resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Mesh\"] = 7] = \"Mesh\";\n    /**\n     * **Texture reference**:\n     *\n     * Appears in the editor as a texture resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Texture\"] = 8] = \"Texture\";\n    /**\n     * **Material reference**:\n     *\n     * Appears in the editor as a material resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Material\"] = 9] = \"Material\";\n    /**\n     * **Animation reference**:\n     *\n     * Appears in the editor as an animation resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Animation\"] = 10] = \"Animation\";\n    /**\n     * **Skin reference**:\n     *\n     * Appears in the editor as a skin resource selection dropdown.\n     *\n     * Initial value is `null`.\n     */\n    Type[Type[\"Skin\"] = 11] = \"Skin\";\n    /**\n     * **Color**:\n     *\n     * Appears in the editor as a color widget.\n     *\n     * Initial value is `[0.0, 0.0, 0.0, 1.0]`, unless overridden by the\n     * `default` property.\n     */\n    Type[Type[\"Color\"] = 12] = \"Color\";\n    /**\n     * **Vector of two floats**:\n     *\n     * Appears in the editor as a two-element floating point input field.\n     *\n     * Initial value is `[0.0, 0.0]`, unless overridden by the\n     * `default` property.\n     */\n    Type[Type[\"Vector2\"] = 13] = \"Vector2\";\n    /**\n     * **Vector of three floats**:\n     *\n     * Appears in the editor as a three-element floating point input field.\n     *\n     * Initial value is `[0.0, 0.0, 0.0]`, unless overridden by the\n     * `default` property.\n     */\n    Type[Type[\"Vector3\"] = 14] = \"Vector3\";\n    /**\n     * **Vector of four floats**:\n     *\n     * Appears in the editor as a four-element floating point input field.\n     *\n     * Initial value is `[0.0, 0.0, 0.0, 0.0]`, unless overridden by the\n     * `default` property.\n     */\n    Type[Type[\"Vector4\"] = 15] = \"Vector4\";\n})(Type || (Type = {}));\n/**\n * Default cloner implementation.\n *\n * Clones array-like properties and leaves all other types unchanged.\n */\nexport class DefaultPropertyCloner {\n    clone(type, value) {\n        switch (type) {\n            case Type.Color:\n            case Type.Vector2:\n            case Type.Vector3:\n            case Type.Vector4:\n                return value.slice();\n            default:\n                return value;\n        }\n    }\n}\n/** Default cloner for property values. */\nexport const defaultPropertyCloner = new DefaultPropertyCloner();\n/**\n * Component property namespace.\n *\n * Usage:\n *\n * ```js\n * import {Component, Property} from '@wonderlandengine/api';\n *\n * class MyComponent extends Component {\n *     static Properties = {\n *         myBool: Property.bool(true),\n *         myInt: Property.int(42),\n *         myString: Property.string('Hello World!'),\n *         myMesh: Property.mesh(),\n *     }\n * }\n * ```\n *\n * For TypeScript users, you can use the decorators instead.\n */\nexport const Property = {\n    /**\n     * Create an boolean property.\n     *\n     * @param defaultValue The default value. If not provided, defaults to `false`.\n     */\n    bool(defaultValue = false) {\n        return { type: Type.Bool, default: defaultValue };\n    },\n    /**\n     * Create an integer property.\n     *\n     * @param defaultValue The default value. If not provided, defaults to `0`.\n     */\n    int(defaultValue = 0) {\n        return { type: Type.Int, default: defaultValue };\n    },\n    /**\n     * Create an float property.\n     *\n     * @param defaultValue The default value. If not provided, defaults to `0.0`.\n     */\n    float(defaultValue = 0.0) {\n        return { type: Type.Float, default: defaultValue };\n    },\n    /**\n     * Create an string property.\n     *\n     * @param defaultValue The default value. If not provided, defaults to `''`.\n     */\n    string(defaultValue = '') {\n        return { type: Type.String, default: defaultValue };\n    },\n    /**\n     * Create an enumeration property.\n     *\n     * @param values The list of values.\n     * @param defaultValue The default value. Can be a string or an index into\n     *     `values`. If not provided, defaults to the first element.\n     */\n    enum(values, defaultValue) {\n        return { type: Type.Enum, values, default: defaultValue };\n    },\n    /** Create an {@link Object3D} reference property. */\n    object(opts) {\n        return { type: Type.Object, default: null, required: opts?.required ?? false };\n    },\n    /** Create a {@link Mesh} reference property. */\n    mesh(opts) {\n        return { type: Type.Mesh, default: null, required: opts?.required ?? false };\n    },\n    /** Create a {@link Texture} reference property. */\n    texture(opts) {\n        return { type: Type.Texture, default: null, required: opts?.required ?? false };\n    },\n    /** Create a {@link Material} reference property. */\n    material(opts) {\n        return { type: Type.Material, default: null, required: opts?.required ?? false };\n    },\n    /** Create an {@link Animation} reference property. */\n    animation(opts) {\n        return { type: Type.Animation, default: null, required: opts?.required ?? false };\n    },\n    /** Create a {@link Skin} reference property. */\n    skin(opts) {\n        return { type: Type.Skin, default: null, required: opts?.required ?? false };\n    },\n    /**\n     * Create a color property.\n     *\n     * @param r The red component, in the range [0; 1].\n     * @param g The green component, in the range [0; 1].\n     * @param b The blue component, in the range [0; 1].\n     * @param a The alpha component, in the range [0; 1].\n     */\n    color(r = 0.0, g = 0.0, b = 0.0, a = 1.0) {\n        return { type: Type.Color, default: [r, g, b, a] };\n    },\n    /**\n     * Create a two-element vector property.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     */\n    vector2(x = 0.0, y = 0.0) {\n        return { type: Type.Vector2, default: [x, y] };\n    },\n    /**\n     * Create a three-element vector property.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     */\n    vector3(x = 0.0, y = 0.0, z = 0.0) {\n        return { type: Type.Vector3, default: [x, y, z] };\n    },\n    /**\n     * Create a four-element vector property.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param w The w component.\n     */\n    vector4(x = 0.0, y = 0.0, z = 0.0, w = 0.0) {\n        return { type: Type.Vector4, default: [x, y, z, w] };\n    },\n};\n", "import { Property, Type } from './property.js';\n/**\n * Decorator for JS component properties.\n *\n * @param data The property description as an object literal\n * @returns A decorator function modifying the `Properties` static\n *     attribute\n */\nfunction propertyDecorator(data) {\n    return function (target, propertyKey) {\n        const ctor = target.constructor;\n        ctor.Properties = ctor.hasOwnProperty('Properties') ? ctor.Properties : {};\n        ctor.Properties[propertyKey] = data;\n    };\n}\n/**\n * Decorator for making a getter enumerable.\n *\n * Usage:\n *\n * ```ts\n * class MyClass {\n *     @enumerable()\n *     get projectionMatrix(): Float32Array { ... }\n * }\n * ```\n */\nexport function enumerable() {\n    return function (_, __, descriptor) {\n        descriptor.enumerable = true;\n    };\n}\n/**\n * Decorator for native properties.\n *\n * Usage:\n *\n * ```ts\n * class MyClass {\n *     @nativeProperty()\n *     get projectionMatrix(): Float32Array { ... }\n * }\n * ```\n */\nexport function nativeProperty() {\n    return function (target, propertyKey, descriptor) {\n        enumerable()(target, propertyKey, descriptor);\n        propertyDecorator({ type: Type.Native })(target, propertyKey);\n    };\n}\n/**\n * Property decorators namespace.\n *\n * You can use the decorators to mark a class attribute as\n * a Wonderland Engine property.\n *\n * Usage:\n *\n * ```ts\n * import {Mesh} from '@wonderlandengine/api';\n * import {property} from '@wonderlandengine/api/decorators.js';\n *\n * class MyComponent extends Component {\n *     @property.bool(true)\n *     myBool!: boolean;\n *\n *     @property.int(42)\n *     myInt!: number;\n *\n *     @property.string('Hello World!')\n *     myString!: string;\n *\n *     @property.mesh()\n *     myMesh!: Mesh;\n * }\n * ```\n *\n * For JavaScript users, please declare the properties statically.\n */\nexport const property = {};\nfor (const name in Property) {\n    /* Assign each property functor to a TypeScript decorator.\n     * This code extracts parameters and return type to provide proper\n     * typings to the user. */\n    property[name] = (...args) => {\n        const functor = Property[name];\n        return propertyDecorator(functor(...args));\n    };\n}\n", "/**\n * Check if a given value is a native string or a `String` instance.\n *\n * @param value The value to check.\n * @returns `true` if the `value` has type string literal or `String`, `false` otherwise.\n */\nexport function isString(value) {\n    if (value === '')\n        return true;\n    return value && (typeof value === 'string' || value.constructor === String);\n}\n/**\n * Check if a given value is a native number or a `Number` instance.\n *\n * @param value The value to check.\n * @returns `true` if the `value` has type number literal or `Number`, `false` otherwise.\n */\nexport function isNumber(value) {\n    if (value === null || value === undefined)\n        return false;\n    return typeof value === 'number' || value.constructor === Number;\n}\n/**\n * Check whether a given value is a visual media.\n *\n * @param value The value to check\n * @returns `true` if the `value` is an image, video, or canvas.\n */\nexport function isImageLike(value) {\n    return (value instanceof HTMLImageElement ||\n        value instanceof HTMLVideoElement ||\n        value instanceof HTMLCanvasElement);\n}\n", "/** Internal type for transaction. */\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Addition\"] = 1] = \"Addition\";\n    TransactionType[TransactionType[\"Removal\"] = 2] = \"Removal\";\n})(TransactionType || (TransactionType = {}));\n/**\n * Event emitter.\n *\n * This class allows to register listeners that will get notified by the emitter.\n *\n * Usage example:\n *\n * ```js\n * // `onPreRender` is an `Emitter` instance.\n * scene.onPreRender.add(() => console.log('before rendering'));\n * // `onPostRender` is an `Emitter` instance.\n * scene.onPostRender.add(() => console.log('after rendering'));\n * ```\n *\n * You can create your own emitters:\n *\n * ```js\n * import {Emitter} from '@wonderlandengine/api';\n *\n * const emitter = new Emitter();\n * ```\n *\n * You can notify listeners in to your emitter using {@link Emitter.notify}:\n *\n * ```js\n * // Notifies all the listeners.\n * emitter.notify();\n * // Notifies all the listeners with some data.\n * emitter.notify({ myInt: 42, myStr: 'Hello World!' });\n * ```\n *\n * @category event\n */\nexport class Emitter {\n    /**\n     * List of listeners to trigger when `notify` is called.\n     *\n     * @hidden\n     */\n    _listeners = [];\n    /**\n     * `true` if the emitter is currently notifying listeners. This\n     * is used to defer addition and removal.\n     *\n     * @hidden\n     */\n    _notifying = false;\n    /**\n     * Pending additions / removals, performed during a notification.\n     *\n     * @hidden\n     */\n    _transactions = [];\n    /**\n     * Register a new listener to be triggered on {@link Emitter.notify}.\n     *\n     * Basic usage:\n     *\n     * ```js\n     * emitter.add((data) => {\n     *     console.log('event received!');\n     *     console.log(data);\n     * });\n     * ```\n     *\n     * Automatically remove the listener when an event is received:\n     *\n     * ```js\n     * emitter.add((data) => {\n     *     console.log('event received!');\n     *     console.log(data);\n     * }, {once: true});\n     * ```\n     *\n     * @param listener The callback to register.\n     * @param opts The listener options. For more information, please have a look\n     *     at the {@link ListenerOptions} interface.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    add(listener, opts = {}) {\n        const { once = false, id = undefined } = opts;\n        const data = { id, once, callback: listener };\n        if (this._notifying) {\n            this._transactions.push({ type: TransactionType.Addition, data });\n            return this;\n        }\n        this._listeners.push(data);\n        return this;\n    }\n    /**\n     * Equivalent to {@link Emitter.add}.\n     *\n     * @param listeners The callback(s) to register.\n     * @returns Reference to self (for method chaining).\n     *\n     * @deprecated Please use {@link Emitter.add} instead.\n     */\n    push(...listeners) {\n        for (const cb of listeners)\n            this.add(cb);\n        return this;\n    }\n    /**\n     * Register a new listener to be triggered on {@link Emitter.notify}.\n     *\n     * Once notified, the listener will be automatically removed.\n     *\n     * The method is equivalent to calling {@link Emitter.add} with:\n     *\n     * ```js\n     * emitter.add(listener, {once: true});\n     * ```\n     *\n     * @param listener The callback to register.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    once(listener) {\n        return this.add(listener, { once: true });\n    }\n    /**\n     * Remove a registered listener.\n     *\n     * Usage with a callback:\n     *\n     * ```js\n     * const listener = (data) => console.log(data);\n     * emitter.add(listener);\n     *\n     * // Remove using the callback reference:\n     * emitter.remove(listener);\n     * ```\n     *\n     * Usage with an id:\n     *\n     * ```js\n     * emitter.add((data) => console.log(data), {id: 'my-callback'});\n     *\n     * // Remove using the id:\n     * emitter.remove('my-callback');\n     * ```\n     *\n     * Using identifiers, you will need to ensure your value is unique to avoid\n     * removing listeners from other libraries, e.g.,:\n     *\n     * ```js\n     * emitter.add((data) => console.log(data), {id: 'non-unique'});\n     * // This second listener could be added by a third-party library.\n     * emitter.add((data) => console.log('Hello From Library!'), {id: 'non-unique'});\n     *\n     * // Ho Snap! This also removed the library listener!\n     * emitter.remove('non-unique');\n     * ```\n     *\n     * The identifier can be any type. However, remember that the comparison will be\n     * by-value for primitive types (string, number), but by reference for objects.\n     *\n     * Example:\n     *\n     * ```js\n     * emitter.add(() => console.log('Hello'), {id: {value: 42}});\n     * emitter.add(() => console.log('World!'), {id: {value: 42}});\n     * emitter.remove({value: 42}); // None of the above listeners match!\n     * emitter.notify(); // Prints 'Hello' and 'World!'.\n     * ```\n     *\n     * Here, both emitters have id `{value: 42}`, but the comparison is made by reference. Thus,\n     * the `remove()` call has no effect. We can make it work by doing:\n     *\n     * ```js\n     * const id = {value: 42};\n     * emitter.add(() => console.log('Hello'), {id});\n     * emitter.add(() => console.log('World!'), {id});\n     * emitter.remove(id); // Same reference, it works!\n     * emitter.notify(); // Doesn't print.\n     * ```\n     *\n     * @param listener The registered callback or a value representing the `id`.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    remove(listener) {\n        if (this._notifying) {\n            this._transactions.push({ type: TransactionType.Removal, data: listener });\n            return this;\n        }\n        const listeners = this._listeners;\n        for (let i = 0; i < listeners.length; ++i) {\n            const target = listeners[i];\n            if (target.callback === listener || target.id === listener) {\n                listeners.splice(i--, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Check whether the listener is registered.\n     *\n     * @note This method performs a linear search.\n     *\n     * * @note Doesn't account for pending listeners, i.e.,\n     * listeners added / removed during a notification.\n     *\n     * @param listener The registered callback or a value representing the `id`.\n     * @returns `true` if the handle is found, `false` otherwise.\n     */\n    has(listener) {\n        const listeners = this._listeners;\n        for (let i = 0; i < listeners.length; ++i) {\n            const target = listeners[i];\n            if (target.callback === listener || target.id === listener)\n                return true;\n        }\n        return false;\n    }\n    /**\n     * Notify listeners with the given data object.\n     *\n     * @note This method ensures all listeners are called even if\n     * an exception is thrown. For (possibly) faster notification,\n     * please use {@link Emitter.notifyUnsafe}.\n     *\n     * @param data The data to pass to listener when invoked.\n     */\n    notify(...data) {\n        const listeners = this._listeners;\n        this._notifying = true;\n        for (let i = 0; i < listeners.length; ++i) {\n            const listener = listeners[i];\n            if (listener.once)\n                listeners.splice(i--, 1);\n            try {\n                listener.callback(...data);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        this._notifying = false;\n        /* Process deferred additions & removals */\n        this._flushTransactions();\n    }\n    /**\n     * Notify listeners with the given data object.\n     *\n     * @note Because this method doesn't catch exceptions, some listeners\n     * will be skipped on a throw. Please use {@link Emitter.notify} for safe\n     * notification.\n     *\n     * @param data The data to pass to listener when invoked.\n     */\n    notifyUnsafe(...data) {\n        const listeners = this._listeners;\n        for (let i = 0; i < listeners.length; ++i) {\n            const listener = listeners[i];\n            if (listener.once)\n                listeners.splice(i--, 1);\n            listener.callback(...data);\n        }\n        /* Process deferred additions & removals */\n        this._flushTransactions();\n    }\n    /**\n     * Return a promise that will resolve on the next event.\n     *\n     * @note The promise might never resolve if no event is sent.\n     *\n     * @returns A promise that resolves with the data passed to\n     *     {@link Emitter.notify}.\n     */\n    promise() {\n        return new Promise((res, _) => {\n            this.once((...args) => {\n                if (args.length > 1) {\n                    res(args);\n                }\n                else {\n                    res(args[0]);\n                }\n            });\n        });\n    }\n    /**\n     * Number of listeners.\n     *\n     * @note Doesn't account for pending listeners, i.e.,\n     * listeners added / removed during a notification.\n     */\n    get listenerCount() {\n        return this._listeners.length;\n    }\n    /** `true` if it has no listeners, `false` otherwise. */\n    get isEmpty() {\n        return this.listenerCount === 0;\n    }\n    /**\n     * Flush all pending transactions.\n     *\n     * @hidden\n     */\n    _flushTransactions() {\n        const listeners = this._listeners;\n        for (const transaction of this._transactions) {\n            if (transaction.type === TransactionType.Addition) {\n                listeners.push(transaction.data);\n            }\n            else {\n                this.remove(transaction.data);\n            }\n        }\n        this._transactions.length = 0;\n    }\n}\n/* Dummy value used with RetainEmitter. */\nconst RetainEmitterUndefined = {};\n/**\n * Event emitter that retains event data when notified.\n *\n * After a notification happens, subsequent calls to {@link RetainEmitter.add} will get\n * automatically notified.\n *\n * You can use another emitter in order to cancel the last retained event:\n *\n * ```js\n * import {Emitter, RetainedEmitter} from '@wonderlandengine/api';\n *\n * const onStart = new RetainedEmitter();\n *\n * onStart.notify(42);\n * onStart.add((data) => console.log(data)) // Prints '42'.\n * ```\n *\n * You can reset the state of the emitter, i.e., making it forget about the\n * last event using:\n *\n * ```js\n * import {Emitter, RetainedEmitter} from '@wonderlandengine/api';\n *\n * const onStart = new RetainedEmitter();\n * onStart.notify(42);\n * onStart.add((data) => console.log(data)) // Prints '42'.\n *\n * // Reset the state of the emitter.\n * onStart.reset();\n * onStart.add((data) => console.log(data)) // Doesn't print anything.\n * ```\n *\n * For more information about emitters, please have a look at the base {@link Emitter} class.\n *\n * @category event\n */\nexport class RetainEmitter extends Emitter {\n    /** Pre-resolved data. @hidden */\n    _event = RetainEmitterUndefined;\n    /**\n     * Emitter target used to reset the state of this emitter.\n     *\n     * @hidden\n     */\n    _reset;\n    /** @override */\n    add(listener, opts) {\n        const immediate = opts?.immediate ?? true;\n        if (this._event !== RetainEmitterUndefined && immediate) {\n            listener(...this._event);\n        }\n        super.add(listener, opts);\n        return this;\n    }\n    /**\n     * @override\n     *\n     * @param listener The callback to register.\n     * @param immediate If `true`, directly resolves if the emitter retains a value.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    once(listener, immediate) {\n        return this.add(listener, { once: true, immediate });\n    }\n    /** @override */\n    notify(...data) {\n        this._event = data;\n        super.notify(...data);\n    }\n    /** @override */\n    notifyUnsafe(...data) {\n        this._event = data;\n        super.notifyUnsafe(...data);\n    }\n    /**\n     * Reset the state of the emitter.\n     *\n     * Further call to {@link Emitter.add} will not automatically resolve,\n     * until a new call to {@link Emitter.notify} is performed.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    reset() {\n        this._event = RetainEmitterUndefined;\n        return this;\n    }\n    /** Returns the retained data, or `undefined` if no data was retained. */\n    get data() {\n        return this.isDataRetained ? this._event : undefined;\n    }\n    /** `true` if data is retained from the last event, `false` otherwise. */\n    get isDataRetained() {\n        return this._event !== RetainEmitterUndefined;\n    }\n}\n", "/**\n * Create a proxy throwing destroyed errors upon access.\n *\n * @param type The type to display upon error\n * @returns The proxy instance\n */\nfunction createDestroyedProxy(host, type) {\n    return new Proxy({}, {\n        get(_, param) {\n            if (param === 'isDestroyed')\n                return true;\n            throw new Error(`Cannot read '${param}' of destroyed '${type.name}' resource from ${host}`);\n        },\n        set(_, param) {\n            throw new Error(`Cannot write '${param}' of destroyed '${type.name}' resource from ${host}`);\n        },\n    });\n}\n/**\n * Base class for engine resources, such as:\n * - {@link Texture}\n * - {@link Mesh}\n * - {@link Material}\n *\n * @since 1.2.0\n */\nexport class Resource {\n    /** Relative index in the host. @hidden */\n    _index = -1;\n    /** For compatibility with SceneResource. @hidden */\n    _id = -1;\n    /** @hidden */\n    _engine;\n    constructor(engine, index) {\n        this._engine = engine;\n        this._index = index;\n        this._id = index;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n    /** Index of this resource in the {@link Scene}'s manager. */\n    get index() {\n        return this._index;\n    }\n    /**\n     * Checks equality by comparing ids and **not** the JavaScript reference.\n     *\n     * @deprecated Use JavaScript reference comparison instead:\n     *\n     * ```js\n     * const meshA = engine.meshes.create({vertexCount: 1});\n     * const meshB = engine.meshes.create({vertexCount: 1});\n     * const meshC = meshB;\n     * console.log(meshA === meshB); // false\n     * console.log(meshA === meshA); // true\n     * console.log(meshB === meshC); // true\n     * ```\n     */\n    equals(other) {\n        if (!other)\n            return false;\n        return this._index === other._index;\n    }\n    /**\n     * `true` if the object is destroyed, `false` otherwise.\n     *\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\n     * reading a class attribute / method will throw.\n     */\n    get isDestroyed() {\n        return this._index <= 0;\n    }\n}\n/**\n * Base class for scene resources, such as:\n *  * - {@link Texture}\n * - {@link Mesh}\n * - {@link Material}\n * - {@link Skin}\n * - {@link Animation}\n *\n * @since 1.2.0\n */\nexport class SceneResource {\n    static _pack(scene, index) {\n        return (scene << 22) | index;\n    }\n    /** Relative index in the host. @hidden */\n    _index = -1;\n    /** For compatibility with SceneResource. @hidden */\n    _id = -1;\n    /** @hidden */\n    _scene;\n    constructor(scene, index) {\n        this._scene = scene;\n        this._index = index;\n        this._id = SceneResource._pack(scene._index, index);\n    }\n    /**\n     * Checks equality by comparing ids and **not** the JavaScript reference.\n     *\n     * @deprecated Use JavaScript reference comparison instead:\n     *\n     * ```js\n     * const meshA = engine.meshes.create({vertexCount: 1});\n     * const meshB = engine.meshes.create({vertexCount: 1});\n     * const meshC = meshB;\n     * console.log(meshA === meshB); // false\n     * console.log(meshA === meshA); // true\n     * console.log(meshB === meshC); // true\n     * ```\n     */\n    equals(other) {\n        if (!other)\n            return false;\n        return this._id === other._id;\n    }\n    /** Hosting instance. */\n    get scene() {\n        return this._scene;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._scene.engine;\n    }\n    /** Index of this resource in the {@link Scene}'s manager. */\n    get index() {\n        return this._index;\n    }\n    /**\n     * `true` if the object is destroyed, `false` otherwise.\n     *\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\n     * reading a class attribute / method will throw.\n     */\n    get isDestroyed() {\n        return this._id <= 0;\n    }\n}\n/**\n * Manager for resources.\n *\n * Resources are accessed via the engine they belong to.\n *\n * @see {@link WonderlandEngine.textures}, {@link WonderlandEngine.meshes},\n * and {@link WonderlandEngine.materials}.\n *\n * @since 1.2.0\n */\nexport class ResourceManager {\n    /** @hidden */\n    _host;\n    /** Cache. @hidden */\n    _cache = [];\n    /** Resource class. @hidden */\n    _template;\n    /** Destructor proxy, used if {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`. @hidden */\n    _destructor = null;\n    _engine;\n    /**\n     * Create a new manager\n     *\n     * @param host The host containing the managed resources.\n     * @param Class The class to instantiate when wrapping an index.\n     *\n     * @hidden\n     */\n    constructor(host, Class) {\n        this._host = host;\n        this._template = Class;\n        this._engine = host.engine ?? host;\n    }\n    /**\n     * Wrap the index into a resource instance.\n     *\n     * @note The index is relative to the host, i.e., doesn't pack the host index (if any).\n     *\n     * @param index The resource index.\n     * @returns\n     */\n    wrap(index) {\n        if (index <= 0)\n            return null;\n        const texture = this._cache[index] ??\n            (this._cache[index] = new this._template(this._host, index));\n        return texture;\n    }\n    /**\n     * Retrieve the resource at the given index.\n     *\n     * @note The index is relative to the host, i.e., doesn't pack the host index.\n     */\n    get(index) {\n        return this._cache[index] ?? null;\n    }\n    /** Number of textures allocated in the manager. */\n    get allocatedCount() {\n        return this._cache.length;\n    }\n    /**\n     * Number of textures in the manager.\n     *\n     * @note For performance reasons, avoid calling this method when possible.\n     */\n    get count() {\n        let count = 0;\n        for (const res of this._cache) {\n            if (res && res.index >= 0)\n                ++count;\n        }\n        return count;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n    /**\n     * Destroy the instance.\n     *\n     * @note This method takes care of the prototype destruction.\n     *\n     * @hidden\n     */\n    _destroy(instance) {\n        const index = instance.index;\n        instance._index = -1;\n        instance._id = -1;\n        this._cache[index] = null;\n        if (!this.engine.erasePrototypeOnDestroy)\n            return;\n        if (!this._destructor)\n            this._destructor = createDestroyedProxy(this._host, this._template);\n        Object.setPrototypeOf(instance, this._destructor);\n    }\n    /**\n     * Mark all instances as destroyed.\n     *\n     * @hidden\n     */\n    _clear() {\n        if (!this.engine.erasePrototypeOnDestroy)\n            return;\n        for (let i = 0; i < this._cache.length; ++i) {\n            const instance = this._cache[i];\n            if (instance)\n                this._destroy(instance);\n        }\n        this._cache.length = 0;\n    }\n}\n", "import { LogTag } from './index.js';\nimport { AnimationComponent, BrokenComponent, CollisionComponent, DestroyedComponentInstance, InputComponent, LightComponent, MeshComponent, PhysXComponent, TextComponent, ViewComponent, } from './wonderland.js';\n/**\n * Manage all component managers in a scene.\n *\n * @hidden\n */\nexport class ComponentManagers {\n    /** Animation manager index. */\n    animation = -1;\n    /** Collision manager index. */\n    collision = -1;\n    /** JavaScript manager index. */\n    js = -1;\n    /** Physx manager index. */\n    physx = -1;\n    /** View manager index. */\n    view = -1;\n    /**\n     * Component class instances per type to avoid GC.\n     *\n     * @note Maps the manager index to the list of components.\n     *\n     * @todo: Refactor ResourceManager and re-use for components.\n     */\n    _cache = [];\n    /** Manager index to component class. */\n    _constructors;\n    /* Manager name to the manager index. */\n    _nativeManagers = new Map();\n    /** Host instance. */\n    _scene;\n    constructor(scene) {\n        this._scene = scene;\n        const wasm = this._scene.engine.wasm;\n        const native = [\n            AnimationComponent,\n            CollisionComponent,\n            InputComponent,\n            LightComponent,\n            MeshComponent,\n            PhysXComponent,\n            TextComponent,\n            ViewComponent,\n        ];\n        this._cache = new Array(native.length);\n        this._constructors = new Array(native.length);\n        for (const Class of native) {\n            const ptr = wasm.tempUTF8(Class.TypeName);\n            const manager = wasm._wl_scene_get_component_manager_index(scene._index, ptr);\n            this._constructors;\n            this._constructors[manager] = Class;\n            this._cache[manager] = [];\n            this._nativeManagers.set(Class.TypeName, manager);\n        }\n        this.animation = this._nativeManagers.get(AnimationComponent.TypeName);\n        this.collision = this._nativeManagers.get(CollisionComponent.TypeName);\n        this.physx = this._nativeManagers.get(PhysXComponent.TypeName);\n        this.view = this._nativeManagers.get(ViewComponent.TypeName);\n        const ptr = wasm.tempUTF8('js');\n        this.js = wasm._wl_scene_get_component_manager_index(scene._index, ptr);\n        this._cache[this.js] = [];\n    }\n    createJs(index, id, type, object) {\n        const wasm = this._scene.engine.wasm;\n        const ctor = wasm._componentTypes[type];\n        if (!ctor) {\n            throw new Error(`Type index ${type} isn't registered`);\n        }\n        const log = this._scene.engine.log;\n        let component = null;\n        try {\n            component = new ctor(this._scene, this.js, id);\n        }\n        catch (e) {\n            log.error(LogTag.Component, `Exception during instantiation of component ${ctor.TypeName}`);\n            log.error(LogTag.Component, e);\n            component = new BrokenComponent(this._scene);\n        }\n        component._object = this._scene.wrap(object);\n        try {\n            component.resetProperties();\n        }\n        catch (e) {\n            log.error(LogTag.Component, `Exception during ${component.type} resetProperties() on object ${component.object.name}`);\n            log.error(LogTag.Component, e);\n        }\n        this._scene._jsComponents[index] = component;\n        /* Add to cache. This is required because destruction is\n         * ID-based and not index-based. */\n        this._cache[this.js][id] = component;\n        return component;\n    }\n    /**\n     * Retrieve a cached component.\n     *\n     * @param manager The manager index.\n     * @param id The component id.\n     * @returns The component if cached, `null` otherwise.\n     */\n    get(manager, id) {\n        return this._cache[manager][id] ?? null;\n    }\n    /**\n     * Wrap the animation.\n     *\n     * @param id Id to wrap.\n     * @returns The previous instance if it was cached, or a new one.\n     */\n    wrapAnimation(id) {\n        return this.wrapNative(this.animation, id);\n    }\n    /**\n     * Wrap the collision.\n     *\n     * @param id Id to wrap.\n     * @returns The previous instance if it was cached, or a new one.\n     */\n    wrapCollision(id) {\n        return this.wrapNative(this.collision, id);\n    }\n    /**\n     * Wrap the view.\n     *\n     * @param id Id to wrap.\n     * @returns The previous instance if it was cached, or a new one.\n     */\n    wrapView(id) {\n        return this.wrapNative(this.view, id);\n    }\n    /**\n     * Wrap the physx.\n     *\n     * @param id Id to wrap.\n     * @returns The previous instance if it was cached, or a new one.\n     */\n    wrapPhysx(id) {\n        return this.wrapNative(this.physx, id);\n    }\n    /**\n     * Retrieves a component instance if it exists, or create and cache\n     * a new one.\n     *\n     * @note This api is meant to be used internally. Please have a look at\n     * {@link Object3D.addComponent} instead.\n     *\n     * @param componentType Component manager index\n     * @param componentId Component id in the manager\n     *\n     * @returns JavaScript instance wrapping the native component\n     */\n    wrapNative(manager, id) {\n        if (id < 0)\n            return null;\n        const cache = this._cache[manager];\n        if (cache[id])\n            return cache[id];\n        const scene = this._scene;\n        const Class = this._constructors[manager];\n        const component = new Class(scene, manager, id);\n        cache[id] = component;\n        return component;\n    }\n    /**\n     * Wrap a native or js component.\n     *\n     * @throws For JavaScript components that weren't previously cached,\n     * since that would be a bug in the runtime / api.\n     *\n     * @param manager The manager index.\n     * @param id The id to wrap.\n     * @returns The previous instance if it was cached, or a new one.\n     */\n    wrapAny(manager, id) {\n        if (id < 0)\n            return null;\n        if (manager === this.js) {\n            const found = this._cache[this.js][id];\n            if (!found) {\n                throw new Error('JS components must always be cached');\n            }\n            return found.constructor !== BrokenComponent ? found : null;\n        }\n        return this.wrapNative(manager, id);\n    }\n    getNativeManager(name) {\n        const manager = this._nativeManagers.get(name);\n        return manager !== undefined ? manager : null;\n    }\n    /**\n     * Perform cleanup upon component destruction.\n     *\n     * @param instance The instance to destroy.\n     *\n     * @hidden\n     */\n    destroy(instance) {\n        const localId = instance._localId;\n        const manager = instance._manager;\n        instance._id = -1;\n        instance._localId = -1;\n        instance._manager = -1;\n        const erasePrototypeOnDestroy = this._scene.engine.erasePrototypeOnDestroy;\n        /* Destroy the prototype of this instance to avoid using a dangling component */\n        if (erasePrototypeOnDestroy && instance) {\n            Object.setPrototypeOf(instance, DestroyedComponentInstance);\n        }\n        /* Remove from the cache to avoid side-effects when\n         * re-creating a component with the same id. */\n        this._cache[manager][localId] = null;\n    }\n    /** Number of managers, including the JavaScript manager. */\n    get managersCount() {\n        /* +1 to account for the JavaScript manager */\n        return this._nativeManagers.size + 1;\n    }\n}\n", "/**\n * Fetch a file as an `ArrayBuffer`, with fetch progress passed to a callback.\n *\n * @param path Path of the file to fetch\n * @param onProgress Callback receiving the current fetch progress and total\n *     size, in bytes. Also called a final time on completion.\n * @returns Promise that resolves when the fetch successfully completes\n */\nexport function fetchWithProgress(path, onProgress) {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', path);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = (progress) => {\n            if (progress.lengthComputable) {\n                onProgress?.(progress.loaded, progress.total);\n            }\n        };\n        xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                const buffer = xhr.response;\n                onProgress?.(buffer.byteLength, buffer.byteLength);\n                resolve(buffer);\n            }\n            else {\n                reject(xhr.statusText);\n            }\n        };\n        xhr.onerror = () => reject(xhr.statusText);\n        xhr.send();\n    });\n}\n/**\n * Get parent path from a URL.\n *\n * @param url URL to get the parent from.\n * @returns Parent URL without trailing slash.\n */\nexport function getBaseUrl(url) {\n    return url.substring(0, url.lastIndexOf('/'));\n}\n/**\n * Get the filename of a url.\n *\n * @param url The url to extract the name from.\n * @returns A string containing the filename. If no filename is found,\n *     returns the input string.\n */\nexport function getFilename(url) {\n    if (url.endsWith('/')) {\n        /* Remove trailing slash. */\n        url = url.substring(0, url.lastIndexOf('/'));\n    }\n    const lastSlash = url.lastIndexOf('/');\n    if (lastSlash < 0)\n        return url;\n    return url.substring(lastSlash + 1);\n}\n/**\n * Promise resolved once the image is ready to be used\n *\n * @param image The image, video, or canvas to wait for.\n * @returns A promise with the image, once it's ready to be used.\n */\nexport function onImageReady(image) {\n    return new Promise((res, rej) => {\n        if (image instanceof HTMLCanvasElement) {\n            res(image);\n        }\n        else if (image instanceof HTMLVideoElement) {\n            if (image.readyState >= 2) {\n                res(image);\n                return;\n            }\n            image.addEventListener('loadeddata', () => {\n                if (image.readyState >= 2)\n                    res(image);\n            }, { once: true });\n            return;\n        }\n        else if (image.complete) {\n            res(image);\n            return;\n        }\n        image.addEventListener('load', () => res(image), { once: true });\n        image.addEventListener('error', rej, { once: true });\n    });\n}\n", "import { ComponentManagers } from './component.js';\nimport { ResourceManager } from './resources/resource.js';\nimport { fetchWithProgress, getBaseUrl, getFilename } from './utils/fetch.js';\nimport { isString } from './utils/object.js';\nimport { Animation, DestroyedObjectInstance, Object3D, Skin, } from './wonderland.js';\n/**\n * Base class for prefabs, scenes, and glTF.\n *\n * For more information have a look at the derived types:\n * - {@link Scene} for Wonderland Engine activatable scenes (.bin)\n * - {@link PrefabGLTF} for glTF scenes\n *\n * #### Resources\n *\n * While **meshes**, **textures**, and **materials** are shared\n * on the {@link WonderlandEngine} instance, a scene comes with:\n * - Animations: Managed using {@link Prefab.animations}\n * - Skins: Managed using {@link Prefab.skins}\n *\n * Those resources are bound to the object hierarchy and are thus required to be\n * per-scene.\n *\n * #### Destruction\n *\n * For now, destroying a scene doesn't automatically remove the resources it\n * references in the engine. For more information, have a look at the\n * {@link Scene.destroy} method.\n *\n * #### Isolation\n *\n * It's forbidden to mix objects and components from different scenes, e.g.,\n *\n * ```js\n * const objA = sceneA.addObject();\n * const objB = sceneB.addObject();\n * objA.parent = objB; // Throws\n * ```\n *\n * @category scene\n *\n * @since 1.2.0\n */\nexport class Prefab {\n    /**\n     * Load an `ArrayBuffer` using fetch.\n     *\n     * @param opts The url or options.\n     * @param progress Progress callback\n     * @returns An {@link InMemoryLoadOptions} object.\n     *\n     * @hidden\n     */\n    static async loadBuffer(opts, progress) {\n        const url = isString(opts) ? opts : opts.url;\n        const buffer = await fetchWithProgress(url, progress);\n        const baseURL = getBaseUrl(url);\n        const filename = getFilename(url);\n        return { buffer, baseURL, filename };\n    }\n    /**\n     * Validate the in memory options.\n     *\n     * @param options Options to validate.\n     * @returns Validated options object.\n     *\n     * @hidden\n     */\n    static validateBufferOptions(options) {\n        const { buffer, baseURL, filename = 'scene.bin' } = options;\n        if (!buffer) {\n            throw new Error(\"missing 'buffer' in options\");\n        }\n        if (!isString(baseURL)) {\n            throw new Error(\"missing 'baseURL' in options\");\n        }\n        const url = baseURL ? `${baseURL}/${filename}` : filename;\n        return { buffer, baseURL, url };\n    }\n    /** Index in the scene manager. @hidden */\n    _index;\n    /** @hidden */\n    _engine;\n    /**\n     * Component manager caching to avoid GC.\n     *\n     * @hidden\n     */\n    _components;\n    /**\n     * JavaScript components for this scene.\n     *\n     * This array is moved into the WASM instance upon activation.\n     *\n     * @hidden\n     */\n    _jsComponents = [];\n    /** @hidden */\n    _animations;\n    /** @hidden */\n    _skins;\n    /**\n     * Object class instances to avoid GC.\n     *\n     * @hidden\n     */\n    _objectCache = [];\n    /**\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    constructor(engine, index) {\n        this._engine = engine;\n        this._index = index;\n        this._components = new ComponentManagers(this);\n        this._animations = new ResourceManager(this, Animation);\n        this._skins = new ResourceManager(this, Skin);\n    }\n    /**\n     * Add an object to the scene.\n     *\n     * @param parent Parent object or `null`.\n     * @returns A newly created object.\n     */\n    addObject(parent = null) {\n        this.assertOrigin(parent);\n        const parentId = parent ? parent._id : 0;\n        const objectId = this.engine.wasm._wl_scene_add_object(this._index, parentId);\n        return this.wrap(objectId);\n    }\n    /**\n     * Batch-add objects to the scene.\n     *\n     * Will provide better performance for adding multiple objects (e.g. > 16)\n     * than calling {@link Scene#addObject} repeatedly in a loop.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * @experimental This API might change in upcoming versions.\n     *\n     * @param count Number of objects to add.\n     * @param parent Parent object or `null`, default `null`.\n     * @param componentCountHint Hint for how many components in total will\n     *      be added to the created objects afterwards, default `0`.\n     * @returns Newly created objects\n     */\n    addObjects(count, parent = null, componentCountHint = 0) {\n        const parentId = parent ? parent._id : 0;\n        this.engine.wasm.requireTempMem(count * 2);\n        const actualCount = this.engine.wasm._wl_scene_add_objects(this._index, parentId, count, componentCountHint || 0, this.engine.wasm._tempMem, this.engine.wasm._tempMemSize >> 1);\n        const ids = this.engine.wasm._tempMemUint16.subarray(0, actualCount);\n        const wrapper = this.wrap.bind(this);\n        const objects = Array.from(ids, wrapper);\n        return objects;\n    }\n    /**\n     * Pre-allocate memory for a given amount of objects and components.\n     *\n     * Will provide better performance for adding objects later with {@link Scene#addObject}\n     * and {@link Scene#addObjects}.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * conservatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param objectCount Number of objects to add.\n     * @param componentCountPerType Amount of components to\n     *      allocate for {@link Object3D.addComponent}, e.g. `{mesh: 100, collision: 200, \"my-comp\": 100}`.\n     * @since 0.8.10\n     */\n    reserveObjects(objectCount, componentCountPerType) {\n        const wasm = this.engine.wasm;\n        componentCountPerType = componentCountPerType || {};\n        const names = Object.keys(componentCountPerType);\n        const countsPerTypeIndex = wasm._tempMemInt;\n        for (let i = 0; i < this._components.managersCount; ++i) {\n            countsPerTypeIndex[i] = 0;\n        }\n        for (const name of names) {\n            const count = componentCountPerType[name];\n            const nativeIndex = this._components.getNativeManager(name);\n            countsPerTypeIndex[nativeIndex !== null ? nativeIndex : this._components.js] +=\n                count;\n        }\n        wasm._wl_scene_reserve_objects(this._index, objectCount, wasm._tempMem);\n    }\n    /**\n     * Root object's children.\n     *\n     * See {@link Object3D.getChildren} for more information.\n     *\n     * @param out Destination array, expected to have at least `this.childrenCount` elements.\n     * @returns The `out` parameter.\n     */\n    getChildren(out = new Array(this.childrenCount)) {\n        const root = this.wrap(0);\n        return root.getChildren(out);\n    }\n    /**\n     * Top-level objects of this scene.\n     *\n     * See {@link Object3D.children} for more information.\n     *\n     * @since 1.2.0\n     */\n    get children() {\n        const root = this.wrap(0);\n        return root.children;\n    }\n    /** The number of children of the root object. */\n    get childrenCount() {\n        return this.engine.wasm._wl_object_get_children_count(0);\n    }\n    /**\n     * Search for objects matching the name.\n     *\n     * See {@link Object3D.findByName} for more information.\n     *\n     * @param name The name to search for.\n     * @param recursive If `true`, the method will look at all the objects of\n     *     this scene. If `false`, this method will only perform the search in\n     *     root objects.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.2.0\n     */\n    findByName(name, recursive = false) {\n        const root = this.wrap(0);\n        return root.findByName(name, recursive);\n    }\n    /**\n     * Search for all **top-level** objects matching the name.\n     *\n     * See {@link Object3D.findByNameDirect} for more information.\n     *\n     * @param name The name to search for.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.2.0\n     */\n    findByNameDirect(name) {\n        const root = this.wrap(0);\n        return root.findByNameDirect(name);\n    }\n    /**\n     * Search for **all objects** matching the name.\n     *\n     * See {@link Object3D.findByNameRecursive} for more information.\n     *\n     * @param name The name to search for.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.2.0\n     */\n    findByNameRecursive(name) {\n        const root = this.wrap(0);\n        return root.findByNameRecursive(name);\n    }\n    /**\n     * Wrap an object ID using {@link Object}.\n     *\n     * @note This method performs caching and will return the same\n     * instance on subsequent calls.\n     *\n     * @param objectId ID of the object to create.\n     *\n     * @returns The object\n     */\n    wrap(objectId) {\n        const cache = this._objectCache;\n        const o = cache[objectId] || (cache[objectId] = new Object3D(this, objectId));\n        return o;\n    }\n    /**\n     * Destroy the scene.\n     *\n     * For now, destroying a scene doesn't remove the resources it references. Thus,\n     * you will need to reload a main scene to free the memory.\n     *\n     * For more information about destruction, have a look at the {@link Scene.destroy} method.\n     */\n    destroy() {\n        this.engine._destroyScene(this);\n    }\n    /* Public Getters & Setters */\n    /**\n     * `true` if the scene is active, `false` otherwise.\n     *\n     * Always false for {@link Prefab} and {@link PrefabGLTF}.\n     */\n    get isActive() {\n        return !!this.engine.wasm._wl_scene_active(this._index);\n    }\n    /**\n     * Relative directory of the scene that was loaded.\n     *\n     * This is used for loading any files relative to the scene.\n     */\n    get baseURL() {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_scene_get_baseURL(this._index);\n        if (!ptr)\n            return '';\n        return wasm.UTF8ToString(ptr);\n    }\n    /**\n     * Filename used when loading the file.\n     *\n     * If the scenes was loaded from memory and no filename was provided,\n     * this accessor will return an empty string.\n     */\n    get filename() {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_scene_get_filename(this._index);\n        if (!ptr)\n            return '';\n        return wasm.UTF8ToString(ptr);\n    }\n    /** Animation resources */\n    get animations() {\n        return this._animations;\n    }\n    /** Skin resources */\n    get skins() {\n        return this._skins;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n    /**\n     * `true` if the object is destroyed, `false` otherwise.\n     *\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\n     * reading a class attribute / method will throw.\n     */\n    get isDestroyed() {\n        return this._index < 0;\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Scene(destroyed)';\n        }\n        return `Scene('${this.filename}', ${this._index})`;\n    }\n    /**\n     * Checks that the input's scene is the same as this instance.\n     *\n     * It is forbidden to mix objects and components from different scenes, e.g.,\n     *\n     * ```js\n     * const objA = sceneA.addObject();\n     * const objB = sceneA.addObject();\n     * objA.parent = objB; // Throws\n     * ```\n     *\n     * @param other Object / component to check.\n     *\n     * @throws If other's scene isn't the same reference as this.\n     */\n    assertOrigin(other) {\n        if (other && other.scene !== this) {\n            throw new Error(`Attempt to use ${other} from ${other.scene} in ${this}`);\n        }\n    }\n    /**\n     * Download dependencies and initialize the scene.\n     *\n     * @hidden\n     */\n    _initialize() {\n        this.engine.wasm._wl_scene_initialize(this._index);\n    }\n    /**\n     * Perform cleanup upon object destruction.\n     *\n     * @param localId The id to destroy.\n     *\n     * @hidden\n     */\n    _destroyObject(localId) {\n        const instance = this._objectCache[localId];\n        if (!instance)\n            return;\n        instance._id = -1;\n        instance._localId = -1;\n        /* Destroy the prototype of this instance to avoid using a dangling object */\n        if (this.engine.erasePrototypeOnDestroy && instance) {\n            Object.setPrototypeOf(instance, DestroyedObjectInstance);\n        }\n        /* Remove from the cache to avoid side-effects when\n         * re-creating an object with the same id. */\n        this._objectCache[localId] = null;\n    }\n}\n", "/**\n * Schedule a timeout, resolving in `time` milliseconds.\n *\n * @note `setTimeout` being a macro-task, this method can\n * be use as a debounce call.\n *\n * @param time The time until it resolves, in milliseconds.\n * @returns A promise resolving in `time` ms.\n */\nexport function timeout(time) {\n    return new Promise((res) => setTimeout(res, time));\n}\n/**\n * Clamp the value in the range [min; max].\n *\n * @param val The value to clamp.\n * @param min The minimum value (inclusive).\n * @param max The maximum value (inclusive).\n * @returns The clamped value.\n */\nexport function clamp(val, min, max) {\n    return Math.max(Math.min(max, val), min);\n}\n/**\n * Capitalize the first letter in a string.\n *\n * @note The string must be UTF-8.\n *\n * @param str The string to format.\n * @returns The string with the first letter capitalized.\n */\nexport function capitalizeFirstUTF8(str) {\n    return `${str[0].toUpperCase()}${str.substring(1)}`;\n}\n/**\n * Create a proxy throwing destroyed errors upon access.\n *\n * @param type The type to display upon error\n * @returns The proxy instance\n */\nexport function createDestroyedProxy(type) {\n    return new Proxy({}, {\n        get(_, param) {\n            if (param === 'isDestroyed')\n                return true;\n            throw new Error(`Cannot read '${param}' of destroyed ${type}`);\n        },\n        set(_, param) {\n            throw new Error(`Cannot write '${param}' of destroyed ${type}`);\n        },\n    });\n}\n", "/**\n * Types\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { nativeProperty, enumerable } from './decorators.js';\nimport { isImageLike, isNumber, isString } from './utils/object.js';\nimport { Emitter } from './utils/event.js';\nimport { Type, defaultPropertyCloner } from './property.js';\nimport { Resource, SceneResource } from './resources/resource.js';\nimport { Prefab } from './prefab.js';\nimport { createDestroyedProxy } from './utils/misc.js';\n/**\n * Wonderland Engine API\n * @namespace WL\n */\n/**\n * Default set of logging tags used by the API.\n */\nexport var LogTag;\n(function (LogTag) {\n    /** Initialization, component registration, etc... */\n    LogTag[LogTag[\"Engine\"] = 0] = \"Engine\";\n    /** Scene loading */\n    LogTag[LogTag[\"Scene\"] = 1] = \"Scene\";\n    /** Component init, update, etc... */\n    LogTag[LogTag[\"Component\"] = 2] = \"Component\";\n})(LogTag || (LogTag = {}));\n/**\n * Collider type enum for {@link CollisionComponent}.\n */\nexport var Collider;\n(function (Collider) {\n    /**\n     * **Sphere Collider**:\n     *\n     * Simplest and most performant collision shape. If this type is set on a\n     * {@link CollisionComponent}, only the first component of\n     * {@link CollisionComponent#extents} will be used to determine the radius.\n     */\n    Collider[Collider[\"Sphere\"] = 0] = \"Sphere\";\n    /**\n     * **Axis Aligned Bounding Box Collider**:\n     *\n     * Box that is always aligned to XYZ axis. It cannot be rotated but is more\n     * efficient than {@link Collider.Box}.\n     */\n    Collider[Collider[\"AxisAlignedBox\"] = 1] = \"AxisAlignedBox\";\n    /**\n     * **Aligned Bounding Box Collider**:\n     *\n     * Box that matches the object's rotation and translation correctly. This\n     * is the least efficient collider and should only be chosen over\n     * {@link Collider.Sphere} and {@link Collider.AxisAlignedBox} if really\n     * necessary.\n     */\n    Collider[Collider[\"Box\"] = 2] = \"Box\";\n})(Collider || (Collider = {}));\n/**\n * Alignment type enum for {@link TextComponent}.\n */\nexport var Alignment;\n(function (Alignment) {\n    /** Text start is at object origin */\n    Alignment[Alignment[\"Left\"] = 0] = \"Left\";\n    /** Text center is at object origin */\n    Alignment[Alignment[\"Center\"] = 1] = \"Center\";\n    /** Text end is at object origin */\n    Alignment[Alignment[\"Right\"] = 2] = \"Right\";\n})(Alignment || (Alignment = {}));\n/**\n * Vertical alignment type enum for {@link TextComponent}.\n */\nexport var VerticalAlignment;\n(function (VerticalAlignment) {\n    /** Text line is at object origin */\n    VerticalAlignment[VerticalAlignment[\"Line\"] = 0] = \"Line\";\n    /** Text middle is at object origin */\n    VerticalAlignment[VerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /** Text top is at object origin */\n    VerticalAlignment[VerticalAlignment[\"Top\"] = 2] = \"Top\";\n    /** Text bottom is at object origin */\n    VerticalAlignment[VerticalAlignment[\"Bottom\"] = 3] = \"Bottom\";\n})(VerticalAlignment || (VerticalAlignment = {}));\n/**\n * Justification type enum for {@link TextComponent}.\n *\n * @deprecated Please use {@link VerticalAlignment} instead.\n */\nexport const Justification = VerticalAlignment;\n/**\n * Effect type enum for {@link TextComponent}.\n */\nexport var TextEffect;\n(function (TextEffect) {\n    /** Text is rendered normally */\n    TextEffect[TextEffect[\"None\"] = 0] = \"None\";\n    /** Text is rendered with an outline */\n    TextEffect[TextEffect[\"Outline\"] = 1] = \"Outline\";\n})(TextEffect || (TextEffect = {}));\n/**\n * Input type enum for {@link InputComponent}.\n */\nexport var InputType;\n(function (InputType) {\n    /** Head input */\n    InputType[InputType[\"Head\"] = 0] = \"Head\";\n    /** Left eye input */\n    InputType[InputType[\"EyeLeft\"] = 1] = \"EyeLeft\";\n    /** Right eye input */\n    InputType[InputType[\"EyeRight\"] = 2] = \"EyeRight\";\n    /** Left controller input */\n    InputType[InputType[\"ControllerLeft\"] = 3] = \"ControllerLeft\";\n    /** Right controller input */\n    InputType[InputType[\"ControllerRight\"] = 4] = \"ControllerRight\";\n    /** Left ray input */\n    InputType[InputType[\"RayLeft\"] = 5] = \"RayLeft\";\n    /** Right ray input */\n    InputType[InputType[\"RayRight\"] = 6] = \"RayRight\";\n})(InputType || (InputType = {}));\n/**\n * Light type enum for {@link LightComponent}.\n */\nexport var LightType;\n(function (LightType) {\n    /** Point light */\n    LightType[LightType[\"Point\"] = 0] = \"Point\";\n    /** Spot light */\n    LightType[LightType[\"Spot\"] = 1] = \"Spot\";\n    /** Sun light / Directional light */\n    LightType[LightType[\"Sun\"] = 2] = \"Sun\";\n})(LightType || (LightType = {}));\n/**\n * Animation state of {@link AnimationComponent}.\n */\nexport var AnimationState;\n(function (AnimationState) {\n    /** Animation is currently playing */\n    AnimationState[AnimationState[\"Playing\"] = 0] = \"Playing\";\n    /** Animation is paused and will continue at current playback\n     * time on {@link AnimationComponent#play} */\n    AnimationState[AnimationState[\"Paused\"] = 1] = \"Paused\";\n    /** Animation is stopped */\n    AnimationState[AnimationState[\"Stopped\"] = 2] = \"Stopped\";\n})(AnimationState || (AnimationState = {}));\n/**\n * Rigid body force mode for {@link PhysXComponent#addForce} and {@link PhysXComponent#addTorque}.\n *\n * [PhysX API Reference](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxapi/files/structPxForceMode.html)\n */\nexport var ForceMode;\n(function (ForceMode) {\n    /** Apply as force */\n    ForceMode[ForceMode[\"Force\"] = 0] = \"Force\";\n    /** Apply as impulse */\n    ForceMode[ForceMode[\"Impulse\"] = 1] = \"Impulse\";\n    /** Apply as velocity change, mass dependent */\n    ForceMode[ForceMode[\"VelocityChange\"] = 2] = \"VelocityChange\";\n    /** Apply as mass dependent force */\n    ForceMode[ForceMode[\"Acceleration\"] = 3] = \"Acceleration\";\n})(ForceMode || (ForceMode = {}));\n/**\n * Collision callback event type.\n */\nexport var CollisionEventType;\n(function (CollisionEventType) {\n    /** Touch/contact detected, collision */\n    CollisionEventType[CollisionEventType[\"Touch\"] = 0] = \"Touch\";\n    /** Touch/contact lost, uncollide */\n    CollisionEventType[CollisionEventType[\"TouchLost\"] = 1] = \"TouchLost\";\n    /** Touch/contact with trigger detected */\n    CollisionEventType[CollisionEventType[\"TriggerTouch\"] = 2] = \"TriggerTouch\";\n    /** Touch/contact with trigger lost */\n    CollisionEventType[CollisionEventType[\"TriggerTouchLost\"] = 3] = \"TriggerTouchLost\";\n})(CollisionEventType || (CollisionEventType = {}));\n/**\n * Rigid body {@link PhysXComponent#shape}.\n *\n * [PhysX SDK Guide](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/Geometry.html#geometry-types).\n */\nexport var Shape;\n(function (Shape) {\n    /** No shape. */\n    Shape[Shape[\"None\"] = 0] = \"None\";\n    /** Sphere shape. */\n    Shape[Shape[\"Sphere\"] = 1] = \"Sphere\";\n    /** Capsule shape. */\n    Shape[Shape[\"Capsule\"] = 2] = \"Capsule\";\n    /** Box shape. */\n    Shape[Shape[\"Box\"] = 3] = \"Box\";\n    /** Plane shape. */\n    Shape[Shape[\"Plane\"] = 4] = \"Plane\";\n    /** Convex mesh shape. */\n    Shape[Shape[\"ConvexMesh\"] = 5] = \"ConvexMesh\";\n    /** Triangle mesh shape. */\n    Shape[Shape[\"TriangleMesh\"] = 6] = \"TriangleMesh\";\n})(Shape || (Shape = {}));\n/**\n * Mesh attribute enum.\n * @since 0.9.0\n */\nexport var MeshAttribute;\n(function (MeshAttribute) {\n    /** Position attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Position\"] = 0] = \"Position\";\n    /** Tangent attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"Tangent\"] = 1] = \"Tangent\";\n    /** Normal attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Normal\"] = 2] = \"Normal\";\n    /** Texture coordinate attribute, 2 floats */\n    MeshAttribute[MeshAttribute[\"TextureCoordinate\"] = 3] = \"TextureCoordinate\";\n    /** Color attribute, 4 floats, RGBA, range `0` to `1` */\n    MeshAttribute[MeshAttribute[\"Color\"] = 4] = \"Color\";\n    /** Joint id attribute, 8 unsigned ints */\n    MeshAttribute[MeshAttribute[\"JointId\"] = 5] = \"JointId\";\n    /** Joint weights attribute, 8 floats */\n    MeshAttribute[MeshAttribute[\"JointWeight\"] = 6] = \"JointWeight\";\n})(MeshAttribute || (MeshAttribute = {}));\n/** Proxy used to override prototypes of destroyed objects. */\nexport const DestroyedObjectInstance = createDestroyedProxy('object');\n/** Proxy used to override prototypes of destroyed components. */\nexport const DestroyedComponentInstance = createDestroyedProxy('component');\n/** Proxy used to override prototypes of destroyed prefabs. */\nexport const DestroyedPrefabInstance = createDestroyedProxy('prefab/scene');\n/**\n * Check whether a given shape is a mesh or not.\n *\n * @param shape The shape to check.\n * @returns `true` if the shape is a mesh, `false` if it's a primitive.\n */\nfunction isMeshShape(shape) {\n    return shape === Shape.ConvexMesh || shape === Shape.TriangleMesh;\n}\n/**\n * Check whether an object is the {@link Component} class or not,\n *\n * @note This method if foolproof to developers inadvertently using\n * multiple Wonderland Engine API in a bundle.\n *\n * @param value The object to check.\n * @returns `true` if the object is a {@link Component} class, `false` otherwise.\n */\nfunction isBaseComponentClass(value) {\n    return (!!value &&\n        value.hasOwnProperty('_isBaseComponent') &&\n        value._isBaseComponent);\n}\n/**\n * Constants.\n */\n/**\n * Default world up vector.\n */\nconst UP_VECTOR = [0, 1, 0];\nconst SQRT_3 = Math.sqrt(3);\n/**\n * Provides access to a component instance of a specified component type.\n *\n * @example\n *\n * This is how you extend this class to create your own custom\n * component:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n *\n * export class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myBoolean: { type: Type.Boolean, default: false },\n *     };\n *     start() {}\n *     onActivate() {}\n *     onDeactivate() {}\n *     update(dt) {}\n * }\n * ```\n *\n * In a component, the scene can be accessed using `this.scene`:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n *\n * export class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     start() {\n *         const obj = this.scene.addObject();\n *     }\n * }\n * ```\n */\nexport class Component {\n    /**\n     * Pack scene index and component id.\n     *\n     * @param scene Scene index.\n     * @param id Component id.\n     * @returns The packed id.\n     *\n     * @hidden\n     */\n    static _pack(scene, id) {\n        return (scene << 22) | id;\n    }\n    /**\n     * `true` for every class inheriting from this class.\n     *\n     * @note This is a workaround for `instanceof` to prevent issues\n     * that could arise when an application ends up using multiple API versions.\n     *\n     * @hidden\n     */\n    static _isBaseComponent = true;\n    /**\n     * Fixed order of attributes in the `Properties` array.\n     *\n     * @note This is used for parameter deserialization and is filled during\n     * component registration.\n     *\n     * @hidden\n     */\n    static _propertyOrder = [];\n    /**\n     * Unique identifier for this component class.\n     *\n     * This is used to register, add, and retrieve components of a given type.\n     */\n    static TypeName;\n    /**\n     * Properties of this component class.\n     *\n     * Properties are public attributes that can be configured via the\n     * Wonderland Editor.\n     *\n     * Example:\n     *\n     * ```js\n     * import { Component, Type } from '@wonderlandengine/api';\n     * class MyComponent extends Component {\n     *     static TypeName = 'my-component';\n     *     static Properties = {\n     *         myBoolean: { type: Type.Boolean, default: false },\n     *         myFloat: { type: Type.Float, default: false },\n     *         myTexture: { type: Type.Texture, default: null },\n     *     };\n     * }\n     * ```\n     *\n     * Properties are automatically added to each component instance, and are\n     * accessible like any JS attribute:\n     *\n     * ```js\n     * // Creates a new component and set each properties value:\n     * const myComponent = object.addComponent(MyComponent, {\n     *     myBoolean: true,\n     *     myFloat: 42.0,\n     *     myTexture: null\n     * });\n     *\n     * // You can also override the properties on the instance:\n     * myComponent.myBoolean = false;\n     * myComponent.myFloat = -42.0;\n     * ```\n     *\n     * #### References\n     *\n     * Reference types (i.e., mesh, object, etc...) can also be listed as **required**:\n     *\n     * ```js\n     * import {Component, Property} from '@wonderlandengine/api';\n     *\n     * class MyComponent extends Component {\n     *     static Properties = {\n     *         myObject: Property.object({required: true}),\n     *         myAnimation: Property.animation({required: true}),\n     *         myTexture: Property.texture({required: true}),\n     *         myMesh: Property.mesh({required: true}),\n     *     }\n     * }\n     * ```\n     *\n     * Please note that references are validated **once** before the call to {@link Component.start} only,\n     * via the {@link Component.validateProperties} method.\n     */\n    static Properties;\n    /**\n     * When set to `true`, the child class inherits from the parent\n     * properties, as shown in the following example:\n     *\n     * ```js\n     * import {Component, Property} from '@wonderlandengine/api';\n     *\n     * class Parent extends Component {\n     *     static TypeName = 'parent';\n     *     static Properties = {parentName: Property.string('parent')}\n     * }\n     *\n     * class Child extends Parent {\n     *     static TypeName = 'child';\n     *     static Properties = {name: Property.string('child')}\n     *     static InheritProperties = true;\n     *\n     *     start() {\n     *         // Works because `InheritProperties` is `true`.\n     *         console.log(`${this.name} inherits from ${this.parentName}`);\n     *     }\n     * }\n     * ```\n     *\n     * @note Properties defined in descendant classes will override properties\n     * with the same name defined in ancestor classes.\n     *\n     * Defaults to `true`.\n     */\n    static InheritProperties;\n    /**\n     * Called when this component class is registered.\n     *\n     * @example\n     *\n     * This callback can be used to register dependencies of a component,\n     * e.g., component classes that need to be registered in order to add\n     * them at runtime with {@link Object3D.addComponent}, independent of whether\n     * they are used in the editor.\n     *\n     * ```js\n     * class Spawner extends Component {\n     *     static TypeName = 'spawner';\n     *\n     *     static onRegister(engine) {\n     *         engine.registerComponent(SpawnedComponent);\n     *     }\n     *\n     *     // You can now use addComponent with SpawnedComponent\n     * }\n     * ```\n     *\n     * @example\n     *\n     * This callback can be used to register different implementations of a\n     * component depending on client features or API versions.\n     *\n     * ```js\n     * // Properties need to be the same for all implementations!\n     * const SharedProperties = {};\n     *\n     * class Anchor extends Component {\n     *     static TypeName = 'spawner';\n     *     static Properties = SharedProperties;\n     *\n     *     static onRegister(engine) {\n     *         if(navigator.xr === undefined) {\n     *             /* WebXR unsupported, keep this dummy component *\\/\n     *             return;\n     *         }\n     *         /* WebXR supported! Override already registered dummy implementation\n     *          * with one depending on hit-test API support *\\/\n     *         engine.registerComponent(window.HitTestSource === undefined ?\n     *             AnchorWithoutHitTest : AnchorWithHitTest);\n     *     }\n     *\n     *     // This one implements no functions\n     * }\n     * ```\n     */\n    static onRegister;\n    /**\n     * Allows to inherit properties directly inside the editor.\n     *\n     * @note Do not use directly, prefer using {@link inheritProperties}.\n     *\n     * @hidden\n     */\n    static _inheritProperties() {\n        inheritProperties(this);\n    }\n    /** Manager index. @hidden */\n    _manager;\n    /** Packed id, containing the scene and the local id. @hidden */\n    _id;\n    /** Id relative to the scene component's manager. @hidden */\n    _localId;\n    /**\n     * Object containing this object.\n     *\n     * **Note**: This is cached for faster retrieval.\n     *\n     * @hidden\n     */\n    _object;\n    /** Scene instance. @hidden */\n    _scene;\n    /**\n     * Create a new instance\n     *\n     * @param engine The engine instance.\n     * @param manager Index of the manager.\n     * @param id WASM component instance index.\n     *\n     * @hidden\n     */\n    constructor(scene, manager = -1, id = -1) {\n        this._scene = scene;\n        this._manager = manager;\n        this._localId = id;\n        this._id = Component._pack(scene._index, id);\n        this._object = null;\n    }\n    /** Scene this component is part of. */\n    get scene() {\n        return this._scene;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._scene.engine;\n    }\n    /** The name of this component's type */\n    get type() {\n        const ctor = this.constructor;\n        return ctor.TypeName;\n    }\n    /** The object this component is attached to. */\n    get object() {\n        if (!this._object) {\n            const objectId = this.engine.wasm._wl_component_get_object(this._manager, this._id);\n            this._object = this._scene.wrap(objectId);\n        }\n        return this._object;\n    }\n    /**\n     * Set whether this component is active.\n     *\n     * Activating/deactivating a component comes at a small cost of reordering\n     * components in the respective component manager. This function therefore\n     * is not a trivial assignment.\n     *\n     * Does nothing if the component is already activated/deactivated.\n     *\n     * @param active New active state.\n     */\n    set active(active) {\n        this.engine.wasm._wl_component_setActive(this._manager, this._id, active);\n    }\n    /** `true` if the component is marked as active and its scene is active. */\n    get active() {\n        return this.markedActive && this._scene.isActive;\n    }\n    /**\n     * `true` if the component is marked as active in the scene, `false` otherwise.\n     *\n     * @note At the opposite of {@link Component.active}, this accessor doesn't\n     * take into account whether the scene is active or not.\n     */\n    get markedActive() {\n        return this.engine.wasm._wl_component_isActive(this._manager, this._id) != 0;\n    }\n    /**\n     * Copy all the properties from `src` into this instance.\n     *\n     * @note Only properties are copied. If a component needs to\n     * copy extra data, it needs to override this method.\n     *\n     * #### Example\n     *\n     * ```js\n     * class MyComponent extends Component {\n     *     nonPropertyData = 'Hello World';\n     *\n     *     copy(src) {\n     *         super.copy(src);\n     *         this.nonPropertyData = src.nonPropertyData;\n     *         return this;\n     *     }\n     * }\n     * ```\n     *\n     * @note This method is called by {@link Object3D.clone}. Do not attempt to:\n     *     - Create new component\n     *     - Read references to other objects\n     *\n     * When cloning via {@link Object3D.clone}, this method will be called before\n     * {@link Component.start}.\n     *\n     * @note JavaScript component properties aren't retargeted. Thus, references\n     * inside the source object will not be retargeted to the destination object,\n     * at the exception of the skin data on {@link MeshComponent} and {@link AnimationComponent}.\n     *\n     * @param src The source component to copy from.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    copy(src) {\n        const ctor = this.constructor;\n        const properties = ctor.Properties;\n        if (!properties)\n            return this;\n        for (const name in properties) {\n            const property = properties[name];\n            const value = src[name];\n            if (value === undefined)\n                continue;\n            const cloner = property.cloner ?? defaultPropertyCloner;\n            this[name] = cloner.clone(property.type, value);\n        }\n        return this;\n    }\n    /**\n     * Remove this component from its objects and destroy it.\n     *\n     * It is best practice to set the component to `null` after,\n     * to ensure it does not get used later.\n     *\n     * ```js\n     *    c.destroy();\n     *    c = null;\n     * ```\n     * @since 0.9.0\n     */\n    destroy() {\n        const manager = this._manager;\n        if (manager < 0 || this._id < 0)\n            return;\n        /* This call will mark the component destroyed,\n         * automatically calling `_triggerOnDestroy`.  */\n        this.engine.wasm._wl_component_remove(manager, this._id);\n    }\n    /**\n     * Checks equality by comparing ids and **not** the JavaScript reference.\n     *\n     * @deprecate Use JavaScript reference comparison instead:\n     *\n     * ```js\n     * const componentA = obj.addComponent('mesh');\n     * const componentB = obj.addComponent('mesh');\n     * const componentC = componentB;\n     * console.log(componentA === componentB); // false\n     * console.log(componentA === componentA); // true\n     * console.log(componentB === componentC); // true\n     * ```\n     */\n    equals(otherComponent) {\n        /** @todo(2.0.0): Remove this method. */\n        if (!otherComponent)\n            return false;\n        return this._manager === otherComponent._manager && this._id === otherComponent._id;\n    }\n    /**\n     * Reset the component properties to default.\n     *\n     * @note This is automatically called during the component instantiation.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetProperties() {\n        const ctor = this.constructor;\n        const properties = ctor.Properties;\n        if (!properties)\n            return this;\n        for (const name in properties) {\n            const property = properties[name];\n            const cloner = property.cloner ?? defaultPropertyCloner;\n            this[name] = cloner.clone(property.type, property.default);\n        }\n        return this;\n    }\n    /** @deprecated Use {@link Component.resetProperties} instead. */\n    reset() {\n        return this.resetProperties();\n    }\n    /**\n     * Validate the properties on this instance.\n     *\n     * @throws If any of the required properties isn't initialized\n     * on this instance.\n     */\n    validateProperties() {\n        const ctor = this.constructor;\n        if (!ctor.Properties)\n            return;\n        for (const name in ctor.Properties) {\n            if (!ctor.Properties[name].required)\n                continue;\n            if (!this[name]) {\n                throw new Error(`Property '${name}' is required but was not initialized`);\n            }\n        }\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Component(destroyed)';\n        }\n        return `Component('${this.type}', ${this._localId})`;\n    }\n    /**\n     * `true` if the component is destroyed, `false` otherwise.\n     *\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\n     * reading a custom property will not work:\n     *\n     * ```js\n     * engine.erasePrototypeOnDestroy = true;\n     *\n     * const comp = obj.addComponent('mesh');\n     * comp.customParam = 'Hello World!';\n     *\n     * console.log(comp.isDestroyed); // Prints `false`\n     * comp.destroy();\n     * console.log(comp.isDestroyed); // Prints `true`\n     * console.log(comp.customParam); // Throws an error\n     * ```\n     *\n     * @since 1.1.1\n     */\n    get isDestroyed() {\n        return this._id < 0;\n    }\n    _copy(src, offsetsPtr) {\n        const wasm = this.engine.wasm;\n        /** @todo: Support retargeting for `Object3D.clone` as well. */\n        const offsets = wasm.HEAPU32;\n        const offsetsStart = offsetsPtr >>> 2;\n        const destScene = this._scene;\n        const ctor = this.constructor;\n        for (const name in ctor.Properties) {\n            const value = src[name];\n            if (value === null) {\n                this[name] = null;\n                continue;\n            }\n            const prop = ctor.Properties[name];\n            const offset = offsets[offsetsStart + prop.type];\n            let retargeted;\n            switch (prop.type) {\n                case Type.Object: {\n                    const index = wasm._wl_object_index(value._id);\n                    const id = wasm._wl_object_id(destScene._index, index + offset);\n                    retargeted = destScene.wrap(id);\n                    break;\n                }\n                case Type.Animation:\n                    retargeted = destScene.animations.wrap(offset + value._index);\n                    break;\n                case Type.Skin:\n                    retargeted = destScene.skins.wrap(offset + value._index);\n                    break;\n                default:\n                    const cloner = prop.cloner ?? defaultPropertyCloner;\n                    retargeted = cloner.clone(prop.type, value);\n                    break;\n            }\n            this[name] = retargeted;\n        }\n        return this;\n    }\n    /**\n     * Trigger the component {@link Component.init} method.\n     *\n     * @note Use this method instead of directly calling {@link Component.init},\n     * because this method creates an handler for the {@link Component.start}.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _triggerInit() {\n        if (this.init) {\n            try {\n                this.init();\n            }\n            catch (e) {\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} init() on object ${this.object.name}`);\n                this.engine.log.error(LogTag.Component, e);\n            }\n        }\n        /* Arm onActivate() with the initial start() call */\n        const oldActivate = this.onActivate;\n        this.onActivate = function () {\n            this.onActivate = oldActivate;\n            let failed = false;\n            try {\n                this.validateProperties();\n            }\n            catch (e) {\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} validateProperties() on object ${this.object.name}`);\n                this.engine.log.error(LogTag.Component, e);\n                failed = true;\n            }\n            try {\n                this.start?.();\n            }\n            catch (e) {\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} start() on object ${this.object.name}`);\n                this.engine.log.error(LogTag.Component, e);\n                failed = true;\n            }\n            if (failed) {\n                this.active = false;\n                return;\n            }\n            if (!this.onActivate)\n                return;\n            try {\n                this.onActivate();\n            }\n            catch (e) {\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} onActivate() on object ${this.object.name}`);\n                this.engine.log.error(LogTag.Component, e);\n            }\n        };\n    }\n    /**\n     * Trigger the component {@link Component.update} method.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _triggerUpdate(dt) {\n        if (!this.update)\n            return;\n        try {\n            this.update(dt);\n        }\n        catch (e) {\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} update() on object ${this.object.name}`);\n            this.engine.log.error(LogTag.Component, e);\n            if (this.engine.wasm._deactivate_component_on_error) {\n                this.active = false;\n            }\n        }\n    }\n    /**\n     * Trigger the component {@link Component.onActivate} method.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _triggerOnActivate() {\n        if (!this.onActivate)\n            return;\n        try {\n            this.onActivate();\n        }\n        catch (e) {\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onActivate() on object ${this.object.name}`);\n            this.engine.log.error(LogTag.Component, e);\n        }\n    }\n    /**\n     * Trigger the component {@link Component.onDeactivate} method.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _triggerOnDeactivate() {\n        if (!this.onDeactivate)\n            return;\n        try {\n            this.onDeactivate();\n        }\n        catch (e) {\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onDeactivate() on object ${this.object.name}`);\n            this.engine.log.error(LogTag.Component, e);\n        }\n    }\n    /**\n     * Trigger the component {@link Component.onDestroy} method.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _triggerOnDestroy() {\n        try {\n            if (this.onDestroy)\n                this.onDestroy();\n        }\n        catch (e) {\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onDestroy() on object ${this.object.name}`);\n            this.engine.log.error(LogTag.Component, e);\n        }\n        this._scene._components.destroy(this);\n    }\n}\n/**\n * Components must be registered before loading / appending a scene.\n *\n * It's possible to end up with a broken component in the following cases:\n *\n * - Component wasn't registered when the scene was loaded\n * - Component instantiation failed\n *\n * This dummy component is thus used as a placeholder by the engine.\n */\nexport class BrokenComponent extends Component {\n    static TypeName = '__broken-component__';\n}\n/**\n * Merge the ascendant properties of class\n *\n * This method walks the prototype chain, and merges\n * all the properties found in parent components.\n *\n * Example:\n *\n * ```js\n * import {Property, inheritProperties} from '@wonderlandengine/api';\n *\n * class Parent {\n *     static Properties = { parentProp: Property.string('parent') };\n * }\n *\n * class Child extends Parent {\n *     static Properties = { childProp: Property.string('child') };\n * }\n * inheritProperties(Child);\n * ```\n *\n * @param target The class in which properties should be merged\n *\n * @hidden\n */\nexport function inheritProperties(target) {\n    if (!target.TypeName)\n        return;\n    const chain = [];\n    let curr = target;\n    while (curr && !isBaseComponentClass(curr)) {\n        const comp = curr;\n        /* Stop at the first class that doesn't require properties merging */\n        const needsMerge = comp.hasOwnProperty('InheritProperties')\n            ? comp.InheritProperties\n            : true;\n        if (!needsMerge)\n            break;\n        if (comp.TypeName && comp.hasOwnProperty('Properties')) {\n            chain.push(comp);\n        }\n        curr = Object.getPrototypeOf(curr);\n    }\n    /* No prototype merge is needed. */\n    if (!chain.length || (chain.length === 1 && chain[0] === target)) {\n        return;\n    }\n    const merged = {};\n    for (let i = chain.length - 1; i >= 0; --i) {\n        Object.assign(merged, chain[i].Properties);\n    }\n    target.Properties = merged;\n}\n/**\n * Native collision component.\n *\n * Provides access to a native collision component instance.\n */\nexport class CollisionComponent extends Component {\n    /** @override */\n    static TypeName = 'collision';\n    getExtents(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_collision_component_get_extents(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        return out;\n    }\n    /** Collision component collider */\n    get collider() {\n        return this.engine.wasm._wl_collision_component_get_collider(this._id);\n    }\n    /**\n     * Set collision component collider.\n     *\n     * @param collider Collider of the collision component.\n     */\n    set collider(collider) {\n        this.engine.wasm._wl_collision_component_set_collider(this._id, collider);\n    }\n    /**\n     * Equivalent to {@link CollisionComponent.getExtents}.\n     *\n     * @note Prefer to use {@link CollisionComponent.getExtents} for performance.\n     */\n    get extents() {\n        /** @todo: Break at 2.0.0. Do not allow modifying memory in-place. */\n        const wasm = this.engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_collision_component_get_extents(this._id), 3);\n    }\n    /**\n     * Set collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the passed vector is used.\n     *\n     * Example:\n     *\n     * ```js\n     * // Spans 1 unit on the x-axis, 2 on the y-axis, 3 on the z-axis.\n     * collision.extent = [1, 2, 3];\n     * ```\n     *\n     * @param extents Extents of the collision component, expects a\n     *      3 component array.\n     */\n    set extents(extents) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_collision_component_get_extents(this._id) / 4; /* Align F32 */\n        wasm.HEAPF32[ptr] = extents[0];\n        wasm.HEAPF32[ptr + 1] = extents[1];\n        wasm.HEAPF32[ptr + 2] = extents[2];\n    }\n    /**\n     * Get collision component radius.\n     *\n     * @note If {@link collider} is not {@link Collider.Sphere}, the returned value\n     * corresponds to the radius of a sphere enclosing the shape.\n     *\n     * Example:\n     *\n     * ```js\n     * sphere.radius = 3.0;\n     * console.log(sphere.radius); // 3.0\n     *\n     * box.extents = [2.0, 2.0, 2.0];\n     * console.log(box.radius); // 1.732...\n     * ```\n     *\n     */\n    get radius() {\n        const wasm = this.engine.wasm;\n        if (this.collider === Collider.Sphere)\n            return wasm.HEAPF32[wasm._wl_collision_component_get_extents(this._id) >> 2];\n        const extents = new Float32Array(wasm.HEAPF32.buffer, wasm._wl_collision_component_get_extents(this._id), 3);\n        const x2 = extents[0] * extents[0];\n        const y2 = extents[1] * extents[1];\n        const z2 = extents[2] * extents[2];\n        return Math.sqrt(x2 + y2 + z2) / 2;\n    }\n    /**\n     * Set collision component radius.\n     *\n     * @param radius Radius of the collision component\n     *\n     * @note If {@link collider} is not {@link Collider.Sphere},\n     * the extents are set to form a square that fits a sphere with the provided radius.\n     *\n     * Example:\n     *\n     * ```js\n     * aabbCollision.radius = 2.0; // AABB fits a sphere of radius 2.0\n     * boxCollision.radius = 3.0; // Box now fits a sphere of radius 3.0, keeping orientation\n     * ```\n     *\n     */\n    set radius(radius) {\n        const length = this.collider === Collider.Sphere ? radius : (2 * radius) / SQRT_3;\n        this.extents.set([length, length, length]);\n    }\n    /**\n     * Collision component group.\n     *\n     * The groups is a bitmask that is compared to other components in {@link CollisionComponent#queryOverlaps}\n     * or the group in {@link Scene#rayCast}.\n     *\n     * Colliders that have no common groups will not overlap with each other. If a collider\n     * has none of the groups set for {@link Scene#rayCast}, the ray will not hit it.\n     *\n     * Each bit represents belonging to a group, see example.\n     *\n     * ```js\n     *    // c belongs to group 2\n     *    c.group = (1 << 2);\n     *\n     *    // c belongs to group 0\n     *    c.group = (1 << 0);\n     *\n     *    // c belongs to group 0 *and* 2\n     *    c.group = (1 << 0) | (1 << 2);\n     *\n     *    (c.group & (1 << 2)) != 0; // true\n     *    (c.group & (1 << 7)) != 0; // false\n     * ```\n     */\n    get group() {\n        return this.engine.wasm._wl_collision_component_get_group(this._id);\n    }\n    /**\n     * Set collision component group.\n     *\n     * @param group Group mask of the collision component.\n     */\n    set group(group) {\n        this.engine.wasm._wl_collision_component_set_group(this._id, group);\n    }\n    /**\n     * Query overlapping objects.\n     *\n     * Usage:\n     *\n     * ```js\n     * const collision = object.getComponent('collision');\n     * const overlaps = collision.queryOverlaps();\n     * for(const otherCollision of overlaps) {\n     *     const otherObject = otherCollision.object;\n     *     console.log(`Collision with object ${otherObject.objectId}`);\n     * }\n     * ```\n     *\n     * @returns Collision components overlapping this collider.\n     */\n    queryOverlaps() {\n        const count = this.engine.wasm._wl_collision_component_query_overlaps(this._id, this.engine.wasm._tempMem, this.engine.wasm._tempMemSize >> 1);\n        const overlaps = new Array(count);\n        for (let i = 0; i < count; ++i) {\n            const id = this.engine.wasm._tempMemUint16[i];\n            overlaps[i] = this._scene._components.wrapCollision(id);\n        }\n        return overlaps;\n    }\n}\n__decorate([\n    nativeProperty()\n], CollisionComponent.prototype, \"collider\", null);\n__decorate([\n    nativeProperty()\n], CollisionComponent.prototype, \"extents\", null);\n__decorate([\n    nativeProperty()\n], CollisionComponent.prototype, \"group\", null);\n/**\n * Native text component\n *\n * Provides access to a native text component instance\n */\nexport class TextComponent extends Component {\n    /** @override */\n    static TypeName = 'text';\n    /** Text component alignment. */\n    get alignment() {\n        return this.engine.wasm._wl_text_component_get_horizontal_alignment(this._id);\n    }\n    /**\n     * Set text component alignment.\n     *\n     * @param alignment Alignment for the text component.\n     */\n    set alignment(alignment) {\n        this.engine.wasm._wl_text_component_set_horizontal_alignment(this._id, alignment);\n    }\n    /**\n     * Text component vertical alignment.\n     * @since 1.2.0\n     */\n    get verticalAlignment() {\n        return this.engine.wasm._wl_text_component_get_vertical_alignment(this._id);\n    }\n    /**\n     * Set text component vertical alignment.\n     *\n     * @param verticalAlignment Vertical for the text component.\n     * @since 1.2.0\n     */\n    set verticalAlignment(verticalAlignment) {\n        this.engine.wasm._wl_text_component_set_vertical_alignment(this._id, verticalAlignment);\n    }\n    /**\n     * Text component justification.\n     *\n     * @deprecated Please use {@link TextComponent.verticalAlignment} instead.\n     */\n    get justification() {\n        return this.verticalAlignment;\n    }\n    /**\n     * Set text component justification.\n     *\n     * @param justification Justification for the text component.\n     *\n     * @deprecated Please use {@link TextComponent.verticalAlignment} instead.\n     */\n    set justification(justification) {\n        this.verticalAlignment = justification;\n    }\n    /** Text component character spacing. */\n    get characterSpacing() {\n        return this.engine.wasm._wl_text_component_get_character_spacing(this._id);\n    }\n    /**\n     * Set text component character spacing.\n     *\n     * @param spacing Character spacing for the text component.\n     */\n    set characterSpacing(spacing) {\n        this.engine.wasm._wl_text_component_set_character_spacing(this._id, spacing);\n    }\n    /** Text component line spacing. */\n    get lineSpacing() {\n        return this.engine.wasm._wl_text_component_get_line_spacing(this._id);\n    }\n    /**\n     * Set text component line spacing\n     *\n     * @param spacing Line spacing for the text component\n     */\n    set lineSpacing(spacing) {\n        this.engine.wasm._wl_text_component_set_line_spacing(this._id, spacing);\n    }\n    /** Text component effect. */\n    get effect() {\n        return this.engine.wasm._wl_text_component_get_effect(this._id);\n    }\n    /**\n     * Set text component effect\n     *\n     * @param effect Effect for the text component\n     */\n    set effect(effect) {\n        this.engine.wasm._wl_text_component_set_effect(this._id, effect);\n    }\n    /** Text component text. */\n    get text() {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_text_component_get_text(this._id);\n        return wasm.UTF8ToString(ptr);\n    }\n    /**\n     * Set text component text.\n     *\n     * @param text Text of the text component.\n     */\n    set text(text) {\n        const wasm = this.engine.wasm;\n        wasm._wl_text_component_set_text(this._id, wasm.tempUTF8(text.toString()));\n    }\n    /**\n     * Set material to render the text with.\n     *\n     * @param material New material.\n     */\n    set material(material) {\n        const matIndex = material ? material._id : 0;\n        this.engine.wasm._wl_text_component_set_material(this._id, matIndex);\n    }\n    /** Material used to render the text. */\n    get material() {\n        const index = this.engine.wasm._wl_text_component_get_material(this._id);\n        return this.engine.materials.wrap(index);\n    }\n    /**\n     * Axis-aligned bounding box for a given text, in object space.\n     *\n     * To calculate the size for the currently set text, use\n     * {@link getBoundingBox}.\n     *\n     * Useful for calculating the text size before an update and potentially\n     * adjusting the text:\n     *\n     * ```js\n     * let updatedName = 'some very long name';\n     * const box = new Float32Array(4);\n     * text.getBoundingBoxForText(updatedName, box);\n     * const width = box[2] - box[0];\n     * if(width > 2.0) {\n     *     updatedName = updatedName.slice(0, 5) + '...';\n     * }\n     * text.text = updatedName;\n     * ```\n     *\n     * @param text Text string to calculate the bounding box for.\n     * @param out Preallocated array to write into, to avoid garbage,\n     *     otherwise will allocate a new Float32Array.\n     *\n     * @returns Bounding box - left, bottom, right, top.\n     */\n    getBoundingBoxForText(text, out = new Float32Array(4)) {\n        const wasm = this.engine.wasm;\n        /* Offset by 4 floats, output is written to _tempMem */\n        const textPtr = wasm.tempUTF8(text, 4 * 4);\n        this.engine.wasm._wl_text_component_get_boundingBox(this._id, textPtr, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        return out;\n    }\n    /**\n     * Axis-aligned bounding box, in object space.\n     *\n     * The bounding box is computed using the current component properties\n     * that influence the position and size of the text. The bounding box is\n     * affected by alignment, spacing, effect type and the font set in the\n     * material.\n     *\n     * To calculate the size for a different text, use\n     * {@link getBoundingBoxForText}.\n     *\n     * Useful for adjusting text position or scaling:\n     *\n     * ```js\n     * const box = new Float32Array(4);\n     * text.getBoundingBox(box);\n     * const width = box[2] - box[0];\n     * // Make text 1m wide\n     * text.object.setScalingLocal([1/width, 1, 1]);\n     * ```\n     *\n     * @param text Text string to calculate the bounding box for.\n     * @param out Preallocated array to write into, to avoid garbage,\n     *     otherwise will allocate a new Float32Array.\n     *\n     * @returns Bounding box - left, bottom, right, top.\n     */\n    getBoundingBox(out = new Float32Array(4)) {\n        const wasm = this.engine.wasm;\n        this.engine.wasm._wl_text_component_get_boundingBox(this._id, 0, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        return out;\n    }\n}\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"alignment\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"verticalAlignment\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"justification\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"characterSpacing\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"lineSpacing\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"effect\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"text\", null);\n__decorate([\n    nativeProperty()\n], TextComponent.prototype, \"material\", null);\n/**\n * Native view component.\n *\n * Provides access to a native view component instance.\n */\nexport class ViewComponent extends Component {\n    /** @override */\n    static TypeName = 'view';\n    getProjectionMatrix(out = new Float32Array(16)) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_view_component_get_projection_matrix(this._id) / 4; /* Align F32 */\n        for (let i = 0; i < 16; ++i) {\n            out[i] = wasm.HEAPF32[ptr + i];\n        }\n        return out;\n    }\n    /**\n     * Equivalent to {@link ViewComponent.getProjectionMatrix}.\n     *\n     * @note Prefer to use {@link ViewComponent.getProjectionMatrix} for performance.\n     */\n    get projectionMatrix() {\n        /** @todo: Break at 2.0.0. Do not allow modifying memory in-place. */\n        const wasm = this.engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_view_component_get_projection_matrix(this._id), 16);\n    }\n    /** ViewComponent near clipping plane value. */\n    get near() {\n        return this.engine.wasm._wl_view_component_get_near(this._id);\n    }\n    /**\n     * Set near clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param near Near depth value.\n     */\n    set near(near) {\n        this.engine.wasm._wl_view_component_set_near(this._id, near);\n    }\n    /** Far clipping plane value. */\n    get far() {\n        return this.engine.wasm._wl_view_component_get_far(this._id);\n    }\n    /**\n     * Set far clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param far Near depth value.\n     */\n    set far(far) {\n        this.engine.wasm._wl_view_component_set_far(this._id, far);\n    }\n    /**\n     * Get the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, this returns the field of view reported by\n     * the device, regardless of the fov that was set.\n     */\n    get fov() {\n        return this.engine.wasm._wl_view_component_get_fov(this._id);\n    }\n    /**\n     * Set the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, the field of view reported by the device is\n     * used and this value is ignored. After the XR session ends, the new value\n     * is applied.\n     *\n     * @param fov Horizontal field of view, **in degrees**.\n     */\n    set fov(fov) {\n        this.engine.wasm._wl_view_component_set_fov(this._id, fov);\n    }\n}\n__decorate([\n    enumerable()\n], ViewComponent.prototype, \"projectionMatrix\", null);\n__decorate([\n    nativeProperty()\n], ViewComponent.prototype, \"near\", null);\n__decorate([\n    nativeProperty()\n], ViewComponent.prototype, \"far\", null);\n__decorate([\n    nativeProperty()\n], ViewComponent.prototype, \"fov\", null);\n/**\n * Native input component.\n *\n * Provides access to a native input component instance.\n */\nexport class InputComponent extends Component {\n    /** @override */\n    static TypeName = 'input';\n    /** Input component type */\n    get inputType() {\n        return this.engine.wasm._wl_input_component_get_type(this._id);\n    }\n    /**\n     * Set input component type.\n     *\n     * @params New input component type.\n     */\n    set inputType(type) {\n        this.engine.wasm._wl_input_component_set_type(this._id, type);\n    }\n    /**\n     * WebXR Device API input source associated with this input component,\n     * if type {@link InputType.ControllerLeft} or {@link InputType.ControllerRight}.\n     */\n    get xrInputSource() {\n        const xr = this.engine.xr;\n        if (!xr)\n            return null;\n        for (let inputSource of xr.session.inputSources) {\n            if (inputSource.handedness == this.handedness) {\n                return inputSource;\n            }\n        }\n        return null;\n    }\n    /**\n     * 'left', 'right' or `null` depending on the {@link InputComponent#inputType}.\n     */\n    get handedness() {\n        const inputType = this.inputType;\n        if (inputType == InputType.ControllerRight ||\n            inputType == InputType.RayRight ||\n            inputType == InputType.EyeRight)\n            return 'right';\n        if (inputType == InputType.ControllerLeft ||\n            inputType == InputType.RayLeft ||\n            inputType == InputType.EyeLeft)\n            return 'left';\n        return null;\n    }\n}\n__decorate([\n    nativeProperty()\n], InputComponent.prototype, \"inputType\", null);\n__decorate([\n    enumerable()\n], InputComponent.prototype, \"xrInputSource\", null);\n__decorate([\n    enumerable()\n], InputComponent.prototype, \"handedness\", null);\n/**\n * Native light component.\n *\n * Provides access to a native light component instance.\n */\nexport class LightComponent extends Component {\n    /** @override */\n    static TypeName = 'light';\n    getColor(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_light_component_get_color(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        return out;\n    }\n    /**\n     * Set light color.\n     *\n     * @param c New color array/vector, expected to have at least 3 elements.\n     * @since 1.0.0\n     */\n    setColor(c) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_light_component_get_color(this._id) / 4; /* Align F32 */\n        wasm.HEAPF32[ptr] = c[0];\n        wasm.HEAPF32[ptr + 1] = c[1];\n        wasm.HEAPF32[ptr + 2] = c[2];\n    }\n    /**\n     * View on the light color.\n     *\n     * @note Prefer to use {@link getColor} in performance-critical code.\n     */\n    get color() {\n        const wasm = this.engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_light_component_get_color(this._id), 3);\n    }\n    /**\n     * Set light color.\n     *\n     * @param c Color of the light component.\n     *\n     * @note Prefer to use {@link setColor} in performance-critical code.\n     */\n    set color(c) {\n        this.color.set(c);\n    }\n    /** Light type. */\n    get lightType() {\n        return this.engine.wasm._wl_light_component_get_type(this._id);\n    }\n    /**\n     * Set light type.\n     *\n     * @param lightType Type of the light component.\n     */\n    set lightType(t) {\n        this.engine.wasm._wl_light_component_set_type(this._id, t);\n    }\n    /**\n     * Light intensity.\n     * @since 1.0.0\n     */\n    get intensity() {\n        return this.engine.wasm._wl_light_component_get_intensity(this._id);\n    }\n    /**\n     * Set light intensity.\n     *\n     * @param intensity Intensity of the light component.\n     * @since 1.0.0\n     */\n    set intensity(intensity) {\n        this.engine.wasm._wl_light_component_set_intensity(this._id, intensity);\n    }\n    /**\n     * Outer angle for spot lights, in degrees.\n     * @since 1.0.0\n     */\n    get outerAngle() {\n        return this.engine.wasm._wl_light_component_get_outerAngle(this._id);\n    }\n    /**\n     * Set outer angle for spot lights.\n     *\n     * @param angle Outer angle, in degrees.\n     * @since 1.0.0\n     */\n    set outerAngle(angle) {\n        this.engine.wasm._wl_light_component_set_outerAngle(this._id, angle);\n    }\n    /**\n     * Inner angle for spot lights, in degrees.\n     * @since 1.0.0\n     */\n    get innerAngle() {\n        return this.engine.wasm._wl_light_component_get_innerAngle(this._id);\n    }\n    /**\n     * Set inner angle for spot lights.\n     *\n     * @param angle Inner angle, in degrees.\n     * @since 1.0.0\n     */\n    set innerAngle(angle) {\n        this.engine.wasm._wl_light_component_set_innerAngle(this._id, angle);\n    }\n    /**\n     * Whether the light casts shadows.\n     * @since 1.0.0\n     */\n    get shadows() {\n        return !!this.engine.wasm._wl_light_component_get_shadows(this._id);\n    }\n    /**\n     * Set whether the light casts shadows.\n     *\n     * @param b Whether the light casts shadows.\n     * @since 1.0.0\n     */\n    set shadows(b) {\n        this.engine.wasm._wl_light_component_set_shadows(this._id, b);\n    }\n    /**\n     * Range for shadows.\n     * @since 1.0.0\n     */\n    get shadowRange() {\n        return this.engine.wasm._wl_light_component_get_shadowRange(this._id);\n    }\n    /**\n     * Set range for shadows.\n     *\n     * @param range Range for shadows.\n     * @since 1.0.0\n     */\n    set shadowRange(range) {\n        this.engine.wasm._wl_light_component_set_shadowRange(this._id, range);\n    }\n    /**\n     * Bias value for shadows.\n     * @since 1.0.0\n     */\n    get shadowBias() {\n        return this.engine.wasm._wl_light_component_get_shadowBias(this._id);\n    }\n    /**\n     * Set bias value for shadows.\n     *\n     * @param bias Bias for shadows.\n     * @since 1.0.0\n     */\n    set shadowBias(bias) {\n        this.engine.wasm._wl_light_component_set_shadowBias(this._id, bias);\n    }\n    /**\n     * Normal bias value for shadows.\n     * @since 1.0.0\n     */\n    get shadowNormalBias() {\n        return this.engine.wasm._wl_light_component_get_shadowNormalBias(this._id);\n    }\n    /**\n     * Set normal bias value for shadows.\n     *\n     * @param bias Normal bias for shadows.\n     * @since 1.0.0\n     */\n    set shadowNormalBias(bias) {\n        this.engine.wasm._wl_light_component_set_shadowNormalBias(this._id, bias);\n    }\n    /**\n     * Texel size for shadows.\n     * @since 1.0.0\n     */\n    get shadowTexelSize() {\n        return this.engine.wasm._wl_light_component_get_shadowTexelSize(this._id);\n    }\n    /**\n     * Set texel size for shadows.\n     *\n     * @param size Texel size for shadows.\n     * @since 1.0.0\n     */\n    set shadowTexelSize(size) {\n        this.engine.wasm._wl_light_component_set_shadowTexelSize(this._id, size);\n    }\n    /**\n     * Cascade count for {@link LightType.Sun} shadows.\n     * @since 1.0.0\n     */\n    get cascadeCount() {\n        return this.engine.wasm._wl_light_component_get_cascadeCount(this._id);\n    }\n    /**\n     * Set cascade count for {@link LightType.Sun} shadows.\n     *\n     * @param count Cascade count.\n     * @since 1.0.0\n     */\n    set cascadeCount(count) {\n        this.engine.wasm._wl_light_component_set_cascadeCount(this._id, count);\n    }\n}\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"color\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"lightType\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"intensity\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"outerAngle\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"innerAngle\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"shadows\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"shadowRange\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"shadowBias\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"shadowNormalBias\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"shadowTexelSize\", null);\n__decorate([\n    nativeProperty()\n], LightComponent.prototype, \"cascadeCount\", null);\n/**\n * Native animation component.\n *\n * Provides access to a native animation component instance.\n */\nexport class AnimationComponent extends Component {\n    /** @override */\n    static TypeName = 'animation';\n    /**\n     * Emitter for animation events triggered on this component.\n     *\n     * The first argument is the name of the event.\n     */\n    onEvent = new Emitter();\n    /**\n     * Set animation to play.\n     *\n     * Make sure to {@link Animation#retarget} the animation to affect the\n     * right objects.\n     *\n     * @param anim Animation to play.\n     */\n    set animation(anim) {\n        this.scene.assertOrigin(anim);\n        this.engine.wasm._wl_animation_component_set_animation(this._id, anim ? anim._id : 0);\n    }\n    /** Animation set for this component */\n    get animation() {\n        const index = this.engine.wasm._wl_animation_component_get_animation(this._id);\n        return this._scene.animations.wrap(index);\n    }\n    /**\n     * Set play count. Set to `0` to loop indefinitely.\n     *\n     * @param playCount Number of times to repeat the animation.\n     */\n    set playCount(playCount) {\n        this.engine.wasm._wl_animation_component_set_playCount(this._id, playCount);\n    }\n    /** Number of times the animation is played. */\n    get playCount() {\n        return this.engine.wasm._wl_animation_component_get_playCount(this._id);\n    }\n    /**\n     * Set speed. Set to negative values to run the animation backwards.\n     *\n     * Setting speed has an immediate effect for the current frame's update\n     * and will continue with the speed from the current point in the animation.\n     *\n     * @param speed New speed at which to play the animation.\n     * @since 0.8.10\n     */\n    set speed(speed) {\n        this.engine.wasm._wl_animation_component_set_speed(this._id, speed);\n    }\n    /**\n     * Speed factor at which the animation is played.\n     *\n     * @since 0.8.10\n     */\n    get speed() {\n        return this.engine.wasm._wl_animation_component_get_speed(this._id);\n    }\n    /** Current playing state of the animation */\n    get state() {\n        return this.engine.wasm._wl_animation_component_state(this._id);\n    }\n    /**\n     * Play animation.\n     *\n     * If the animation is currently paused, resumes from that position. If the\n     * animation is already playing, does nothing.\n     *\n     * To restart the animation, {@link AnimationComponent#stop} it first.\n     */\n    play() {\n        this.engine.wasm._wl_animation_component_play(this._id);\n    }\n    /** Stop animation. */\n    stop() {\n        this.engine.wasm._wl_animation_component_stop(this._id);\n    }\n    /** Pause animation. */\n    pause() {\n        this.engine.wasm._wl_animation_component_pause(this._id);\n    }\n    /**\n     * Get the value of a float parameter in the attached graph.\n     * Throws if the parameter is missing.\n     *\n     * @param name Name of the parameter.\n     * @since 1.2.0\n     */\n    getFloatParameter(name) {\n        const wasm = this.engine.wasm;\n        const index = wasm._wl_animation_component_getGraphParamIndex(this._id, wasm.tempUTF8(name));\n        if (index === -1) {\n            throw Error(`Missing parameter '${name}'`);\n        }\n        wasm._wl_animation_component_getGraphParamValue(this._id, index, wasm._tempMem);\n        return wasm._tempMemFloat[0];\n    }\n    /**\n     * Set the value of a float parameter in the attached graph\n     * Throws if the parameter is missing.\n     *\n     * @param name Name of the parameter.\n     * @param value Float value to set.\n     * @returns 1 if the parameter was successfully set, 0 on fail.\n     * @since 1.2.0\n     */\n    setFloatParameter(name, value) {\n        const wasm = this.engine.wasm;\n        const index = wasm._wl_animation_component_getGraphParamIndex(this._id, wasm.tempUTF8(name));\n        if (index === -1) {\n            throw Error(`Missing parameter '${name}'`);\n        }\n        wasm._tempMemFloat[0] = value;\n        wasm._wl_animation_component_setGraphParamValue(this._id, index, wasm._tempMem);\n    }\n}\n__decorate([\n    nativeProperty()\n], AnimationComponent.prototype, \"animation\", null);\n__decorate([\n    nativeProperty()\n], AnimationComponent.prototype, \"playCount\", null);\n__decorate([\n    nativeProperty()\n], AnimationComponent.prototype, \"speed\", null);\n__decorate([\n    enumerable()\n], AnimationComponent.prototype, \"state\", null);\n/**\n * Native mesh component.\n *\n * Provides access to a native mesh component instance.\n */\nexport class MeshComponent extends Component {\n    /** @override */\n    static TypeName = 'mesh';\n    /**\n     * Set material to render the mesh with.\n     *\n     * @param material Material to render the mesh with.\n     */\n    set material(material) {\n        this.engine.wasm._wl_mesh_component_set_material(this._id, material ? material._id : 0);\n    }\n    /** Material used to render the mesh. */\n    get material() {\n        const index = this.engine.wasm._wl_mesh_component_get_material(this._id);\n        return this.engine.materials.wrap(index);\n    }\n    /** Mesh rendered by this component. */\n    get mesh() {\n        const index = this.engine.wasm._wl_mesh_component_get_mesh(this._id);\n        return this.engine.meshes.wrap(index);\n    }\n    /**\n     * Set mesh to rendered with this component.\n     *\n     * @param mesh Mesh rendered by this component.\n     */\n    set mesh(mesh) {\n        this.engine.wasm._wl_mesh_component_set_mesh(this._id, mesh?._id ?? 0);\n    }\n    /** Skin for this mesh component. */\n    get skin() {\n        const index = this.engine.wasm._wl_mesh_component_get_skin(this._id);\n        return this._scene.skins.wrap(index);\n    }\n    /**\n     * Set skin to transform this mesh component.\n     *\n     * @param skin Skin to use for rendering skinned meshes.\n     */\n    set skin(skin) {\n        this.scene.assertOrigin(skin);\n        this.engine.wasm._wl_mesh_component_set_skin(this._id, skin ? skin._id : 0);\n    }\n    /**\n     * Morph targets for this mesh component.\n     *\n     * @since 1.2.0\n     */\n    get morphTargets() {\n        const index = this.engine.wasm._wl_mesh_component_get_morph_targets(this._id);\n        return this.engine.morphTargets.wrap(index);\n    }\n    /**\n     * Set morph targets to transform this mesh component.\n     *\n     * @param morphTargets Morph targets to use for rendering.\n     *\n     * @since 1.2.0\n     */\n    set morphTargets(morphTargets) {\n        this.engine.wasm._wl_mesh_component_set_morph_targets(this._id, morphTargets?._id ?? 0);\n    }\n    /**\n     * Equivalent to {@link getMorphTargetWeights}.\n     *\n     * @note Prefer to use {@link getMorphTargetWeights} for performance.\n     *\n     * @since 1.2.0\n     */\n    get morphTargetWeights() {\n        return this.getMorphTargetWeights();\n    }\n    /**\n     * Set the morph target weights to transform this mesh component.\n     *\n     * @param weights New weights.\n     *\n     * @since 1.2.0\n     */\n    set morphTargetWeights(weights) {\n        this.setMorphTargetWeights(weights);\n    }\n    getMorphTargetWeights(out) {\n        const wasm = this.engine.wasm;\n        const count = wasm._wl_mesh_component_get_morph_target_weights(this._id, wasm._tempMem);\n        if (!out) {\n            out = new Float32Array(count);\n        }\n        for (let i = 0; i < count; ++i) {\n            out[i] = wasm._tempMemFloat[i];\n        }\n        return out;\n    }\n    /**\n     * Get the weight of a single morph target.\n     *\n     * @param target Index of the morph target.\n     * @returns The weight.\n     *\n     * @since 1.2.0\n     */\n    getMorphTargetWeight(target) {\n        const count = this.morphTargets?.count ?? 0;\n        if (target >= count) {\n            throw new Error(`Index ${target} is out of bounds for ${count} targets`);\n        }\n        return this.engine.wasm._wl_mesh_component_get_morph_target_weight(this._id, target);\n    }\n    /**\n     * Set morph target weights for this mesh component.\n     *\n     * @param weights Array of new weights, expected to have at least as many\n     *     elements as {@link MorphTargets.count}.\n     *\n     * @since 1.2.0\n     */\n    setMorphTargetWeights(weights) {\n        const count = this.morphTargets?.count ?? 0;\n        if (weights.length !== count) {\n            throw new Error(`Expected ${count} weights but got ${weights.length}`);\n        }\n        const wasm = this.engine.wasm;\n        wasm._tempMemFloat.set(weights);\n        wasm._wl_mesh_component_set_morph_target_weights(this._id, wasm._tempMem, weights.length);\n    }\n    /**\n     * Set the weight of a single morph target.\n     *\n     * @param target Index of the morph target.\n     * @param weight The new weight.\n     *\n     * ## Usage\n     *\n     * ```js\n     * const mesh = object.getComponent('mesh');\n     * const mouthTarget = mesh.morphTargets.getTargetIndex('mouth');\n     * mesh.setMorphTargetWeight(mouthTarget, 0.5);\n     * ```\n     *\n     * @since 1.2.0\n     */\n    setMorphTargetWeight(target, weight) {\n        const count = this.morphTargets?.count ?? 0;\n        if (target >= count) {\n            throw new Error(`Index ${target} is out of bounds for ${count} targets`);\n        }\n        this.engine.wasm._wl_mesh_component_set_morph_target_weight(this._id, target, weight);\n    }\n}\n__decorate([\n    nativeProperty()\n], MeshComponent.prototype, \"material\", null);\n__decorate([\n    nativeProperty()\n], MeshComponent.prototype, \"mesh\", null);\n__decorate([\n    nativeProperty()\n], MeshComponent.prototype, \"skin\", null);\n__decorate([\n    nativeProperty()\n], MeshComponent.prototype, \"morphTargets\", null);\n__decorate([\n    nativeProperty()\n], MeshComponent.prototype, \"morphTargetWeights\", null);\n/**\n * Enum for Physics axes locking\n *\n * See {@link PhysXComponent.angularLockAxis} and {@link PhysXComponent.linearLockAxis}.\n */\nexport var LockAxis;\n(function (LockAxis) {\n    /**\n     * No axis selected.\n     */\n    LockAxis[LockAxis[\"None\"] = 0] = \"None\";\n    /**\n     * **X axis**:\n     */\n    LockAxis[LockAxis[\"X\"] = 1] = \"X\";\n    /**\n     * **Y axis**:\n     */\n    LockAxis[LockAxis[\"Y\"] = 2] = \"Y\";\n    /**\n     * **Z axis**:\n     */\n    LockAxis[LockAxis[\"Z\"] = 4] = \"Z\";\n})(LockAxis || (LockAxis = {}));\n/**\n * Native physx rigid body component.\n *\n * Provides access to a native mesh component instance.\n * Only available when using physx enabled runtime, see \"Project Settings > Runtime\".\n */\nexport class PhysXComponent extends Component {\n    /** @override */\n    static TypeName = 'physx';\n    getTranslationOffset(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        wasm._wl_physx_component_get_offsetTranslation(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    getRotationOffset(out = new Float32Array(4)) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_physx_component_get_offsetTransform(this._id) >> 2; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        out[3] = wasm.HEAPF32[ptr + 3];\n        return out;\n    }\n    getExtents(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_physx_component_get_extents(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        return out;\n    }\n    getLinearVelocity(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        const tempMemFloat = wasm._tempMemFloat;\n        wasm._wl_physx_component_get_linearVelocity(this._id, wasm._tempMem); /* Align F32 */\n        out[0] = tempMemFloat[0];\n        out[1] = tempMemFloat[1];\n        out[2] = tempMemFloat[2];\n        return out;\n    }\n    getAngularVelocity(out = new Float32Array(3)) {\n        const wasm = this.engine.wasm;\n        const tempMemFloat = wasm._tempMemFloat;\n        wasm._wl_physx_component_get_angularVelocity(this._id, wasm._tempMem); /* Align F32 */\n        out[0] = tempMemFloat[0];\n        out[1] = tempMemFloat[1];\n        out[2] = tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Set whether this rigid body is static.\n     *\n     * Setting this property only takes effect once the component\n     * switches from inactive to active.\n     *\n     * @param b Whether the rigid body should be static.\n     */\n    set static(b) {\n        this.engine.wasm._wl_physx_component_set_static(this._id, b);\n    }\n    /**\n     * Whether this rigid body is static.\n     *\n     * This property returns whether the rigid body is *effectively*\n     * static. If static property was set while the rigid body was\n     * active, it will not take effect until the rigid body is set\n     * inactive and active again. Until the component is set inactive,\n     * this getter will return whether the rigid body is actually\n     * static.\n     */\n    get static() {\n        return !!this.engine.wasm._wl_physx_component_get_static(this._id);\n    }\n    /**\n     * Equivalent to {@link PhysXComponent.getTranslationOffset}.\n     *\n     * Gives a quick view of the offset in a debugger.\n     *\n     * @note Prefer to use {@link PhysXComponent.getTranslationOffset} for performance.\n     *\n     * @since 1.1.1\n     */\n    get translationOffset() {\n        return this.getTranslationOffset();\n    }\n    /**\n     * Set the offset translation.\n     *\n     * The array must be a vector of at least **3** elements.\n     *\n     * @note The component must be re-activated to apply the change.\n     *\n     * @since 1.1.1\n     */\n    set translationOffset(offset) {\n        const wasm = this.engine.wasm;\n        wasm._wl_physx_component_set_offsetTranslation(this._id, offset[0], offset[1], offset[2]);\n    }\n    /**\n     * Equivalent to {@link PhysXComponent.getRotationOffset}.\n     *\n     * Gives a quick view of the offset in a debugger.\n     *\n     * @note Prefer to use {@link PhysXComponent.getRotationOffset} for performance.\n     *\n     * @since 1.1.1\n     */\n    get rotationOffset() {\n        return this.getRotationOffset();\n    }\n    /**\n     * Set the offset rotation.\n     *\n     * The array must be a quaternion of at least **4** elements.\n     *\n     * @note The component must be re-activated to apply the change.\n     *\n     * @since 1.1.1\n     */\n    set rotationOffset(offset) {\n        const wasm = this.engine.wasm;\n        wasm._wl_physx_component_set_offsetRotation(this._id, offset[0], offset[1], offset[2], offset[3]);\n    }\n    /**\n     * Set whether this rigid body is kinematic.\n     *\n     * @param b Whether the rigid body should be kinematic.\n     */\n    set kinematic(b) {\n        this.engine.wasm._wl_physx_component_set_kinematic(this._id, b);\n    }\n    /**\n     * Whether this rigid body is kinematic.\n     */\n    get kinematic() {\n        return !!this.engine.wasm._wl_physx_component_get_kinematic(this._id);\n    }\n    /**\n     * Set whether this rigid body's gravity is enabled.\n     *\n     * @param b Whether the rigid body's gravity should be enabled.\n     */\n    set gravity(b) {\n        this.engine.wasm._wl_physx_component_set_gravity(this._id, b);\n    }\n    /**\n     * Whether this rigid body's gravity flag is enabled.\n     */\n    get gravity() {\n        return !!this.engine.wasm._wl_physx_component_get_gravity(this._id);\n    }\n    /**\n     * Set whether this rigid body's simulate flag is enabled.\n     *\n     * @param b Whether the rigid body's simulate flag should be enabled.\n     */\n    set simulate(b) {\n        this.engine.wasm._wl_physx_component_set_simulate(this._id, b);\n    }\n    /**\n     * Whether this rigid body's simulate flag is enabled.\n     */\n    get simulate() {\n        return !!this.engine.wasm._wl_physx_component_get_simulate(this._id);\n    }\n    /**\n     * Set whether to allow simulation of this rigid body.\n     *\n     * {@link allowSimulation} and {@link trigger} can not be enabled at the\n     * same time. Enabling {@link allowSimulation} while {@link trigger} is enabled\n     * will disable {@link trigger}.\n     *\n     * @param b Whether to allow simulation of this rigid body.\n     */\n    set allowSimulation(b) {\n        this.engine.wasm._wl_physx_component_set_allowSimulation(this._id, b);\n    }\n    /**\n     * Whether to allow simulation of this rigid body.\n     */\n    get allowSimulation() {\n        return !!this.engine.wasm._wl_physx_component_get_allowSimulation(this._id);\n    }\n    /**\n     * Set whether this rigid body may be queried in ray casts.\n     *\n     * @param b Whether this rigid body may be queried in ray casts.\n     */\n    set allowQuery(b) {\n        this.engine.wasm._wl_physx_component_set_allowQuery(this._id, b);\n    }\n    /**\n     * Whether this rigid body may be queried in ray casts.\n     */\n    get allowQuery() {\n        return !!this.engine.wasm._wl_physx_component_get_allowQuery(this._id);\n    }\n    /**\n     * Set whether this physics body is a trigger.\n     *\n     * {@link allowSimulation} and {@link trigger} can not be enabled at the\n     * same time. Enabling trigger while {@link allowSimulation} is enabled,\n     * will disable {@link allowSimulation}.\n     *\n     * @param b Whether this physics body is a trigger.\n     */\n    set trigger(b) {\n        this.engine.wasm._wl_physx_component_set_trigger(this._id, b);\n    }\n    /**\n     * Whether this physics body is a trigger.\n     */\n    get trigger() {\n        return !!this.engine.wasm._wl_physx_component_get_trigger(this._id);\n    }\n    /**\n     * Set the shape for collision detection.\n     *\n     * @param s New shape.\n     * @since 0.8.5\n     */\n    set shape(s) {\n        this.engine.wasm._wl_physx_component_set_shape(this._id, s);\n    }\n    /** The shape for collision detection. */\n    get shape() {\n        return this.engine.wasm._wl_physx_component_get_shape(this._id);\n    }\n    /**\n     * Set additional data for the shape.\n     *\n     * Retrieved only from {@link PhysXComponent#shapeData}.\n     * @since 0.8.10\n     */\n    set shapeData(d) {\n        if (d == null || !isMeshShape(this.shape))\n            return;\n        this.engine.wasm._wl_physx_component_set_shape_data(this._id, d.index);\n    }\n    /**\n     * Additional data for the shape.\n     *\n     * `null` for {@link Shape} values: `None`, `Sphere`, `Capsule`, `Box`, `Plane`.\n     * `{index: n}` for `TriangleMesh` and `ConvexHull`.\n     *\n     * This data is currently only for passing onto or creating other {@link PhysXComponent}.\n     * @since 0.8.10\n     */\n    get shapeData() {\n        if (!isMeshShape(this.shape))\n            return null;\n        return {\n            index: this.engine.wasm._wl_physx_component_get_shape_data(this._id),\n        };\n    }\n    /**\n     * Set the shape extents for collision detection.\n     *\n     * @param e New extents for the shape.\n     * @since 0.8.5\n     */\n    set extents(e) {\n        this.extents.set(e);\n    }\n    /**\n     * Equivalent to {@link PhysXComponent.getExtents}.\n     *\n     * @note Prefer to use {@link PhysXComponent.getExtents} for performance.\n     */\n    get extents() {\n        const wasm = this.engine.wasm;\n        /** @todo: Break at 2.0.0. Do not allow modifying memory in-place. */\n        const ptr = wasm._wl_physx_component_get_extents(this._id);\n        return new Float32Array(wasm.HEAPF32.buffer, ptr, 3);\n    }\n    /**\n     * Get staticFriction.\n     */\n    get staticFriction() {\n        return this.engine.wasm._wl_physx_component_get_staticFriction(this._id);\n    }\n    /**\n     * Set staticFriction.\n     * @param v New staticFriction.\n     */\n    set staticFriction(v) {\n        this.engine.wasm._wl_physx_component_set_staticFriction(this._id, v);\n    }\n    /**\n     * Get dynamicFriction.\n     */\n    get dynamicFriction() {\n        return this.engine.wasm._wl_physx_component_get_dynamicFriction(this._id);\n    }\n    /**\n     * Set dynamicFriction\n     * @param v New dynamicDamping.\n     */\n    set dynamicFriction(v) {\n        this.engine.wasm._wl_physx_component_set_dynamicFriction(this._id, v);\n    }\n    /**\n     * Get bounciness.\n     * @since 0.9.0\n     */\n    get bounciness() {\n        return this.engine.wasm._wl_physx_component_get_bounciness(this._id);\n    }\n    /**\n     * Set bounciness.\n     * @param v New bounciness.\n     * @since 0.9.0\n     */\n    set bounciness(v) {\n        this.engine.wasm._wl_physx_component_set_bounciness(this._id, v);\n    }\n    /**\n     * Get linearDamping/\n     */\n    get linearDamping() {\n        return this.engine.wasm._wl_physx_component_get_linearDamping(this._id);\n    }\n    /**\n     * Set linearDamping.\n     * @param v New linearDamping.\n     */\n    set linearDamping(v) {\n        this.engine.wasm._wl_physx_component_set_linearDamping(this._id, v);\n    }\n    /** Get angularDamping. */\n    get angularDamping() {\n        return this.engine.wasm._wl_physx_component_get_angularDamping(this._id);\n    }\n    /**\n     * Set angularDamping.\n     * @param v New angularDamping.\n     */\n    set angularDamping(v) {\n        this.engine.wasm._wl_physx_component_set_angularDamping(this._id, v);\n    }\n    /**\n     * Set linear velocity.\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New linear velocity.\n     */\n    set linearVelocity(v) {\n        this.engine.wasm._wl_physx_component_set_linearVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Equivalent to {@link PhysXComponent.getLinearVelocity}.\n     *\n     * @note Prefer to use {@link PhysXComponent.getLinearVelocity} for performance.\n     */\n    get linearVelocity() {\n        /** @todo: Break at 2.0.0. Do not allow modifying memory in-place. */\n        const wasm = this.engine.wasm;\n        wasm._wl_physx_component_get_linearVelocity(this._id, wasm._tempMem);\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\n    }\n    /**\n     * Set angular velocity\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New angular velocity\n     */\n    set angularVelocity(v) {\n        this.engine.wasm._wl_physx_component_set_angularVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Equivalent to {@link PhysXComponent.getAngularVelocity}.\n     *\n     * @note Prefer to use {@link PhysXComponent.getAngularVelocity} for performance.\n     */\n    get angularVelocity() {\n        /** @todo: Break at 2.0.0. Do not allow modifying memory in-place. */\n        const wasm = this.engine.wasm;\n        wasm._wl_physx_component_get_angularVelocity(this._id, wasm._tempMem);\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\n    }\n    /**\n     * Set the components groups mask.\n     *\n     * @param flags New flags that need to be set.\n     */\n    set groupsMask(flags) {\n        this.engine.wasm._wl_physx_component_set_groupsMask(this._id, flags);\n    }\n    /**\n     * Get the components groups mask flags.\n     *\n     * Each bit represents membership to group, see example.\n     *\n     * ```js\n     * // Assign c to group 2\n     * c.groupsMask = (1 << 2);\n     *\n     * // Assign c to group 0\n     * c.groupsMask  = (1 << 0);\n     *\n     * // Assign c to group 0 and 2\n     * c.groupsMask = (1 << 0) | (1 << 2);\n     *\n     * (c.groupsMask & (1 << 2)) != 0; // true\n     * (c.groupsMask & (1 << 7)) != 0; // false\n     * ```\n     */\n    get groupsMask() {\n        return this.engine.wasm._wl_physx_component_get_groupsMask(this._id);\n    }\n    /**\n     * Set the components blocks mask.\n     *\n     * @param flags New flags that need to be set.\n     */\n    set blocksMask(flags) {\n        this.engine.wasm._wl_physx_component_set_blocksMask(this._id, flags);\n    }\n    /**\n     * Get the components blocks mask flags.\n     *\n     * Each bit represents membership to the block, see example.\n     *\n     * ```js\n     * // Block overlap with any objects in group 2\n     * c.blocksMask = (1 << 2);\n     *\n     * // Block overlap with any objects in group 0\n     * c.blocksMask  = (1 << 0)\n     *\n     * // Block overlap with any objects in group 0 and 2\n     * c.blocksMask = (1 << 0) | (1 << 2);\n     *\n     * (c.blocksMask & (1 << 2)) != 0; // true\n     * (c.blocksMask & (1 << 7)) != 0; // false\n     * ```\n     */\n    get blocksMask() {\n        return this.engine.wasm._wl_physx_component_get_blocksMask(this._id);\n    }\n    /**\n     * Set axes to lock for linear velocity.\n     *\n     * @param lock The Axis that needs to be set.\n     *\n     * Combine flags with Bitwise OR:\n     *\n     * ```js\n     * body.linearLockAxis = LockAxis.X | LockAxis.Y; // x and y set\n     * body.linearLockAxis = LockAxis.X; // y unset\n     * ```\n     *\n     * @note This has no effect if the component is static.\n     */\n    set linearLockAxis(lock) {\n        this.engine.wasm._wl_physx_component_set_linearLockAxis(this._id, lock);\n    }\n    /**\n     * Get the linear lock axes flags.\n     *\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed.\n     *\n     * ```js\n     * if(body.linearLockAxis & LockAxis.Y) {\n     *     console.log(\"The Y flag was set!\");\n     * }\n     * ```\n     *\n     * @return axes that are currently locked for linear movement.\n     */\n    get linearLockAxis() {\n        return this.engine.wasm._wl_physx_component_get_linearLockAxis(this._id);\n    }\n    /**\n     * Set axes to lock for angular velocity.\n     *\n     * @param lock The Axis that needs to be set.\n     *\n     * ```js\n     * body.angularLockAxis = LockAxis.X | LockAxis.Y; // x and y set\n     * body.angularLockAxis = LockAxis.X; // y unset\n     * ```\n     *\n     * @note This has no effect if the component is static.\n     */\n    set angularLockAxis(lock) {\n        this.engine.wasm._wl_physx_component_set_angularLockAxis(this._id, lock);\n    }\n    /**\n     * Get the angular lock axes flags.\n     *\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed:\n     *\n     * ```js\n     * if(body.angularLockAxis & LockAxis.Y) {\n     *     console.log(\"The Y flag was set!\");\n     * }\n     * ```\n     *\n     * @return axes that are currently locked for angular movement.\n     */\n    get angularLockAxis() {\n        return this.engine.wasm._wl_physx_component_get_angularLockAxis(this._id);\n    }\n    /**\n     * Set mass.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * @param m New mass.\n     */\n    set mass(m) {\n        this.engine.wasm._wl_physx_component_set_mass(this._id, m);\n    }\n    /** Mass */\n    get mass() {\n        return this.engine.wasm._wl_physx_component_get_mass(this._id);\n    }\n    /**\n     * Set mass space interia tensor.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New mass space interatia tensor.\n     */\n    set massSpaceInteriaTensor(v) {\n        this.engine.wasm._wl_physx_component_set_massSpaceInertiaTensor(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Set the rigid body to sleep upon activation.\n     *\n     * When asleep, the rigid body will not be simulated until the next contact.\n     *\n     * @param flag `true` to sleep upon activation.\n     *\n     * @since 1.1.5\n     */\n    set sleepOnActivate(flag) {\n        this.engine.wasm._wl_physx_component_set_sleepOnActivate(this._id, flag);\n    }\n    /**\n     * `true` if the rigid body is set to sleep upon activation, `false` otherwise.\n     *\n     * @since 1.1.5\n     */\n    get sleepOnActivate() {\n        return !!this.engine.wasm._wl_physx_component_get_sleepOnActivate(this._id);\n    }\n    /**\n     * Apply a force.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     * @param localForce Whether the force vector is in local space, default `false`.\n     * @param p Position to apply force at, default is center of mass.\n     * @param local Whether position is in local space, default `false`.\n     */\n    addForce(f, m = ForceMode.Force, localForce = false, p, local = false) {\n        const wasm = this.engine.wasm;\n        if (!p) {\n            wasm._wl_physx_component_addForce(this._id, f[0], f[1], f[2], m, localForce);\n            return;\n        }\n        wasm._wl_physx_component_addForceAt(this._id, f[0], f[1], f[2], m, localForce, p[0], p[1], p[2], local);\n    }\n    /**\n     * Apply torque.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     */\n    addTorque(f, m = ForceMode.Force) {\n        this.engine.wasm._wl_physx_component_addTorque(this._id, f[0], f[1], f[2], m);\n    }\n    /**\n     * Add on collision callback.\n     *\n     * @param callback Function to call when this rigid body (un)collides with any other.\n     *\n     * ```js\n     *  let rigidBody = this.object.getComponent('physx');\n     *  rigidBody.onCollision(function(type, other) {\n     *      // Ignore uncollides\n     *      if(type == CollisionEventType.TouchLost) return;\n     *\n     *      // Take damage on collision with enemies\n     *      if(other.object.name.startsWith(\"enemy-\")) {\n     *          this.applyDamage(10);\n     *      }\n     *  }.bind(this));\n     * ```\n     *\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollision(callback) {\n        return this.onCollisionWith(this, callback);\n    }\n    /**\n     * Add filtered on collision callback.\n     *\n     * @param otherComp Component for which callbacks will\n     *        be triggered. If you pass this component, the method is equivalent to.\n     *        {@link PhysXComponent#onCollision}.\n     * @param callback Function to call when this rigid body\n     *        (un)collides with `otherComp`.\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollisionWith(otherComp, callback) {\n        const physics = this.engine.physics;\n        physics._callbacks[this._id] = physics._callbacks[this._id] || [];\n        physics._callbacks[this._id].push(callback);\n        return this.engine.wasm._wl_physx_component_addCallback(this._id, otherComp._id || this._id);\n    }\n    /**\n     * Remove a collision callback added with {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     *\n     * @param callbackId Callback id as returned by {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     * @throws When the callback does not belong to the component.\n     * @throws When the callback does not exist.\n     */\n    removeCollisionCallback(callbackId) {\n        const physics = this.engine.physics;\n        const r = this.engine.wasm._wl_physx_component_removeCallback(this._id, callbackId);\n        /* r is the amount of object to remove from the end of the\n         * callbacks array for this object */\n        if (r)\n            physics._callbacks[this._id].splice(-r);\n    }\n}\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"static\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"translationOffset\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"rotationOffset\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"kinematic\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"gravity\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"simulate\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"allowSimulation\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"allowQuery\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"trigger\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"shape\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"shapeData\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"extents\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"staticFriction\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"dynamicFriction\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"bounciness\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"linearDamping\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"angularDamping\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"linearVelocity\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"angularVelocity\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"groupsMask\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"blocksMask\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"linearLockAxis\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"angularLockAxis\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"mass\", null);\n__decorate([\n    nativeProperty()\n], PhysXComponent.prototype, \"sleepOnActivate\", null);\n/**\n * Access to the physics scene\n */\nexport class Physics {\n    /**\n     * @hidden\n     *\n     * **Note**: This is public to emulate a `friend` accessor.\n     */\n    _callbacks;\n    /** Hit. */\n    _hit;\n    /** Wonderland Engine instance */\n    _engine;\n    /** Ray Hit */\n    _rayHit;\n    constructor(engine) {\n        this._engine = engine;\n        this._rayHit = engine.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(engine.scene, this._rayHit);\n        this._callbacks = {};\n    }\n    /**\n     * Cast a ray through the scene and find intersecting physics components.\n     *\n     * The resulting ray hit will contain **up to 4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * Example:\n     *\n     * ```js\n     * const hit = engine.physics.rayCast(\n     *     [0, 0, 0],\n     *     [0, 0, 1],\n     *     1 << 0 | 1 << 4, // Only check against physics components in groups 0 and 4\n     *     25\n     * );\n     * if (hit.hitCount > 0) {\n     *     const locations = hit.getLocations();\n     *     console.log(`Object hit at: ${locations[0][0]}, ${locations[0][1]}, ${locations[0][2]}`);\n     * }\n     * ```\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param groupMask Bitmask of physics groups to filter by: only objects\n     *        that are part of given groups are considered for the raycast.\n     * @param maxDistance Maximum **inclusive** hit distance. Defaults to `100`.\n     *\n     * @returns The {@link RayHit} instance, cached by this class.\n     *\n     * @note The returned {@link RayHit} object is owned by the {@link Physics}\n     *       instance and will be reused with the next {@link Physics#rayCast} call.\n     */\n    rayCast(o, d, groupMask, maxDistance = 100.0) {\n        const scene = this._engine.scene._index;\n        this._engine.wasm._wl_physx_ray_cast(scene, o[0], o[1], o[2], d[0], d[1], d[2], groupMask, maxDistance, this._rayHit);\n        return this._hit;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n}\n/**\n * Mesh index type.\n */\nexport var MeshIndexType;\n(function (MeshIndexType) {\n    /** Single byte mesh index, range 0-255 */\n    MeshIndexType[MeshIndexType[\"UnsignedByte\"] = 1] = \"UnsignedByte\";\n    /** Two byte mesh index, range 0-65535 */\n    MeshIndexType[MeshIndexType[\"UnsignedShort\"] = 2] = \"UnsignedShort\";\n    /** Four byte mesh index, range 0-4294967295 */\n    MeshIndexType[MeshIndexType[\"UnsignedInt\"] = 4] = \"UnsignedInt\";\n})(MeshIndexType || (MeshIndexType = {}));\n/**\n * Mesh skinning type.\n */\nexport var MeshSkinningType;\n(function (MeshSkinningType) {\n    /** Not skinned */\n    MeshSkinningType[MeshSkinningType[\"None\"] = 0] = \"None\";\n    /** Skinned, 4 joints/weight per vertex */\n    MeshSkinningType[MeshSkinningType[\"FourJoints\"] = 1] = \"FourJoints\";\n    /** Skinned, 8 joints/weight per vertex */\n    MeshSkinningType[MeshSkinningType[\"EightJoints\"] = 2] = \"EightJoints\";\n})(MeshSkinningType || (MeshSkinningType = {}));\n/**\n * Wrapper around a native mesh data.\n *\n * For more information about how to create meshes, have a look at the\n * {@link MeshManager} class.\n *\n * #### Update\n *\n * To modify a mesh, you get access to a {@link MeshAttributeAccessor} that\n * allows you to modify the content of the buffers:\n *\n * Usage:\n *\n * ```js\n * const mesh = engine.es.create({vertexCount: 3, indexData: [0, 1, 2]});\n * const positions = mesh.attribute(MeshAttribute.Position);\n * ...\n * ```\n *\n * @note Meshes are **per-engine**, they can thus be shared by multiple scenes.\n */\nexport class Mesh extends Resource {\n    /**\n     * @deprecated Use {@link MeshManager.create} instead, accessible via {@link WonderlandEngine.meshes}:\n     *\n     * ```js\n     * const mesh = engine.meshes.create({vertexCount: 3, indexData: [0, 1, 2]});\n     * ...\n     * mesh.update();\n     * ```\n     */\n    constructor(engine, params) {\n        if (!isNumber(params)) {\n            const mesh = engine.meshes.create(params);\n            /* `super()` must be called as stated in the specification */\n            super(engine, mesh._index);\n            return mesh;\n        }\n        super(engine, params);\n    }\n    /** Number of vertices in this mesh. */\n    get vertexCount() {\n        return this.engine.wasm._wl_mesh_get_vertexCount(this._id);\n    }\n    /** Index data (read-only) or `null` if the mesh is not indexed. */\n    get indexData() {\n        const wasm = this.engine.wasm;\n        const tempMem = wasm._tempMem;\n        const ptr = wasm._wl_mesh_get_indexData(this._id, tempMem, tempMem + 4);\n        if (ptr === null)\n            return null;\n        const indexCount = wasm.HEAPU32[tempMem / 4];\n        const indexSize = wasm.HEAPU32[tempMem / 4 + 1];\n        switch (indexSize) {\n            case MeshIndexType.UnsignedByte:\n                return new Uint8Array(wasm.HEAPU8.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedShort:\n                return new Uint16Array(wasm.HEAPU16.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedInt:\n                return new Uint32Array(wasm.HEAPU32.buffer, ptr, indexCount);\n        }\n        return null;\n    }\n    /**\n     * Apply changes to {@link attribute | vertex attributes}.\n     *\n     * Uploads the updated vertex attributes to the GPU and updates the bounding\n     * sphere to match the new vertex positions.\n     *\n     * Since this is an expensive operation, call it only once you have performed\n     * all modifications on a mesh and avoid calling if you did not perform any\n     * modifications at all.\n     */\n    update() {\n        this.engine.wasm._wl_mesh_update(this._id);\n    }\n    getBoundingSphere(out = new Float32Array(4)) {\n        const wasm = this.engine.wasm;\n        this.engine.wasm._wl_mesh_get_boundingSphere(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        return out;\n    }\n    attribute(attr) {\n        if (typeof attr != 'number')\n            throw new TypeError('Expected number, but got ' + typeof attr);\n        const wasm = this.engine.wasm;\n        const tempMemUint32 = wasm._tempMemUint32;\n        wasm._wl_mesh_get_attribute(this._id, attr, wasm._tempMem);\n        if (tempMemUint32[0] == 255)\n            return null;\n        const arraySize = tempMemUint32[5];\n        return new MeshAttributeAccessor(this.engine, {\n            attribute: tempMemUint32[0],\n            offset: tempMemUint32[1],\n            stride: tempMemUint32[2],\n            formatSize: tempMemUint32[3],\n            componentCount: tempMemUint32[4],\n            /* The WASM API returns `0` for a scalar value. We clamp it to 1 as we strictly use it as a multiplier for get/set operations */\n            arraySize: arraySize ? arraySize : 1,\n            length: this.vertexCount,\n            bufferType: (attr !== MeshAttribute.JointId\n                ? Float32Array\n                : Uint16Array),\n        });\n    }\n    /**\n     * Destroy and free the meshes memory.\n     *\n     * It is best practice to set the mesh variable to `null` after calling\n     * destroy to prevent accidental use:\n     *\n     * ```js\n     *   mesh.destroy();\n     *   mesh = null;\n     * ```\n     *\n     * Accessing the mesh after destruction behaves like accessing an empty\n     * mesh.\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        this.engine.wasm._wl_mesh_destroy(this._id);\n        this.engine.meshes._destroy(this);\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Mesh(destroyed)';\n        }\n        return `Mesh(${this._index})`;\n    }\n}\n/**\n * An iterator over a mesh vertex attribute.\n *\n * Usage:\n *\n * ```js\n * const mesh = this.object.getComponent('mesh').mesh;\n * const positions = mesh.attribute(MeshAttribute.Position);\n *\n * // Equivalent to `new Float32Array(3)`.\n * const temp = positions.createArray();\n *\n * for(let i = 0; i < positions.length; ++i) {\n *     // `pos` will reference `temp` and thereby not allocate additional\n *     // memory, which would cause a perf spike when collected.\n *     const pos = positions.get(i, temp);\n *     // Scale position by 2 on x-axis only.\n *     pos[0] *= 2.0;\n *     positions.set(i, pos);\n * }\n * // We're done modifying, tell the engine to move vertex data to the GPU.\n * mesh.update();\n * ```\n */\nexport class MeshAttributeAccessor {\n    /** Max number of elements. */\n    length = 0;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /** Attribute index. @hidden */\n    _attribute = -1;\n    /** Attribute offset. @hidden */\n    _offset = 0;\n    /** Attribute stride. @hidden */\n    _stride = 0;\n    /** Format size native enum. @hidden */\n    _formatSize = 0;\n    /** Number of components per vertex. @hidden */\n    _componentCount = 0;\n    /** Number of values per vertex. @hidden */\n    _arraySize = 1;\n    /**\n     * Class to instantiate an ArrayBuffer to get/set values.\n     */\n    _bufferType;\n    /**\n     * Function to allocate temporary WASM memory. It is cached in the accessor to avoid\n     * conditionals during get/set.\n     */\n    _tempBufferGetter;\n    /**\n     * Create a new instance.\n     *\n     * @note Please use {@link Mesh.attribute} to create a new instance.\n     *\n     * @param options Contains information about how to read the data.\n     * @note Do not use this constructor. Instead, please use the {@link Mesh.attribute} method.\n     *\n     * @hidden\n     */\n    constructor(engine, options) {\n        this._engine = engine;\n        const wasm = this._engine.wasm;\n        this._attribute = options.attribute;\n        this._offset = options.offset;\n        this._stride = options.stride;\n        this._formatSize = options.formatSize;\n        this._componentCount = options.componentCount;\n        this._arraySize = options.arraySize;\n        this._bufferType = options.bufferType;\n        this.length = options.length;\n        this._tempBufferGetter = (this._bufferType === Float32Array\n            ? wasm.getTempBufferF32.bind(wasm)\n            : wasm.getTempBufferU16.bind(wasm));\n    }\n    /**\n     * Create a new TypedArray to hold this attribute's values.\n     *\n     * This method is useful to create a view to hold the data to\n     * pass to {@link get} and {@link set}\n     *\n     * Example:\n     *\n     * ```js\n     * const vertexCount = 4;\n     * const positionAttribute = mesh.attribute(MeshAttribute.Position);\n     *\n     * // A position has 3 floats per vertex. Thus, positions has length 3 * 4.\n     * const positions = positionAttribute.createArray(vertexCount);\n     * ```\n     *\n     * @param count The number of **vertices** expected.\n     * @returns A TypedArray with the appropriate format to access the data\n     */\n    createArray(count = 1) {\n        count = count > this.length ? this.length : count;\n        return new this._bufferType(count * this._componentCount * this._arraySize);\n    }\n    get(index, out = this.createArray()) {\n        if (out.length % this._componentCount !== 0) {\n            throw new Error(`out.length, ${out.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        }\n        const dest = this._tempBufferGetter(out.length);\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\n        const destSize = elementSize * out.length;\n        const srcFormatSize = this._formatSize * this._arraySize;\n        const destFormatSize = this._componentCount * elementSize * this._arraySize;\n        this._engine.wasm._wl_mesh_get_attribute_values(this._attribute, srcFormatSize, this._offset + index * this._stride, this._stride, destFormatSize, dest.byteOffset, destSize);\n        for (let i = 0; i < out.length; ++i)\n            out[i] = dest[i];\n        return out;\n    }\n    /**\n     * Set attribute element.\n     *\n     * @param i Index\n     * @param v Value to set the element to\n     *\n     * `v.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `v.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    set(i, v) {\n        if (v.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${v.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\n        const srcSize = elementSize * v.length;\n        const srcFormatSize = this._componentCount * elementSize * this._arraySize;\n        const destFormatSize = this._formatSize * this._arraySize;\n        const wasm = this._engine.wasm;\n        /* Unless we are already working with data from WASM heap, we\n         * need to copy into temporary memory. */\n        if (v.buffer != wasm.HEAPU8.buffer) {\n            const dest = this._tempBufferGetter(v.length);\n            dest.set(v);\n            v = dest;\n        }\n        wasm._wl_mesh_set_attribute_values(this._attribute, srcFormatSize, v.byteOffset, srcSize, destFormatSize, this._offset + i * this._stride, this._stride);\n        return this;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n}\n/**\n * Wrapper around a native font resource.\n *\n * @note Fonts are **per-engine**, they can thus be shared by multiple scenes.\n *\n * @since 1.2.0\n */\nexport class Font extends Resource {\n    /** Em height in object space. Equivalent to line height. */\n    get emHeight() {\n        return this.engine.wasm._wl_font_get_emHeight(this._id);\n    }\n    /**\n     * Cap height in object space. This is the typical height of capital\n     * letters. Can be 0 if not defined by the font.\n     */\n    get capHeight() {\n        return this.engine.wasm._wl_font_get_capHeight(this._id);\n    }\n    /**\n     * X height in object space. This is the typical height of lowercase\n     * letters. Can be 0 if not defined by the font.\n     */\n    get xHeight() {\n        return this.engine.wasm._wl_font_get_xHeight(this._id);\n    }\n}\n/** Temporary canvas */\nlet temp2d = null;\n/**\n * Wrapper around a native texture data.\n *\n * For more information about how to create meshes, have a look at the\n * {@link TextureManager} class.\n *\n * @note Textures are **per-engine**, they can thus be shared by multiple scenes.\n */\nexport class Texture extends Resource {\n    /**\n     * @deprecated Use {@link TextureManager.create} instead, accessible via\n     * {@link WonderlandEngine.textures}:\n     *\n     * ```js\n     * const image = new Image();\n     * image.onload = () => {\n     *     const texture = engine.textures.create(image);\n     * };\n     * ```\n     */\n    constructor(engine, param) {\n        if (isImageLike(param)) {\n            const texture = engine.textures.create(param);\n            /* `super()` must be called as stated in the specification */\n            super(engine, texture._index);\n            return texture;\n        }\n        super(engine, param);\n    }\n    /**\n     * Whether this texture is valid\n     *\n     * @deprecated Use {@link SceneResource#isDestroyed} instead.\n     */\n    get valid() {\n        return !this.isDestroyed;\n    }\n    /**\n     * Index in this manager.\n     *\n     * @deprecated Use {@link Texture.index} instead.\n     */\n    get id() {\n        return this.index;\n    }\n    /** Update the texture to match the HTML element (e.g. reflect the current frame of a video). */\n    update() {\n        const image = this._imageIndex;\n        if (!this.valid || !image)\n            return;\n        this.engine.wasm._wl_renderer_updateImage(image);\n    }\n    /** Width of the texture. */\n    get width() {\n        /* HTML textures should be read directly from js, since the C++ could be\n         * one frame out-of-sync on the size of the element itself. */\n        const element = this.htmlElement;\n        if (element)\n            return element.width;\n        const wasm = this.engine.wasm;\n        wasm._wl_image_size(this._imageIndex, wasm._tempMem);\n        return wasm._tempMemUint32[0];\n    }\n    /** Height of the texture. */\n    get height() {\n        /* HTML textures should be read directly from js, since the C++ could be\n         * one frame out-of-sync on the size of the element itself. */\n        const element = this.htmlElement;\n        if (element)\n            return element.height;\n        const wasm = this.engine.wasm;\n        wasm._wl_image_size(this._imageIndex, wasm._tempMem);\n        return wasm._tempMemUint32[1];\n    }\n    /**\n     * Returns the html element associated to this texture.\n     *\n     * @note This accessor will return `null` if the image is compressed.\n     */\n    get htmlElement() {\n        const image = this._imageIndex;\n        if (!image)\n            return null;\n        const wasm = this.engine.wasm;\n        const jsImageIndex = wasm._wl_image_get_jsImage_index(image);\n        /* Since the first element is `null`, no need to check for `jsImageIndex` */\n        return wasm._images[jsImageIndex];\n    }\n    /**\n     * Update a subrange on the texture to match the HTML element (e.g. reflect the current frame of a video).\n     *\n     * Usage:\n     *\n     * ```js\n     * // Copies rectangle of pixel starting from (10, 20)\n     * texture.updateSubImage(10, 20, 600, 400);\n     * ```\n     *\n     * @param x x offset\n     * @param y y offset\n     * @param w width\n     * @param h height\n     */\n    updateSubImage(x, y, w, h) {\n        if (this.isDestroyed)\n            return;\n        const image = this._imageIndex;\n        if (!image)\n            return;\n        const wasm = this.engine.wasm;\n        const jsImageIndex = wasm._wl_image_get_jsImage_index(image);\n        /* Lazy initialize temp canvas */\n        if (!temp2d) {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                throw new Error('Texture.updateSubImage(): Failed to obtain CanvasRenderingContext2D.');\n            }\n            temp2d = {\n                canvas,\n                ctx,\n            };\n        }\n        const img = wasm._images[jsImageIndex];\n        if (!img)\n            return;\n        /** @todo: If the image is an instance of canvas, this\n         * can be skipped entirely. */\n        temp2d.canvas.width = w;\n        temp2d.canvas.height = h;\n        temp2d.ctx.drawImage(img, x, y, w, h, 0, 0, w, h);\n        const yOffset = (img.videoHeight ?? img.height) - y - h;\n        wasm._images[jsImageIndex] = temp2d.canvas;\n        wasm._wl_renderer_updateImage(image, x, yOffset);\n        wasm._images[jsImageIndex] = img;\n    }\n    /**\n     * Destroy and free the texture's texture altas space and memory.\n     *\n     * It is best practice to set the texture variable to `null` after calling\n     * destroy to prevent accidental use of the invalid texture:\n     *\n     * ```js\n     *   texture.destroy();\n     *   texture = null;\n     * ```\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        const wasm = this.engine.wasm;\n        wasm._wl_texture_destroy(this._id);\n        this.engine.textures._destroy(this);\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Texture(destroyed)';\n        }\n        return `Texture(${this._index})`;\n    }\n    get _imageIndex() {\n        return this.engine.wasm._wl_texture_get_image_index(this._id);\n    }\n}\n/**\n * Wrapper around a native animation.\n */\nexport class Animation extends SceneResource {\n    /**\n     * @param index Index in the manager\n     */\n    constructor(host = WL, index) {\n        const scene = host instanceof Prefab ? host : host.scene;\n        super(scene, index);\n    }\n    /** Duration of this animation. */\n    get duration() {\n        return this.engine.wasm._wl_animation_get_duration(this._id);\n    }\n    /** Number of tracks in this animation. */\n    get trackCount() {\n        return this.engine.wasm._wl_animation_get_trackCount(this._id);\n    }\n    /**\n     * Clone this animation retargeted to a new set of objects.\n     *\n     * The clone shares most of the data with the original and is therefore\n     * light-weight.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * If retargeting to {@link Skin}, the join names will be used to determine a mapping\n     * from the previous skin to the new skin. The source skin will be retrieved from\n     * the first track in the animation that targets a joint.\n     *\n     * @param newTargets New targets per track. Expected to have\n     *      {@link Animation#trackCount} elements or to be a {@link Skin}.\n     * @returns The retargeted clone of this animation.\n     */\n    retarget(newTargets) {\n        const wasm = this.engine.wasm;\n        if (newTargets instanceof Skin) {\n            const index = wasm._wl_animation_retargetToSkin(this._id, newTargets._id);\n            return this._scene.animations.wrap(index);\n        }\n        if (newTargets.length != this.trackCount) {\n            throw Error('Expected ' +\n                this.trackCount.toString() +\n                ' targets, but got ' +\n                newTargets.length.toString());\n        }\n        const ptr = wasm._malloc(2 * newTargets.length);\n        for (let i = 0; i < newTargets.length; ++i) {\n            const object3d = newTargets[i];\n            this.scene.assertOrigin(object3d);\n            /* Use local id here and **not** packed id, because the WASM\n             * takes ownership and reinterprets the ids. */\n            wasm.HEAPU16[ptr >> (1 + i)] = newTargets[i].objectId;\n        }\n        const index = wasm._wl_animation_retarget(this._id, ptr);\n        wasm._free(ptr);\n        return this._scene.animations.wrap(index);\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Animation(destroyed)';\n        }\n        return `Animation(${this._index})`;\n    }\n}\n/**\n * Scene graph object.\n *\n * Node in the scene graph or \"entity\". Consists of transformation and a reference\n * to its parent object. Usually holds components and is accessible by components\n * through {@link Component#object}.\n *\n * Objects are stored in a data oriented manner inside WebAssembly memory. This class\n * is a JavaScript API wrapper around this memory for more convenient use in\n * components.\n *\n * Objects can be created and added to a scene through {@link Prefab.addObject}:\n *\n * ```js\n * const parent = scene.addObject();\n * parent.name = 'parent`';\n * const child = scene.addObject(parent);\n * child.name = 'child`';\n * ```\n */\nexport class Object3D {\n    /**\n     * Packed object id, containing scene index and local id.\n     *\n     * @hidden\n     */\n    _id = -1;\n    /** Object id, relative to the scene manager. @hidden */\n    _localId = -1;\n    /** Scene instance. @hidden */\n    _scene;\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /**\n     * @param o Object id to wrap.\n     *\n     * @deprecated Objects must be obtained via {@link Scene.addObject} or {@link Scene.wrap}:\n     *\n     * ```js\n     * // Create a new object.\n     * const obj = scene.addObject();\n     *\n     * // Wrap an object using its id. The id must be valid.\n     * const obj = scene.wrap(0);\n     * ```\n     *\n     * @hidden\n     */\n    constructor(scene, id) {\n        scene = scene instanceof Prefab ? scene : scene.scene;\n        this._localId = id;\n        this._id = (scene._index << 22) | id;\n        this._scene = scene;\n        /** @todo: Remove and only keep getter. */\n        this._engine = scene.engine;\n    }\n    /**\n     * Name of the object.\n     *\n     * Useful for identifying objects during debugging.\n     */\n    get name() {\n        const wasm = this._engine.wasm;\n        return wasm.UTF8ToString(wasm._wl_object_name(this._id));\n    }\n    /**\n     * Set the object's name.\n     *\n     * @param newName The new name to set.\n     */\n    set name(newName) {\n        const wasm = this._engine.wasm;\n        wasm._wl_object_set_name(this._id, wasm.tempUTF8(newName));\n    }\n    /**\n     * Parent of this object or `null` if parented to root.\n     */\n    get parent() {\n        const p = this._engine.wasm._wl_object_parent(this._id);\n        return p === 0 ? null : this._scene.wrap(p);\n    }\n    /**\n     * Equivalent to {@link Object3D.getChildren}.\n     *\n     * @note Prefer to use {@link Object3D.getChildren} for performance.\n     */\n    get children() {\n        return this.getChildren();\n    }\n    /** The number of children of this object. */\n    get childrenCount() {\n        return this._engine.wasm._wl_object_get_children_count(this._id);\n    }\n    /**\n     * Reparent object to given object.\n     *\n     * @note Reparenting is not trivial and might have a noticeable performance impact.\n     *\n     * @param newParent New parent or `null` to parent to root\n     */\n    set parent(newParent) {\n        this.scene.assertOrigin(newParent);\n        this._engine.wasm._wl_object_set_parent(this._id, newParent == null ? 0 : newParent._id);\n    }\n    /** Local object id in the scene manager. */\n    get objectId() {\n        return this._localId;\n    }\n    /** Scene instance. */\n    get scene() {\n        return this._scene;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n    /**\n     * Clone this hierarchy into a new one.\n     *\n     * Cloning copies the hierarchy structure, object names,\n     * as well as components.\n     *\n     * JavaScript components are cloned using {@link Component.copy}. You can\n     * override this method in your components.\n     *\n     * @param parent The parent for the cloned hierarchy or `null` to clone\n     *     into the scene root. Defaults to `null`.\n     *\n     * @returns The clone of this object.\n     */\n    clone(parent = null) {\n        this.scene.assertOrigin(parent);\n        const engine = this._engine;\n        const id = engine.wasm._wl_object_clone(this._id, parent ? parent._id : 0);\n        return this._scene.wrap(id);\n    }\n    /**\n     * Children of this object.\n     *\n     * @note Child order is **undefined**. No assumptions should be made\n     * about the index of a specific object.\n     *\n     * If you need to access a specific child of this object, you can\n     * use {@link Object3D.findByName}.\n     *\n     * When the object exists in the scene at editor time, prefer passing it as\n     * a component property.\n     *\n     * @note When providing an output array, only `this.childrenCount` elements will be written.\n     * The rest of the array will not be modified by this method.\n     *\n     * @param out Destination array, expected to have at least `this.childrenCount` elements.\n     * @returns The `out` parameter.\n     */\n    getChildren(out = new Array(this.childrenCount)) {\n        const childrenCount = this.childrenCount;\n        if (childrenCount === 0)\n            return out;\n        const wasm = this._engine.wasm;\n        wasm.requireTempMem(childrenCount * 2);\n        this._engine.wasm._wl_object_get_children(this._id, wasm._tempMem, wasm._tempMemSize >> 1);\n        for (let i = 0; i < childrenCount; ++i) {\n            out[i] = this._scene.wrap(wasm._tempMemUint16[i]);\n        }\n        return out;\n    }\n    /**\n     * Reset local transformation (translation, rotation and scaling) to identity.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetTransform() {\n        this._engine.wasm._wl_object_reset_translation_rotation(this._id);\n        this._engine.wasm._wl_object_reset_scaling(this._id);\n        return this;\n    }\n    /**\n     * Reset local position and rotation to identity.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetPositionRotation() {\n        this._engine.wasm._wl_object_reset_translation_rotation(this._id);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.resetPositionRotation} instead. */\n    resetTranslationRotation() {\n        return this.resetPositionRotation();\n    }\n    /**\n     * Reset local rotation, keep translation.\n     *\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetRotation() {\n        this._engine.wasm._wl_object_reset_rotation(this._id);\n        return this;\n    }\n    /**\n     * Reset local translation, keep rotation.\n     *\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetPosition() {\n        this._engine.wasm._wl_object_reset_translation(this._id);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.resetPosition} instead. */\n    resetTranslation() {\n        return this.resetPosition();\n    }\n    /**\n     * Reset local scaling to identity (``[1.0, 1.0, 1.0]``).\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    resetScaling() {\n        this._engine.wasm._wl_object_reset_scaling(this._id);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.translateLocal} instead. */\n    translate(v) {\n        return this.translateLocal(v);\n    }\n    /**\n     * Translate object by a vector in the parent's space.\n     *\n     * @param v Vector to translate by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    translateLocal(v) {\n        this._engine.wasm._wl_object_translate(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    /**\n     * Translate object by a vector in object space.\n     *\n     * @param v Vector to translate by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    translateObject(v) {\n        this._engine.wasm._wl_object_translate_obj(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    /**\n     * Translate object by a vector in world space.\n     *\n     * @param v Vector to translate by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    translateWorld(v) {\n        this._engine.wasm._wl_object_translate_world(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.rotateAxisAngleDegLocal} instead. */\n    rotateAxisAngleDeg(a, d) {\n        this.rotateAxisAngleDegLocal(a, d);\n        return this;\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleRad}\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateAxisAngleDegLocal(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle(this._id, a[0], a[1], a[2], d);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.rotateAxisAngleRadLocal} instead. */\n    rotateAxisAngleRad(a, d) {\n        return this.rotateAxisAngleRadLocal(a, d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in radians.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleDeg}\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateAxisAngleRadLocal(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_rad(this._id, a[0], a[1], a[2], d);\n        return this;\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in object space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @see {@link rotateAxisAngleRadObject}\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateAxisAngleDegObject(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_obj(this._id, a[0], a[1], a[2], d);\n        return this;\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in object space\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param a Vector representing the rotation axis\n     * @param d Angle in degrees\n     *\n     * @see {@link rotateAxisAngleDegObject}\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateAxisAngleRadObject(a, d) {\n        this._engine.wasm._wl_object_rotate_axis_angle_rad_obj(this._id, a[0], a[1], a[2], d);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.rotateLocal} instead. */\n    rotate(q) {\n        this.rotateLocal(q);\n        return this;\n    }\n    /**\n     * Rotate by a quaternion.\n     *\n     * @param q the Quaternion to rotate by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateLocal(q) {\n        this._engine.wasm._wl_object_rotate_quat(this._id, q[0], q[1], q[2], q[3]);\n        return this;\n    }\n    /**\n     * Rotate by a quaternion in object space.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param q the Quaternion to rotate by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    rotateObject(q) {\n        this._engine.wasm._wl_object_rotate_quat_obj(this._id, q[0], q[1], q[2], q[3]);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.scaleLocal} instead. */\n    scale(v) {\n        this.scaleLocal(v);\n        return this;\n    }\n    /**\n     * Scale object by a vector in object space.\n     *\n     * @param v Vector to scale by.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    scaleLocal(v) {\n        this._engine.wasm._wl_object_scale(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    getPositionLocal(out = new Float32Array(3)) {\n        const wasm = this._engine.wasm;\n        /* Translation is different than rotation & scaling.\n         * We can't simply read the memory. */\n        wasm._wl_object_get_translation_local(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    getTranslationLocal(out = new Float32Array(3)) {\n        return this.getPositionLocal(out);\n    }\n    getPositionWorld(out = new Float32Array(3)) {\n        const wasm = this._engine.wasm;\n        /* Translation is different than rotation & scaling.\n         * We can't simply read the memory. */\n        wasm._wl_object_get_translation_world(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    getTranslationWorld(out = new Float32Array(3)) {\n        return this.getPositionWorld(out);\n    }\n    /**\n     * Set local / object space position.\n     *\n     * Concatenates a new translation dual quaternion onto the existing rotation.\n     *\n     * @param v New local position array/vector, expected to have at least 3 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setPositionLocal(v) {\n        this._engine.wasm._wl_object_set_translation_local(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.setPositionLocal} instead. */\n    setTranslationLocal(v) {\n        return this.setPositionLocal(v);\n    }\n    /**\n     * Set world space position.\n     *\n     * Applies the inverse parent transform with a new translation dual quaternion\n     * which is concatenated onto the existing rotation.\n     *\n     * @param v New world position array/vector, expected to have at least 3 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setPositionWorld(v) {\n        this._engine.wasm._wl_object_set_translation_world(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    /** @deprecated Please use {@link Object3D.setPositionWorld} instead. */\n    setTranslationWorld(v) {\n        return this.setPositionWorld(v);\n    }\n    getScalingLocal(out = new Float32Array(3)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_scaling_local(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        return out;\n    }\n    /**\n     * Set local / object space scaling.\n     *\n     * @param v New local scaling array/vector, expected to have at least 3 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setScalingLocal(v) {\n        this._engine.wasm._wl_object_set_scaling_local(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    getScalingWorld(out = new Float32Array(3)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_scaling_world(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        return out;\n    }\n    /**\n     * Set World space scaling.\n     *\n     * @param v New world scaling array/vector, expected to have at least 3 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setScalingWorld(v) {\n        this._engine.wasm._wl_object_set_scaling_world(this._id, v[0], v[1], v[2]);\n        return this;\n    }\n    getRotationLocal(out = new Float32Array(4)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_local(this._id) / 4; /* Align F32 */\n        /* The first 4 floats represent the rotation quaternion. */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        out[3] = wasm.HEAPF32[ptr + 3];\n        return out;\n    }\n    /**\n     * Set local space rotation.\n     *\n     * @param v New world rotation array/vector, expected to have at least 4 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setRotationLocal(v) {\n        this._engine.wasm._wl_object_set_rotation_local(this._id, v[0], v[1], v[2], v[3]);\n        return this;\n    }\n    getRotationWorld(out = new Float32Array(4)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_world(this._id) / 4; /* Align F32 */\n        /* The first 4 floats represent the rotation quaternion. */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        out[3] = wasm.HEAPF32[ptr + 3];\n        return out;\n    }\n    /**\n     * Set local space rotation.\n     *\n     * @param v New world rotation array/vector, expected to have at least 4 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setRotationWorld(v) {\n        this._engine.wasm._wl_object_set_rotation_world(this._id, v[0], v[1], v[2], v[3]);\n        return this;\n    }\n    getTransformLocal(out = new Float32Array(8)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_local(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        out[3] = wasm.HEAPF32[ptr + 3];\n        out[4] = wasm.HEAPF32[ptr + 4];\n        out[5] = wasm.HEAPF32[ptr + 5];\n        out[6] = wasm.HEAPF32[ptr + 6];\n        out[7] = wasm.HEAPF32[ptr + 7];\n        return out;\n    }\n    /**\n     * Set local space rotation.\n     *\n     * @param v New local transform array, expected to have at least 8 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setTransformLocal(v) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_local(this._id) / 4; /* Align F32 */\n        wasm.HEAPF32[ptr] = v[0];\n        wasm.HEAPF32[ptr + 1] = v[1];\n        wasm.HEAPF32[ptr + 2] = v[2];\n        wasm.HEAPF32[ptr + 3] = v[3];\n        wasm.HEAPF32[ptr + 4] = v[4];\n        wasm.HEAPF32[ptr + 5] = v[5];\n        wasm.HEAPF32[ptr + 6] = v[6];\n        wasm.HEAPF32[ptr + 7] = v[7];\n        this.setDirty();\n        return this;\n    }\n    getTransformWorld(out = new Float32Array(8)) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_world(this._id) / 4; /* Align F32 */\n        out[0] = wasm.HEAPF32[ptr];\n        out[1] = wasm.HEAPF32[ptr + 1];\n        out[2] = wasm.HEAPF32[ptr + 2];\n        out[3] = wasm.HEAPF32[ptr + 3];\n        out[4] = wasm.HEAPF32[ptr + 4];\n        out[5] = wasm.HEAPF32[ptr + 5];\n        out[6] = wasm.HEAPF32[ptr + 6];\n        out[7] = wasm.HEAPF32[ptr + 7];\n        return out;\n    }\n    /**\n     * Set world space rotation.\n     *\n     * @param v New world transform array, expected to have at least 8 elements.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    setTransformWorld(v) {\n        const wasm = this._engine.wasm;\n        const ptr = wasm._wl_object_trans_world(this._id) / 4; /* Align F32 */\n        wasm.HEAPF32[ptr] = v[0];\n        wasm.HEAPF32[ptr + 1] = v[1];\n        wasm.HEAPF32[ptr + 2] = v[2];\n        wasm.HEAPF32[ptr + 3] = v[3];\n        wasm.HEAPF32[ptr + 4] = v[4];\n        wasm.HEAPF32[ptr + 5] = v[5];\n        wasm.HEAPF32[ptr + 6] = v[6];\n        wasm.HEAPF32[ptr + 7] = v[7];\n        this._engine.wasm._wl_object_trans_world_to_local(this._id);\n        return this;\n    }\n    /**\n     * Local space transformation.\n     *\n     * @deprecated Please use {@link Object3D.setTransformLocal} and\n     * {@link Object3D.getTransformLocal} instead.\n     */\n    get transformLocal() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_local(this._id), 8);\n    }\n    /**\n     * Set local transform.\n     *\n     * @param t Local space transformation.\n     *\n     * @since 0.8.5\n     *\n     * @deprecated Please use {@link Object3D.setTransformLocal} and\n     * {@link Object3D.getTransformLocal} instead.\n     */\n    set transformLocal(t) {\n        this.transformLocal.set(t);\n        this.setDirty();\n    }\n    /**\n     * Global / world space transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     *\n     * @deprecated Please use {@link Object3D.setTransformWorld} and\n     * {@link Object3D.getTransformWorld} instead.\n     */\n    get transformWorld() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_world(this._id), 8);\n    }\n    /**\n     * Set world transform.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.5\n     *\n     * @deprecated Please use {@link Object3D.setTransformWorld} and\n     * {@link Object3D.getTransformWorld} instead.\n     */\n    set transformWorld(t) {\n        this.transformWorld.set(t);\n        this._engine.wasm._wl_object_trans_world_to_local(this._id);\n    }\n    /**\n     * Local / object space scaling.\n     *\n     * @deprecated Please use {@link Object3D.setScalingLocal} and\n     * {@link Object3D.getScalingLocal} instead.\n     */\n    get scalingLocal() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_local(this._id), 3);\n    }\n    /**\n     * Set local space scaling.\n     *\n     * @param s Local space scaling.\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.setScalingLocal} and\n     * {@link Object3D.getScalingLocal} instead.\n     */\n    set scalingLocal(s) {\n        this.scalingLocal.set(s);\n        this.setDirty();\n    }\n    /**\n     * Global / world space scaling.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     *\n     * @deprecated Please use {@link Object3D.setScalingWorld} and\n     * {@link Object3D.getScalingWorld} instead.\n     */\n    get scalingWorld() {\n        const wasm = this._engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_world(this._id), 3);\n    }\n    /**\n     * Set world space scaling.\n     *\n     * @param t World space scaling.\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.setScalingWorld} and\n     * {@link Object3D.getScalingWorld} instead.\n     */\n    set scalingWorld(s) {\n        this.scalingWorld.set(s);\n        this._engine.wasm._wl_object_scaling_world_to_local(this._id);\n    }\n    /**\n     * Local space rotation.\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.getRotationLocal} and\n     * {@link Object3D.setRotationLocal} instead.\n     */\n    get rotationLocal() {\n        return this.transformLocal.subarray(0, 4);\n    }\n    /**\n     * Global / world space rotation\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.getRotationWorld} and\n     * {@link Object3D.setRotationWorld} instead.\n     */\n    get rotationWorld() {\n        return this.transformWorld.subarray(0, 4);\n    }\n    /**\n     * Set local space rotation.\n     *\n     * @param r Local space rotation\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.getRotationLocal} and\n     * {@link Object3D.setRotationLocal} instead.\n     */\n    set rotationLocal(r) {\n        this._engine.wasm._wl_object_set_rotation_local(this._id, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Set world space rotation.\n     *\n     * @param r Global / world space rotation.\n     *\n     * @since 0.8.7\n     *\n     * @deprecated Please use {@link Object3D.getRotationWorld} and\n     * {@link Object3D.setRotationWorld} instead.\n     */\n    set rotationWorld(r) {\n        this._engine.wasm._wl_object_set_rotation_world(this._id, r[0], r[1], r[2], r[3]);\n    }\n    /** @deprecated Please use {@link Object3D.getForwardWorld} instead. */\n    getForward(out) {\n        return this.getForwardWorld(out);\n    }\n    /**\n     * Compute the object's forward facing world space vector.\n     *\n     * The forward vector in object space is along the negative z-axis, i.e.,\n     * `[0, 0, -1]`.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getForwardWorld(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = -1;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /** @deprecated Please use {@link Object3D.getUpWorld} instead. */\n    getUp(out) {\n        return this.getUpWorld(out);\n    }\n    /**\n     * Compute the object's up facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getUpWorld(out) {\n        out[0] = 0;\n        out[1] = 1;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /** @deprecated Please use {@link Object3D.getRightWorld} instead. */\n    getRight(out) {\n        return this.getRightWorld(out);\n    }\n    /**\n     * Compute the object's right facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getRightWorld(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Transform a vector by this object's world transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorWorld(out, v = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorWorld(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's local transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorLocal(out, v = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorLocal(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointWorld(out, p = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointWorld(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointLocal(out, p = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointLocal(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse world transform.\n     *\n     * @param out Out vector.\n     * @param v Vector to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseWorld(out, v = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorInverseWorld(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse local transform.\n     *\n     * @param out Out vector\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseLocal(out, v = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = v[0];\n        wasm._tempMemFloat[1] = v[1];\n        wasm._tempMemFloat[2] = v[2];\n        wasm._wl_object_transformVectorInverseLocal(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseWorld(out, p = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat[0] = p[0];\n        wasm._tempMemFloat[1] = p[1];\n        wasm._tempMemFloat[2] = p[2];\n        wasm._wl_object_transformPointInverseWorld(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseLocal(out, p = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(p);\n        wasm._wl_object_transformPointInverseLocal(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform an object space dual quaternion into world space.\n     *\n     * @param out Out transformation.\n     * @param q Local space transformation, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toWorldSpaceTransform(out, q = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(q);\n        wasm._wl_object_toWorldSpaceTransform(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        out[4] = wasm._tempMemFloat[4];\n        out[5] = wasm._tempMemFloat[5];\n        out[6] = wasm._tempMemFloat[6];\n        out[7] = wasm._tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into local space.\n     *\n     * @param out Out transformation\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toLocalSpaceTransform(out, q = out) {\n        const p = this.parent;\n        if (p) {\n            p.toObjectSpaceTransform(out, q);\n            return out;\n        }\n        if (out !== q) {\n            out[0] = q[0];\n            out[1] = q[1];\n            out[2] = q[2];\n            out[3] = q[3];\n            out[4] = q[4];\n            out[5] = q[5];\n            out[6] = q[6];\n            out[7] = q[7];\n        }\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into object space.\n     *\n     * @param out Out transformation.\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toObjectSpaceTransform(out, q = out) {\n        const wasm = this._engine.wasm;\n        wasm._tempMemFloat.set(q);\n        wasm._wl_object_toObjectSpaceTransform(this._id, wasm._tempMem);\n        out[0] = wasm._tempMemFloat[0];\n        out[1] = wasm._tempMemFloat[1];\n        out[2] = wasm._tempMemFloat[2];\n        out[3] = wasm._tempMemFloat[3];\n        out[4] = wasm._tempMemFloat[4];\n        out[5] = wasm._tempMemFloat[5];\n        out[6] = wasm._tempMemFloat[6];\n        out[7] = wasm._tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Turn towards / look at target.\n     *\n     * Rotates the object so that its forward vector faces towards the target\n     * position. The `up` vector acts as a hint to uniquely orient the object's\n     * up direction. When orienting a view component, the projected `up` vector\n     * faces upwards on the viewing plane.\n     *\n     * @param p Target position to turn towards, in world space.\n     * @param up Up vector to align object with, in world space. Default is `[0, 1, 0]`.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    lookAt(p, up = UP_VECTOR) {\n        this._engine.wasm._wl_object_lookAt(this._id, p[0], p[1], p[2], up[0], up[1], up[2]);\n        return this;\n    }\n    /** Destroy the object with all of its components and remove it from the scene */\n    destroy() {\n        if (this._id < 0)\n            return;\n        /* This will automatically call `scene._destroyObject` */\n        this.engine.wasm._wl_object_remove(this._id);\n    }\n    /**\n     * Mark transformation dirty.\n     *\n     * Causes an eventual recalculation of {@link transformWorld}, either\n     * on next {@link getTranslationWorld}, {@link transformWorld} or\n     * {@link scalingWorld} or the beginning of next frame, whichever\n     * happens first.\n     */\n    setDirty() {\n        this._engine.wasm._wl_object_set_dirty(this._id);\n    }\n    /**\n     * Disable/enable all components of this object.\n     *\n     * @param b New state for the components.\n     *\n     * @since 0.8.5\n     */\n    set active(b) {\n        const comps = this.getComponents();\n        for (let c of comps) {\n            c.active = b;\n        }\n    }\n    getComponent(typeOrClass, index = 0) {\n        const wasm = this._engine.wasm;\n        const type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\n        const scene = this._scene;\n        const componentType = wasm._wl_scene_get_component_manager_index(scene._index, wasm.tempUTF8(type));\n        if (componentType < 0) {\n            /* Not a native component, try js: */\n            const typeIndex = wasm._componentTypeIndices[type];\n            if (typeIndex === undefined)\n                return null;\n            const jsIndex = wasm._wl_get_js_component_index(this._id, typeIndex, index);\n            if (jsIndex < 0)\n                return null;\n            const component = this._scene._jsComponents[jsIndex];\n            return component.constructor !== BrokenComponent ? component : null;\n        }\n        const componentId = wasm._wl_get_component_id(this._id, componentType, index);\n        return scene._components.wrapNative(componentType, componentId);\n    }\n    getComponents(typeOrClass) {\n        const wasm = this._engine.wasm;\n        const scene = this._scene;\n        let manager = null;\n        let type = null;\n        if (typeOrClass) {\n            type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\n            const nativeManager = scene._components.getNativeManager(type);\n            manager = nativeManager !== null ? nativeManager : scene._components.js;\n        }\n        const components = [];\n        const maxComps = Math.floor((wasm._tempMemSize / 3) * 2);\n        const componentsCount = wasm._wl_object_get_components(this._id, wasm._tempMem, maxComps);\n        const offset = 2 * componentsCount;\n        wasm._wl_object_get_component_types(this._id, wasm._tempMem + offset, maxComps);\n        for (let i = 0; i < componentsCount; ++i) {\n            const t = wasm._tempMemUint8[i + offset];\n            const componentId = wasm._tempMemUint16[i];\n            if (manager !== null && t !== manager)\n                continue;\n            const comp = this._scene._components.wrapAny(t, componentId);\n            if (!comp)\n                continue;\n            if (type && type !== comp.constructor.TypeName)\n                continue;\n            components.push(comp);\n        }\n        return components;\n    }\n    addComponent(typeOrClass, params) {\n        const wasm = this._engine.wasm;\n        const type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\n        const nativeManager = this._scene._components.getNativeManager(type);\n        const isNative = nativeManager !== null;\n        const manager = isNative ? nativeManager : this._scene._components.js;\n        let componentId = -1;\n        if (!isNative) {\n            /* JavaScript component */\n            if (!(type in wasm._componentTypeIndices)) {\n                throw new TypeError(\"Unknown component type '\" + type + \"'\");\n            }\n            componentId = wasm._wl_object_add_js_component(this._id, wasm._componentTypeIndices[type]);\n        }\n        else {\n            /* native component */\n            componentId = wasm._wl_object_add_component(this._id, manager);\n        }\n        const component = this._scene._components.wrapAny(manager, componentId);\n        if (params !== undefined)\n            component.copy(params);\n        /* Explicitly initialize js components */\n        if (!isNative) {\n            component._triggerInit();\n            /* start() is called through onActivate() */\n        }\n        /* If it was not explicitly requested by the user to leave the component inactive,\n         * we activate it as a final step. This invalidates componentIndex! */\n        if (!params || !('active' in params && !params.active)) {\n            component.active = true;\n        }\n        return component;\n    }\n    /**\n     * Search for descendants matching the name.\n     *\n     * This method is a wrapper around {@link Object3D.findByNameDirect} and\n     * {@link Object3D.findByNameRecursive}.\n     *\n     * @param name The name to search for.\n     * @param recursive If `true`, the method will look at all the descendants of this object.\n     *     If `false`, this method will only perform the search in direct children.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.1.0\n     */\n    findByName(name, recursive = false) {\n        return recursive ? this.findByNameRecursive(name) : this.findByNameDirect(name);\n    }\n    /**\n     * Search for all **direct** children matching the name.\n     *\n     * @note Even though this method is heavily optimized, it does perform\n     * a linear search to find the objects. Do not use in a hot path.\n     *\n     * @param name The name to search for.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.1.0\n     */\n    findByNameDirect(name) {\n        const wasm = this._engine.wasm;\n        const id = this._id;\n        /* Divide by 4 to get half as many ushort as possible */\n        const tempSizeU16 = wasm._tempMemSize >> 2;\n        const maxCount = tempSizeU16 - 2; /* Reserve two ushort */\n        const buffer = wasm._tempMemUint16;\n        buffer[maxCount] = 0; /* Index offset */\n        buffer[maxCount + 1] = 0; /* child count */\n        const bufferPtr = wasm._tempMem;\n        const indexPtr = bufferPtr + maxCount * 2;\n        const childCountPtr = bufferPtr + maxCount * 2 + 2;\n        const namePtr = wasm.tempUTF8(name, (maxCount + 2) * 2);\n        const result = [];\n        let read = 0;\n        while ((read = wasm._wl_object_findByName(id, namePtr, indexPtr, childCountPtr, bufferPtr, maxCount))) {\n            for (let i = 0; i < read; ++i) {\n                result.push(this._scene.wrap(buffer[i]));\n            }\n        }\n        return result;\n    }\n    /**\n     * Search for **all descendants** matching the name.\n     *\n     * @note Even though this method is heavily optimized, it does perform\n     * a linear search to find the objects. Do not use in a hot path.\n     *\n     * @param name The name to search for.\n     * @returns An array of {@link Object3D} matching the name.\n     *\n     * @since 1.1.0\n     */\n    findByNameRecursive(name) {\n        const wasm = this._engine.wasm;\n        const id = this._id;\n        /* Divide by 4 to get half as many ushort as possible */\n        const tempSizeU16 = wasm._tempMemSize >> 2;\n        const maxCount = tempSizeU16 - 1; /* Reserve one ushort */\n        const buffer = wasm._tempMemUint16;\n        buffer[maxCount] = 0; /* Index offset */\n        const bufferPtr = wasm._tempMem;\n        const indexPtr = bufferPtr + maxCount * 2;\n        const namePtr = wasm.tempUTF8(name, (maxCount + 1) * 2);\n        let read = 0;\n        const result = [];\n        while ((read = wasm._wl_object_findByNameRecursive(id, namePtr, indexPtr, bufferPtr, maxCount))) {\n            for (let i = 0; i < read; ++i) {\n                result.push(this._scene.wrap(buffer[i]));\n            }\n        }\n        return result;\n    }\n    /**\n     * Whether given object's transformation has changed.\n     */\n    get changed() {\n        return !!this._engine.wasm._wl_object_is_changed(this._id);\n    }\n    /**\n     * `true` if the object is destroyed, `false` otherwise.\n     *\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\n     * reading a custom property will not work:\n     *\n     * ```js\n     * engine.erasePrototypeOnDestroy = true;\n     *\n     * const obj = scene.addObject();\n     * obj.customParam = 'Hello World!';\n     *\n     * console.log(obj.isDestroyed); // Prints `false`\n     * obj.destroy();\n     * console.log(obj.isDestroyed); // Prints `true`\n     * console.log(obj.customParam); // Throws an error\n     * ```\n     *\n     * @since 1.1.1\n     */\n    get isDestroyed() {\n        return this._id < 0;\n    }\n    /**\n     * Checks equality by comparing ids and **not** the JavaScript reference.\n     *\n     * @deprecate Use JavaScript reference comparison instead:\n     *\n     * ```js\n     * const objectA = scene.addObject();\n     * const objectB = scene.addObject();\n     * const objectC = objectB;\n     * console.log(objectA === objectB); // false\n     * console.log(objectA === objectA); // true\n     * console.log(objectB === objectC); // true\n     * ```\n     */\n    equals(otherObject) {\n        /** @todo(2.0.0): Remove this method. */\n        if (!otherObject)\n            return false;\n        return this._id == otherObject._id;\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Object3D(destroyed)';\n        }\n        return `Object3D('${this.name}', ${this._localId})`;\n    }\n}\n/**\n * Wrapper around a native skin data.\n */\nexport class Skin extends SceneResource {\n    /** Amount of joints in this skin. */\n    get jointCount() {\n        return this.engine.wasm._wl_skin_get_joint_count(this._id);\n    }\n    /** Joints object ids for this skin */\n    get jointIds() {\n        const wasm = this.engine.wasm;\n        return new Uint16Array(wasm.HEAPU16.buffer, wasm._wl_skin_joint_ids(this._id), this.jointCount);\n    }\n    /**\n     * Dual quaternions in a flat array of size 8 times {@link jointCount}.\n     *\n     * Inverse bind transforms of the skin.\n     */\n    get inverseBindTransforms() {\n        const wasm = this.engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_transforms(this._id), 8 * this.jointCount);\n    }\n    /**\n     * Vectors in a flat array of size 3 times {@link jointCount}.\n     *\n     * Inverse bind scalings of the skin.\n     */\n    get inverseBindScalings() {\n        const wasm = this.engine.wasm;\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_scalings(this._id), 3 * this.jointCount);\n    }\n}\n/**\n * Wrapper around a native set of morph targets.\n *\n * ## Usage\n *\n * ```js\n * const mesh = object.getComponent('mesh');\n * const mouthTarget = mesh.morphTargets.getTargetIndex('mouth');\n * mesh.setMorphTargetWeight(mouthTarget, 0.5);\n * ```\n *\n * @since 1.2.0\n */\nexport class MorphTargets extends Resource {\n    /** Amount of targets in this morph target set. */\n    get count() {\n        return this.engine.wasm._wl_morph_targets_get_target_count(this._id);\n    }\n    /** Returns the name of a given target */\n    getTargetName(target) {\n        if (target >= this.count) {\n            throw new Error(`Index ${target} is out of bounds for ${this.count} targets`);\n        }\n        const wasm = this.engine.wasm;\n        return wasm.UTF8ToString(wasm._wl_morph_targets_get_target_name(this._id, target));\n    }\n    /**\n     * Get the index for a given target name.\n     *\n     * Throws if no target with that name exists.\n     *\n     * @param name Name of the target.\n     */\n    getTargetIndex(name) {\n        const wasm = this.engine.wasm;\n        const index = wasm._wl_morph_targets_get_target_index(this._id, wasm.tempUTF8(name));\n        if (index === -1) {\n            throw Error(`Missing target '${name}'`);\n        }\n        return index;\n    }\n}\n/* For backward compatibility with < 1.0.0. */\nexport { Object3D as Object };\n/**\n * Ray hit.\n *\n * Result of a {@link Scene.rayCast} or {@link Physics.rayCast}.\n *\n * @note this class wraps internal engine data and should only be created internally.\n */\nexport class RayHit {\n    /** Scene instance. @hidden */\n    _scene;\n    /** Pointer to the memory heap. */\n    _ptr;\n    /**\n     * @param ptr Pointer to the ray hits memory.\n     */\n    constructor(scene, ptr) {\n        if ((ptr & 3) !== 0) {\n            throw new Error('Misaligned pointer: please report a bug');\n        }\n        this._scene = scene;\n        this._ptr = ptr;\n    }\n    getLocations(out) {\n        out = out ?? Array.from({ length: this.hitCount }, () => new Float32Array(3));\n        const wasm = this.engine.wasm;\n        const alignedPtr = this._ptr / 4; /* Align F32 */\n        for (let i = 0; i < this.hitCount; ++i) {\n            const locationPtr = alignedPtr + 3 * i;\n            out[i][0] = wasm.HEAPF32[locationPtr];\n            out[i][1] = wasm.HEAPF32[locationPtr + 1];\n            out[i][2] = wasm.HEAPF32[locationPtr + 2];\n        }\n        return out;\n    }\n    getNormals(out) {\n        out = out ?? Array.from({ length: this.hitCount }, () => new Float32Array(3));\n        const wasm = this.engine.wasm;\n        const alignedPtr = (this._ptr + 48) / 4; /* Align F32 */\n        for (let i = 0; i < this.hitCount; ++i) {\n            const normalPtr = alignedPtr + 3 * i;\n            out[i][0] = wasm.HEAPF32[normalPtr];\n            out[i][1] = wasm.HEAPF32[normalPtr + 1];\n            out[i][2] = wasm.HEAPF32[normalPtr + 2];\n        }\n        return out;\n    }\n    getDistances(out = new Float32Array(this.hitCount)) {\n        const wasm = this.engine.wasm;\n        const alignedPtr = (this._ptr + 48 * 2) / 4; /* Align F32 */\n        for (let i = 0; i < this.hitCount; ++i) {\n            const distancePtr = alignedPtr + i;\n            out[i] = wasm.HEAPF32[distancePtr];\n        }\n        return out;\n    }\n    /**\n     * Array of hit objects.\n     *\n     * @param out Destination array/vector, expected to have at least `this.hitCount` elements.\n     * @returns The `out` parameter.\n     */\n    getObjects(out = new Array(this.hitCount)) {\n        const HEAPU16 = this.engine.wasm.HEAPU16;\n        const alignedPtr = (this._ptr + (48 * 2 + 16)) >> 1;\n        for (let i = 0; i < this.hitCount; ++i) {\n            out[i] = this._scene.wrap(HEAPU16[alignedPtr + i]);\n        }\n        return out;\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._scene.engine;\n    }\n    /**\n     * Equivalent to {@link RayHit.getLocations}.\n     *\n     * @note Prefer to use {@link RayHit.getLocations} for performance.\n     */\n    get locations() {\n        return this.getLocations();\n    }\n    /**\n     * Equivalent to {@link RayHit.getNormals}.\n     *\n     * @note Prefer to use {@link RayHit.getNormals} for performance.\n     */\n    get normals() {\n        return this.getNormals();\n    }\n    /**\n     * Equivalent to {@link RayHit.getDistances}.\n     *\n     * @note Prefer to use {@link RayHit.getDistances} for performance.\n     */\n    get distances() {\n        return this.getDistances();\n    }\n    /**\n     * Equivalent to {@link RayHit.getObjects}.\n     *\n     * @note Prefer to use {@link RayHit.getObjects} for performance.\n     */\n    get objects() {\n        /** @todo: Remove at 2.0.0, this is kept for backward compatibility. */\n        const objects = [null, null, null, null];\n        return this.getObjects(objects);\n    }\n    /** Number of hits (max 4) */\n    get hitCount() {\n        return Math.min(this.engine.wasm.HEAPU32[this._ptr / 4 + 30], 4);\n    }\n}\nclass math {\n    /** (Experimental!) Cubic Hermite spline interpolation for vector3 and quaternions.\n     *\n     * With `f == 0`, `out` will be `b`, if `f == 1`, `out` will be c.\n     *\n     * Whether a quaternion or vector3 interpolation is intended is determined by\n     * length of `a`.\n     *\n     * @param out Array to write result to.\n     * @param a First tangent/handle.\n     * @param b First point or quaternion.\n     * @param c Second point or quaternion.\n     * @param d Second handle.\n     * @param f Interpolation factor in [0; 1].\n     * @returns The `out` parameter.\n     *\n     * @since 0.8.6\n     */\n    static cubicHermite(out, a, b, c, d, f, engine = WL) {\n        const wasm = engine.wasm;\n        wasm._tempMemFloat.subarray(0).set(a);\n        wasm._tempMemFloat.subarray(4).set(b);\n        wasm._tempMemFloat.subarray(8).set(c);\n        wasm._tempMemFloat.subarray(12).set(d);\n        const isQuat = a.length == 4;\n        wasm._wl_math_cubicHermite(wasm._tempMem + 4 * 16, wasm._tempMem + 4 * 0, wasm._tempMem + 4 * 4, wasm._tempMem + 4 * 8, wasm._tempMem + 4 * 12, f, isQuat);\n        out[0] = wasm._tempMemFloat[16];\n        out[1] = wasm._tempMemFloat[17];\n        out[2] = wasm._tempMemFloat[18];\n        if (isQuat)\n            out[3] = wasm._tempMemFloat[19];\n        return out;\n    }\n}\nexport { math };\n/**\n * Class for accessing internationalization (i18n) features.\n *\n * Allows {@link I18N.onLanguageChanged \"detecting language change\"},\n * {@link I18N.language \"setting the current language\"} or translating\n * {@link I18N.translate \"individual terms\"}.\n *\n * Internationalization works with terms,\n * a string type keyword that is linked to a different text for each language.\n *\n * Internally, string parameters for text and js components are\n * automatically swapped during language change, given they are linked to a term.\n * If manual text swapping is desired, {@link I18N.translate}\n * can be used to retrieve the current translation for any term.\n *\n * You can also use the {@link I18N.onLanguageChanged} to manually update text\n * when a language is changed to for example update a number in a string.\n *\n * @since 1.0.0\n */\nexport class I18N {\n    /**\n     * {@link Emitter} for language change events.\n     *\n     * First parameter to a listener is the old language index,\n     * second parameter is the new language index.\n     *\n     * Usage from a within a component:\n     *\n     * ```js\n     * this.engine.i18n.onLanguageChanged.add((oldLanguageIndex, newLanguageIndex) => {\n     *     const oldLanguage = this.engine.i18n.languageName(oldLanguageIndex);\n     *     const newLanguage = this.engine.i18n.languageName(newLanguageIndex);\n     *     console.log(\"Switched from\", oldLanguage, \"to\", newLanguage);\n     * });\n     * ```\n     */\n    onLanguageChanged = new Emitter();\n    /** Wonderland Engine instance. @hidden */\n    _engine;\n    /** Previously set language index. @hidden */\n    _prevLanguageIndex = -1;\n    /**\n     * Constructor\n     */\n    constructor(engine) {\n        this._engine = engine;\n    }\n    /**\n     * Set current language and apply translations to linked text parameters.\n     *\n     * @note This is equivalent to {@link I18N.setLanguage}.\n     *\n     * @param code Language code to switch to\n     */\n    set language(code) {\n        this.setLanguage(code);\n    }\n    /** Get current language code. */\n    get language() {\n        const wasm = this._engine.wasm;\n        const code = wasm._wl_i18n_currentLanguage();\n        if (code === 0)\n            return null;\n        return wasm.UTF8ToString(code);\n    }\n    /**\n     * Get the current language index.\n     *\n     * This method is more efficient than its equivalent:\n     *\n     * ```js\n     * const index = i18n.languageIndex(i18n.language);\n     * ```\n     */\n    get currentIndex() {\n        return this._engine.wasm._wl_i18n_currentLanguageIndex();\n    }\n    /** Previous language index. */\n    get previousIndex() {\n        return this._prevLanguageIndex;\n    }\n    /**\n     * Set current language and apply translations to linked text parameters.\n     *\n     * @param code The language code.\n     * @returns A promise that resolves with the current index code when the\n     *     language is loaded.\n     */\n    async setLanguage(code) {\n        if (code == null)\n            return Promise.resolve(this.currentIndex);\n        const wasm = this._engine.wasm;\n        this._prevLanguageIndex = this.currentIndex;\n        wasm._wl_i18n_setLanguage(wasm.tempUTF8(code));\n        const scene = this.engine.scene;\n        const filename = wasm.UTF8ToString(wasm._wl_i18n_languageFile(this.currentIndex));\n        const url = `${scene.baseURL}/locale/${filename}`;\n        await scene._downloadDependency(url);\n        this.onLanguageChanged.notify(this._prevLanguageIndex, this.currentIndex);\n        return this.currentIndex;\n    }\n    /**\n     * Get translated string for a term for the currently loaded language.\n     *\n     * @param term Term to translate\n     */\n    translate(term) {\n        const wasm = this._engine.wasm;\n        const translation = wasm._wl_i18n_translate(wasm.tempUTF8(term));\n        if (translation === 0)\n            return null;\n        return wasm.UTF8ToString(translation);\n    }\n    /**\n     * Get the number of languages in the project.\n     *\n     */\n    languageCount() {\n        const wasm = this._engine.wasm;\n        return wasm._wl_i18n_languageCount();\n    }\n    /**\n     * Get a language code.\n     *\n     * @param index Index of the language to get the code from\n     */\n    languageIndex(code) {\n        const wasm = this._engine.wasm;\n        return wasm._wl_i18n_languageIndex(wasm.tempUTF8(code));\n    }\n    /**\n     * Get a language code.\n     *\n     * @param index Index of the language to get the code from\n     */\n    languageCode(index) {\n        const wasm = this._engine.wasm;\n        const code = wasm._wl_i18n_languageCode(index);\n        if (code === 0)\n            return null;\n        return wasm.UTF8ToString(code);\n    }\n    /**\n     * Get a language name.\n     *\n     * @param index Index of the language to get the name from\n     */\n    languageName(index) {\n        const wasm = this._engine.wasm;\n        const name = wasm._wl_i18n_languageName(index);\n        if (name === 0)\n            return null;\n        return wasm.UTF8ToString(name);\n    }\n    /** Hosting engine instance. */\n    get engine() {\n        return this._engine;\n    }\n}\n/** Properties of a WebXR session */\nexport class XR {\n    /** Wonderland WASM bridge. @hidden */\n    #wasm;\n    #mode;\n    constructor(wasm, mode) {\n        this.#wasm = wasm;\n        this.#mode = mode;\n    }\n    /** Current WebXR session mode */\n    get sessionMode() {\n        return this.#mode;\n    }\n    /** Current WebXR session */\n    get session() {\n        return this.#wasm.webxr_session;\n    }\n    /** Current WebXR frame */\n    get frame() {\n        return this.#wasm.webxr_frame;\n    }\n    referenceSpaceForType(type) {\n        return this.#wasm.webxr_refSpaces[type] ?? null;\n    }\n    /** Set current reference space type used for retrieving eye, head, hand and joint poses */\n    set currentReferenceSpace(refSpace) {\n        this.#wasm.webxr_refSpace = refSpace;\n        this.#wasm.webxr_refSpaceType = null;\n        for (const type of Object.keys(this.#wasm.webxr_refSpaces)) {\n            if (this.#wasm.webxr_refSpaces[type] === refSpace) {\n                /* Keep track of reference space type */\n                this.#wasm.webxr_refSpaceType = type;\n            }\n        }\n    }\n    /** Current reference space type used for retrieving eye, head, hand and joint poses */\n    get currentReferenceSpace() {\n        return this.#wasm.webxr_refSpace;\n    }\n    /** Current WebXR reference space type or `null` if not a default reference space */\n    get currentReferenceSpaceType() {\n        return this.#wasm.webxr_refSpaceType;\n    }\n    /** Current WebXR base layer  */\n    get baseLayer() {\n        return this.#wasm.webxr_baseLayer;\n    }\n    /** Current WebXR framebuffer */\n    get framebuffers() {\n        if (!Array.isArray(this.#wasm.webxr_fbo)) {\n            return [this.#wasm.GL.framebuffers[this.#wasm.webxr_fbo]];\n        }\n        return this.#wasm.webxr_fbo.map((id) => this.#wasm.GL.framebuffers[id]);\n    }\n}\n", "import { capitalizeFirstUTF8, createDestroyedProxy } from '../utils/misc.js';\nimport { Resource, ResourceManager } from './resource.js';\n/**\n * Material parameter type.\n */\nexport var MaterialParamType;\n(function (MaterialParamType) {\n    /** Unsigned integer parameter type. */\n    MaterialParamType[MaterialParamType[\"UnsignedInt\"] = 0] = \"UnsignedInt\";\n    /** Integer parameter type. */\n    MaterialParamType[MaterialParamType[\"Int\"] = 1] = \"Int\";\n    /** 16-bit float parameter type. */\n    MaterialParamType[MaterialParamType[\"HalfFloat\"] = 2] = \"HalfFloat\";\n    /** Float parameter type. */\n    MaterialParamType[MaterialParamType[\"Float\"] = 3] = \"Float\";\n    /** Sampler resource parameter type, i.e., a {@link Texture}. */\n    MaterialParamType[MaterialParamType[\"Sampler\"] = 4] = \"Sampler\";\n    /**\n     * Font resource parameter type.\n     *\n     * **Note**: Changing font isn't exposed yet and will raise an error.\n     */\n    MaterialParamType[MaterialParamType[\"Font\"] = 5] = \"Font\";\n})(MaterialParamType || (MaterialParamType = {}));\n/**\n * Wrapper around a native material.\n *\n * For more information about how to create materials, have a look at the\n * {@link MaterialManager} class.\n *\n * #### Properties\n *\n * The material properties are automatically converted into getters/setters:\n *\n * ```js\n * const material = new PhongMaterial();\n *\n * // Set the `diffuseColor` property\n * material.setDiffuseColor([1.0, 0.0, 0.0, 1.0]);\n * console.log(material.getDiffuseColor());\n * ```\n *\n * Getters for non-scalar types have an optional argument to skip an array\n * allocation:\n *\n * ```js\n * const material = new PhongMaterial();\n * const diffuse = [0, 0, 0, 0];\n * material.getDiffuseColor(diffuse);\n * console.log(diffuse) // Prints '[1.0, 1.0, 1.0, 1.0]'\n * ```\n *\n * @note Materials are **per-engine**, they can thus be shared by multiple scenes.\n *\n * @since 1.2.0\n */\nexport class Material extends Resource {\n    /** Proxy used to override prototypes of destroyed materials. */\n    static _destroyedPrototype = createDestroyedProxy('material');\n    /**\n     * @deprecated Use {@link MaterialManager#getTemplate} via {@link WonderlandEngine.materials}\n     * to create a new material with a given pipeline:\n     *\n     * ```js\n     * const PhongMaterial = engine.materials.getTemplate('Phong Opaque');\n     * const material = new PhongMaterial();\n     * material.setDiffuseColor([1, 0, 0]);\n     * ```\n     */\n    constructor(engine, params) {\n        if (typeof params !== 'number') {\n            if (!params?.pipeline)\n                throw new Error(\"Missing parameter 'pipeline'\");\n            const template = engine.materials.getTemplate(params.pipeline);\n            const material = new template();\n            super(engine, material._index);\n            return material;\n        }\n        super(engine, params);\n    }\n    /**\n     * Check whether a parameter exists on this material.\n     *\n     * @param name The name to check.\n     * @returns `true` if the parameter with name `name` exists on this material,\n     *     `false` otherwise.\n     */\n    hasParameter(name) {\n        const parameters = this.constructor.Parameters;\n        return parameters && parameters.has(name);\n    }\n    /** @deprecated Use {@link #pipeline} instead. */\n    get shader() {\n        return this.pipeline;\n    }\n    /** Name of the pipeline used by this material. */\n    get pipeline() {\n        const wasm = this.engine.wasm;\n        return wasm.UTF8ToString(wasm._wl_material_get_pipeline(this._id));\n    }\n    /**\n     * Create a copy of the underlying native material.\n     *\n     * @returns Material clone.\n     */\n    clone() {\n        const index = this.engine.wasm._wl_material_clone(this._id);\n        return this.engine.materials.wrap(index);\n    }\n    /** @overload */\n    toString() {\n        if (this.isDestroyed) {\n            return 'Material(destroyed)';\n        }\n        return `Material('${this.pipeline}', ${this._index})`;\n    }\n    /**\n     * Wrap a native material index.\n     *\n     * @param engine Engine instance.\n     * @param index The index.\n     * @returns Material instance or `null` if index <= 0.\n     *\n     * @deprecated Use the {@link WonderlandEngine.materials} instead.\n     */\n    static wrap(engine, index) {\n        return engine.materials.wrap(index);\n    }\n}\n/**\n * Manage materials.\n *\n * #### Creation\n *\n * To create a material, first retrieve the class associated to\n * the pipeline using {@link MaterialManager.getTemplate}:\n *\n * ```js\n * const PhongMaterial = engine.materials.getTemplate('Phong Opaque');\n * ```\n *\n * Creating a material is then done using the constructor:\n *\n * ```js\n * const material = new PhongMaterial();\n * material.setDiffuseColor([1.0, 0.0, 0.0, 1.0]);\n * ```\n */\nexport class MaterialManager extends ResourceManager {\n    /** Material classes. @hidden. */\n    _materialTemplates = [];\n    /** @hidden */\n    constructor(engine) {\n        super(engine, Material);\n        this._cacheDefinitions();\n    }\n    /** @override */\n    wrap(index) {\n        if (index <= 0)\n            return null;\n        const cached = this._cache[index];\n        if (cached)\n            return cached;\n        const wasm = this.engine.wasm;\n        const definition = wasm._wl_material_get_definition(index);\n        const Template = this._materialTemplates[definition];\n        const material = new Template(index);\n        return this._wrapInstance(material);\n    }\n    /**\n     * Get the material class with the given pipeline name.\n     *\n     * #### Usage\n     *\n     * ```js\n     * const PhongMaterial = engine.materials.getTemplate('Phong Opaque');\n     * const material = new PhongMaterial();\n     * material.setDiffuseColor([1.0, 0.0, 0.0, 1.0]);\n     * ```\n     *\n     * @param pipeline The pipeline name to search for.\n     * @returns The material class.\n     *\n     * @throws `Error` if the material class doesn't exist.\n     */\n    getTemplate(pipeline) {\n        const wasm = this.engine.wasm;\n        const index = wasm._wl_get_material_definition_index(wasm.tempUTF8(pipeline));\n        if (!index) {\n            throw new Error(`Pipeline '${pipeline}' doesn't exist in the scene`);\n        }\n        return this._materialTemplates[index];\n    }\n    /**\n     * Wrap a material instance.\n     *\n     * @todo: Remove at 2.0.0.\n     *\n     * @note Wrapping should only be called once per instance.\n     *\n     * @param instance The material instance.\n     * @returns The new material, wrapped in a proxy.\n     */\n    _wrapInstance(instance) {\n        this._cache[instance.index] = instance;\n        if (!this.engine.legacyMaterialSupport)\n            return instance;\n        /** @todo: Remove at 2.0.0. This is kept for backward compatibility. */\n        const proxy = new Proxy(instance, {\n            get(target, prop) {\n                if (!target.hasParameter(prop)) {\n                    return target[prop];\n                }\n                /** This is slow, but users should migrate to `getParam` */\n                const name = `get${capitalizeFirstUTF8(prop)}`;\n                return target[name]();\n            },\n            set(target, prop, value) {\n                if (!target.hasParameter(prop)) {\n                    target[prop] = value;\n                    return true;\n                }\n                /** This is slow, but users should migrate to `getParam` */\n                const name = `set${capitalizeFirstUTF8(prop)}`;\n                target[name](value);\n                return true;\n            },\n        });\n        this._cache[instance.index] = proxy;\n        return proxy;\n    }\n    /**\n     * Cache all pipeline definitions.\n     *\n     * @hidden\n     */\n    _cacheDefinitions() {\n        const wasm = this.engine.wasm;\n        const count = wasm._wl_get_material_definition_count();\n        for (let i = 0; i < count; ++i) {\n            this._materialTemplates[i] = this._createMaterialTemplate(i);\n        }\n    }\n    /**\n     * Create a material class from a definition index.\n     *\n     * @param wasm The WASM instance.\n     * @param definitionIndex The definition index to wrap.\n     * @returns The material class.\n     */\n    _createMaterialTemplate(definitionIndex) {\n        const engine = this.engine;\n        const template = class CustomMaterial extends Material {\n            static Parameters = new Set();\n            constructor(index) {\n                index = index ?? engine.wasm._wl_material_create(definitionIndex);\n                super(engine, index);\n                /** @todo(2.0.0): Unify with Material. We need to wrap in both since materials\n                 * can be created via the parent class, or via child classes.\n                 * In addition, wrapping returns a proxy, we want to support Proxy<Material>\n                 * as well as Proxy<CustomMaterial>. */\n                return engine.materials._wrapInstance(this);\n            }\n        };\n        const wasm = this.engine.wasm;\n        const nbParams = wasm._wl_material_definition_get_param_count(definitionIndex);\n        for (let index = 0; index < nbParams; ++index) {\n            const name = wasm.UTF8ToString(wasm._wl_material_definition_get_param_name(definitionIndex, index));\n            template.Parameters.add(name);\n            const t = wasm._wl_material_definition_get_param_type(definitionIndex, index);\n            const type = t & 0xff;\n            const componentCount = (t >> 8) & 0xff;\n            /* metaType could also be extracted using: (t >> 16) & 0xff */\n            const capitalized = capitalizeFirstUTF8(name);\n            const getterId = `get${capitalized}`;\n            const setterId = `set${capitalized}`;\n            const templateProto = template.prototype;\n            switch (type) {\n                case MaterialParamType.UnsignedInt:\n                    templateProto[getterId] = uint32Getter(index, componentCount);\n                    /* For now, it's only possible to set scalar uint values */\n                    templateProto[setterId] = uint32Setter(index);\n                    break;\n                case MaterialParamType.Int:\n                    templateProto[getterId] = int32Getter(index, componentCount);\n                    /* For now, it's only possible to set scalar int values. Integer values setter\n                     * is purposely shared with uint. */\n                    templateProto[setterId] = uint32Setter(index);\n                    break;\n                case MaterialParamType.HalfFloat:\n                case MaterialParamType.Float:\n                    templateProto[getterId] = float32Getter(index, componentCount);\n                    templateProto[setterId] = float32Setter(index);\n                    break;\n                case MaterialParamType.Sampler:\n                    templateProto[getterId] = samplerGetter(index);\n                    templateProto[setterId] = samplerSetter(index);\n                    break;\n                case MaterialParamType.Font:\n                    templateProto[getterId] = fontGetter(index);\n                    /* For now, setting fonts is not supported */\n                    break;\n            }\n        }\n        return template;\n    }\n}\n/** @todo: With this implementation, `_wl_material_get_param_value`\n * do not need to check for the parameter type anymore, we could use\n * explicit calls. */\nfunction uint32Getter(index, count) {\n    if (count === 1) {\n        return function () {\n            const wasm = this.engine.wasm;\n            wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n            return wasm._tempMemUint32[0];\n        };\n    }\n    return function (out = new Uint32Array(count)) {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n        for (let i = 0; i < out.length; ++i) {\n            out[i] = wasm._tempMemUint32[i];\n        }\n        return out;\n    };\n}\nfunction uint32Setter(index) {\n    return function (value) {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_set_param_value_uint(this._id, index, value);\n    };\n}\nfunction int32Getter(index, count) {\n    if (count === 1) {\n        return function () {\n            const wasm = this.engine.wasm;\n            wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n            return wasm._tempMemInt[0];\n        };\n    }\n    return function (out = new Int32Array(count)) {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n        for (let i = 0; i < out.length; ++i) {\n            out[i] = wasm._tempMemInt[i];\n        }\n        return out;\n    };\n}\nfunction float32Getter(index, count) {\n    if (count === 1) {\n        return function () {\n            const wasm = this.engine.wasm;\n            wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n            return wasm._tempMemFloat[0];\n        };\n    }\n    return function (out = new Float32Array(count)) {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n        for (let i = 0; i < out.length; ++i) {\n            out[i] = wasm._tempMemFloat[i];\n        }\n        return out;\n    };\n}\nfunction float32Setter(index) {\n    return function (value) {\n        const wasm = this.engine.wasm;\n        let count = 1;\n        if (typeof value === 'number') {\n            wasm._tempMemFloat[0] = value;\n        }\n        else {\n            count = value.length;\n            for (let i = 0; i < count; ++i)\n                wasm._tempMemFloat[i] = value[i];\n        }\n        wasm._wl_material_set_param_value_float(this._id, index, wasm._tempMem, count);\n    };\n}\nfunction samplerGetter(index) {\n    return function () {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n        return this.engine.textures.wrap(wasm._tempMemInt[0]);\n    };\n}\nfunction samplerSetter(index) {\n    return function (value) {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_set_param_value_uint(this._id, index, value._id);\n    };\n}\nfunction fontGetter(index) {\n    return function () {\n        const wasm = this.engine.wasm;\n        wasm._wl_material_get_param_value(this._id, index, wasm._tempMem);\n        return this.engine.fonts.wrap(wasm._tempMemInt[0]);\n    };\n}\n", "import { Mesh, MeshIndexType, MeshSkinningType } from '../wonderland.js';\nimport { ResourceManager } from './resource.js';\n/**\n * Manage meshes.\n *\n * #### Creation\n *\n * Creating a mesh is done using {@link MeshManager.create}:\n *\n * ```js\n * const mesh = engine.meshes.create({vertexCount: 3, indexData: [0, 1, 2]});\n * ```\n *\n * @since 1.2.0\n */\nexport class MeshManager extends ResourceManager {\n    constructor(engine) {\n        super(engine, Mesh);\n    }\n    /**\n     * Create a new mesh.\n     *\n     * @param params Vertex and index data. For more information, have a look\n     *     at the {@link MeshParameters} object.\n     */\n    create(params) {\n        if (!params.vertexCount)\n            throw new Error(\"Missing parameter 'vertexCount'\");\n        const wasm = this.engine.wasm;\n        let indexData = 0;\n        let indexType = 0;\n        let indexDataSize = 0;\n        if (params.indexData) {\n            indexType = params.indexType || MeshIndexType.UnsignedShort;\n            indexDataSize = params.indexData.length * indexType;\n            indexData = wasm._malloc(indexDataSize);\n            /* Copy the index data into wasm memory */\n            switch (indexType) {\n                case MeshIndexType.UnsignedByte:\n                    wasm.HEAPU8.set(params.indexData, indexData);\n                    break;\n                case MeshIndexType.UnsignedShort:\n                    wasm.HEAPU16.set(params.indexData, indexData >> 1);\n                    break;\n                case MeshIndexType.UnsignedInt:\n                    wasm.HEAPU32.set(params.indexData, indexData >> 2);\n                    break;\n            }\n        }\n        const { skinningType = MeshSkinningType.None } = params;\n        const index = wasm._wl_mesh_create(indexData, indexDataSize, indexType, params.vertexCount, skinningType);\n        const instance = new Mesh(this._host, index);\n        this._cache[instance.index] = instance;\n        return instance;\n    }\n}\n", "import { Texture } from '../wonderland.js';\nimport { ResourceManager } from './resource.js';\n/**\n * Manage textures.\n *\n * #### Creation\n *\n * Creating a texture is done using {@link TextureManager.load}:\n *\n * ```js\n * const texture = await engine.textures.load('my-image.png');\n * ```\n *\n * Alternatively, textures can be created directly via a loaded image using\n * {@link TextureManager.create}.\n *\n * @since 1.2.0\n */\nexport class TextureManager extends ResourceManager {\n    constructor(engine) {\n        super(engine, Texture);\n    }\n    /**\n     * Create a new texture from an image or video.\n     *\n     * #### Usage\n     *\n     * ```js\n     * const img = new Image();\n     * img.load = function(img) {\n     *     const texture = engine.textures.create(img);\n     * };\n     * img.src = 'my-image.png';\n     * ```\n     *\n     * @note The media must already be loaded. To automatically\n     * load the media and create a texture, use {@link TextureManager.load} instead.\n     *\n     * @param image Media element to create the texture from.\n     * @ret\\urns The new texture with the media content.\n     */\n    create(image) {\n        const wasm = this.engine.wasm;\n        const jsImageIndex = wasm._images.length;\n        wasm._images.push(image);\n        if (image instanceof HTMLImageElement && !image.complete) {\n            throw new Error('image must be ready to create a texture');\n        }\n        const width = image.videoWidth ?? image.width;\n        const height = image.videoHeight ?? image.height;\n        const imageIndex = wasm._wl_image_create(jsImageIndex, width, height);\n        /* Required because the image isn't a resource by itself, but will eventually be one. */\n        const index = wasm._wl_texture_create(imageIndex);\n        const instance = new Texture(this.engine, index);\n        this._cache[instance.index] = instance;\n        return instance;\n    }\n    /**\n     * Load an image from URL as {@link Texture}.\n     *\n     * #### Usage\n     *\n     * ```js\n     * const texture = await engine.textures.load('my-image.png');\n     * ```\n     *\n     * @param filename URL to load from.\n     * @param crossOrigin Cross origin flag for the image object.\n     * @returns Loaded texture.\n     */\n    load(filename, crossOrigin) {\n        let image = new Image();\n        image.crossOrigin = crossOrigin ?? image.crossOrigin;\n        image.src = filename;\n        return new Promise((resolve, reject) => {\n            image.onload = () => {\n                resolve(this.create(image));\n            };\n            image.onerror = function () {\n                reject('Failed to load image. Not found or no read access');\n            };\n        });\n    }\n}\n", "import { Prefab } from './prefab.js';\nexport class GLTFExtensions {\n    objectCount;\n    /** glTF root extensions object. JSON data indexed by extension name. */\n    root = {};\n    /**\n     * Mesh extension objects. Key is the gltf index, value is JSON\n     * data indexed by extension name.\n     */\n    mesh = {};\n    /**\n     * Node extension objects. Key is a glTF index, value is JSON\n     * data indexed by extension name.\n     */\n    node = {};\n    constructor(count) {\n        this.objectCount = count;\n    }\n}\n/**\n * glTF scene.\n *\n * At the opposite of {@link Scene}, glTF scenes can be instantiated\n * in other scenes but can't:\n * - Be activated\n * - Be the destination of an instantiation\n *\n * #### Usage\n *\n * ```js\n * const prefab = await engine.loadGLTF('Zombie.glb');\n *\n * const scene = engine.scene;\n * for (let i = 0; i < 100; ++i) {\n *     scene.instantiate(prefab);\n * }\n * ```\n *\n * Since this class inherits from {@link Prefab}, you can use the shared\n * API to modify the glTF before an instantiation:\n *\n * ```js\n * const prefab = await engine.loadGLTF('Zombie.glb');\n * const zombie = prefab.findByName('Zombie')[0];\n *\n * // The mesh is too small, we scale the root\n * zombie.setScalingWorld([2, 2, 2]);\n * // Add a custom js 'health' component to the root\n * zombie.addComponent('health', {value: 100});\n *\n * // 'Zombie' is wrapped in a new root added during instantiation\n * const {root} = engine.scene.instantiate(prefab);\n * const instanceZombie = root.children[0];\n * console.log(instanceZombie.getScalingWorld()); // Prints '[2, 2, 2]'\n * ```\n *\n * @category scene\n * @since 1.2.0\n */\nexport class PrefabGLTF extends Prefab {\n    /**\n     * Raw extensions read from the glTF file.\n     *\n     * The extensions will be mapped to the hierarchy upon instantiation.\n     * For more information, have a look at the {@link InstantiateGltfResult} type.\n     *\n     * @note The glTF must be loaded with `extensions` enabled. If not, this\n     * field will be set to `null`. For more information, have a look at the\n     * {@link GLTFOptions} type.\n     */\n    extensions = null;\n    /**\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    constructor(engine, index) {\n        super(engine, index);\n        this.extensions = this._readExtensions();\n    }\n    /**\n     * Instantiate the glTF extensions on an active sub scene graph.\n     *\n     * @param id The root object id.\n     * @param result The instantiation object result.\n     *\n     * @hidden\n     */\n    _processInstantiaton(dest, root, result) {\n        if (!this.extensions)\n            return null;\n        const wasm = this.engine.wasm;\n        const count = this.extensions.objectCount;\n        const idMapping = new Array(count);\n        /** @todo: We need some check to ensure that the gltf layout didn't change to retarget extensions.\n         * At least a simple scene graph size check should be required to avoid a segfault. */\n        const activeRootIndex = wasm._wl_object_index(root._id);\n        for (let i = 0; i < count; ++i) {\n            const mappedId = wasm._wl_glTF_scene_extensions_gltfIndex_to_id(this._index, dest._index, activeRootIndex, i);\n            idMapping[i] = mappedId;\n        }\n        const remapped = {\n            mesh: {},\n            node: {},\n            idMapping,\n        };\n        for (const gltfIndex in this.extensions.mesh) {\n            const id = idMapping[gltfIndex];\n            remapped.mesh[id] = this.extensions.mesh[gltfIndex];\n        }\n        for (const gltfIndex in this.extensions.node) {\n            const id = idMapping[gltfIndex];\n            remapped.node[id] = this.extensions.node[gltfIndex];\n        }\n        result.extensions = remapped;\n    }\n    /**\n     * Unmarshalls gltf extensions.\n     *\n     * @hidden\n     */\n    _readExtensions() {\n        const wasm = this.engine.wasm;\n        const ptr = wasm._wl_glTF_scene_get_extensions(this._index);\n        if (!ptr)\n            return null;\n        let index = ptr / 4;\n        const data = wasm.HEAPU32;\n        const readString = () => {\n            const strPtr = data[index++];\n            const strLen = data[index++];\n            return wasm.UTF8ViewToString(strPtr, strPtr + strLen);\n        };\n        const objectCount = data[index++];\n        const extensions = new GLTFExtensions(objectCount);\n        const meshExtensionsSize = data[index++];\n        for (let i = 0; i < meshExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.mesh[objectId] = JSON.parse(readString());\n        }\n        const nodeExtensionsSize = data[index++];\n        for (let i = 0; i < nodeExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.node[objectId] = JSON.parse(readString());\n        }\n        const rootExtensionsStr = readString();\n        if (rootExtensionsStr) {\n            extensions.root = JSON.parse(rootExtensionsStr);\n        }\n        return extensions;\n    }\n}\n", "import { LogTag } from './index.js';\nimport { Emitter } from './utils/event.js';\nimport { fetchWithProgress, getBaseUrl } from './utils/fetch.js';\nimport { clamp } from './utils/misc.js';\nimport { isString } from './utils/object.js';\nimport { RayHit } from './wonderland.js';\nimport { Prefab } from './prefab.js';\nimport { PrefabGLTF } from './scene-gltf.js';\n/**\n * Constants\n */\n/** Magic number for .bin */\nconst MAGIC_BIN = 'WLEV';\n/**\n * Wonderland Engine (.bin) scene.\n *\n * Wonderland Engine packages two types of scene:\n * - Activatable scene: Contains objects, components, views, resources, and rendering data\n * - Streamable scene: Contains objects, components, and resources\n *\n * #### Activation\n *\n * Some scenes are **activatable**, they can thus be attached to the renderer\n * to be updated and rendered on the canvas.\n *\n * For more information, have a look at the {@link WonderlandEngine.switchTo} method.\n *\n * #### Instantiation\n *\n * Besides activation, a scene can instantiate the content of another scene.\n *\n * For more information, have a look at the {@link Scene#instantiate} method.\n *\n * @category scene\n */\nexport class Scene extends Prefab {\n    /** Called before rendering the scene */\n    onPreRender = new Emitter();\n    /** Called after the scene has been rendered */\n    onPostRender = new Emitter();\n    /** Ray hit pointer in WASM heap. @hidden */\n    _rayHit;\n    /** Ray hit. @hidden */\n    _hit;\n    constructor(engine, index) {\n        super(engine, index);\n        /** `this.engine?` is used for testing. */\n        this._rayHit = this.engine?.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this, this._rayHit);\n    }\n    instantiate(prefab) {\n        const wasm = this.engine.wasm;\n        const id = wasm._wl_scene_instantiate(prefab._index, this._index);\n        const result = { root: this.wrap(id) };\n        if (prefab instanceof PrefabGLTF) {\n            const obj = this.wrap(id);\n            prefab._processInstantiaton(this, obj, result);\n        }\n        return result;\n    }\n    /** @todo: Add `instantiateBatch` to instantiate multiple chunks in a row. */\n    /**\n     * @todo Provide an API to delete all resources linked to a scene.\n     *\n     * Example:\n     *\n     * ```ts\n     * const scene = await engine.loadScene('Scene.bin');\n     * ...\n     * scene.destroy({removeResources: true});\n     * ```\n     */\n    /**\n     * Destroy this scene and remove it from the engine.\n     *\n     * @note Destroying a scene **doesn't** remove the materials, meshes,\n     * and textures it references in the engine. Those should be cleaned up either by loading\n     * another main scene via {@link WonderlandEngine.loadMainScene}, or manually using {@link Mesh.destroy}.\n     *\n     * @throws If the scene is currently active.\n     * */\n    destroy() {\n        if (this.isActive) {\n            throw new Error(`Attempt to destroy ${this}, but destroying the active scene is not supported`);\n        }\n        /* Store before calling `super.destroy()` since the call\n         * might destroy entirely the prototype. */\n        const wasm = this.engine.wasm;\n        const rayPtr = this._rayHit;\n        super.destroy();\n        wasm._free(rayPtr);\n    }\n    /**\n     * Currently active view components.\n     */\n    get activeViews() {\n        const wasm = this.engine.wasm;\n        const count = wasm._wl_scene_get_active_views(this._index, wasm._tempMem, 16);\n        const views = [];\n        for (let i = 0; i < count; ++i) {\n            const id = wasm._tempMemInt[i];\n            views.push(this._components.wrapView(id));\n        }\n        return views;\n    }\n    /**\n     * Cast a ray through the scene and find intersecting collision components.\n     *\n     * The resulting ray hit will contain **up to 4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * Example:\n     *\n     * ```js\n     * const hit = engine.scene.rayCast(\n     *     [0, 0, 0],\n     *     [0, 0, 1],\n     *     1 << 0 | 1 << 4, // Only check against components in groups 0 and 4\n     *     25\n     * );\n     * if (hit.hitCount > 0) {\n     *     const locations = hit.getLocations();\n     *     console.log(`Object hit at: ${locations[0][0]}, ${locations[0][1]}, ${locations[0][2]}`);\n     * }\n     * ```\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param groupMask Bitmask of collision groups to filter by: only objects\n     *        that are part of given groups are considered for the raycast.\n     * @param maxDistance Maximum **inclusive** hit distance. Defaults to `100`.\n     *\n     * @returns The {@link RayHit} instance, cached by this class.\n     *\n     * @note The returned {@link RayHit} object is owned by the {@link Scene}\n     *       instance and will be reused with the next {@link Scene#rayCast} call.\n     */\n    rayCast(o, d, groupMask, maxDistance = 100.0) {\n        this.engine.wasm._wl_scene_ray_cast(this._index, o[0], o[1], o[2], d[0], d[1], d[2], groupMask, this._rayHit, maxDistance);\n        return this._hit;\n    }\n    /**\n     * Set the background clear color.\n     *\n     * @param color new clear color (RGBA).\n     * @since 0.8.5\n     */\n    set clearColor(color) {\n        this.engine.wasm._wl_scene_set_clearColor(color[0], color[1], color[2], color[3]);\n    }\n    /**\n     * Set whether to clear the color framebuffer before drawing.\n     *\n     * This function is useful if an external framework (e.g. an AR tracking\n     * framework) is responsible for drawing a camera frame before Wonderland\n     * Engine draws the scene on top of it.\n     *\n     * @param b Whether to enable color clear.\n     * @since 0.9.4\n     */\n    set colorClearEnabled(b) {\n        this.engine.wasm._wl_scene_enableColorClear(b);\n    }\n    /**\n     * Load a scene file (.bin).\n     *\n     * Will replace the currently active scene with the one loaded\n     * from given file. It is assumed that JavaScript components required by\n     * the new scene were registered in advance.\n     *\n     * Once the scene is loaded successfully and initialized,\n     * {@link WonderlandEngine.onSceneLoaded} is notified.\n     *\n     * #### ArrayBuffer\n     *\n     * The `load()` method accepts an in-memory buffer:\n     *\n     * ```js\n     * scene.load({\n     *     buffer: new ArrayBuffer(...),\n     *     baseURL: 'https://my-website/assets'\n     * })\n     * ```\n     *\n     * @note The `baseURL` is mandatory. It's used to fetch images and languages.\n     *\n     * Use {@link Scene.setLoadingProgress} to update the loading progress bar\n     * when using an ArrayBuffer.\n     *\n     * @deprecated Use the new {@link Scene} and {@link Scene} API.\n     *\n     * @param options Path to the file to load, or an option object.\n     *     For more information about the options, see the {@link SceneLoadOptions} documentation.\n     * @returns Promise that resolves when the scene was loaded.\n     */\n    async load(options) {\n        /** @todo(2.0.0): Remove this method. */\n        let dispatchReadyEvent = false;\n        let opts;\n        if (isString(options)) {\n            opts = await Scene.loadBuffer(options, (bytes, size) => {\n                this.engine.log.info(LogTag.Scene, `Scene downloading: ${bytes} / ${size}`);\n                this.setLoadingProgress(bytes / size);\n            });\n        }\n        else {\n            opts = options;\n            dispatchReadyEvent = options.dispatchReadyEvent ?? false;\n        }\n        const scene = await this.engine.loadMainSceneFromBuffer({\n            ...opts,\n            dispatchReadyEvent,\n        });\n        this.engine.onSceneLoaded.notify();\n        return scene;\n    }\n    /**\n     * Append a scene file.\n     *\n     * Loads and parses the file and its images and appends the result\n     * to the currently active scene.\n     *\n     * Supported formats are streamable Wonderland scene files (.bin) and glTF\n     * 3D scenes (.gltf, .glb).\n     *\n     * ```js\n     * WL.scene.append(filename).then(root => {\n     *     // root contains the loaded scene\n     * });\n     * ```\n     *\n     * In case the `loadGltfExtensions` option is set to true, the response\n     * will be an object containing both the root of the loaded scene and\n     * any glTF extensions found on nodes, meshes and the root of the file.\n     *\n     * ```js\n     * WL.scene.append(filename, { loadGltfExtensions: true }).then(({root, extensions}) => {\n     *     // root contains the loaded scene\n     *     // extensions.root contains any extensions at the root of glTF document\n     *     const rootExtensions = extensions.root;\n     *     // extensions.mesh and extensions.node contain extensions indexed by Object id\n     *     const childObject = root.children[0];\n     *     const meshExtensions = root.meshExtensions[childObject.objectId];\n     *     const nodeExtensions = root.nodeExtensions[childObject.objectId];\n     *     // extensions.idMapping contains a mapping from glTF node index to Object id\n     * });\n     * ```\n     *\n     * If the file to be loaded is located in a subfolder, it might be useful\n     * to define the `baseURL` option. This will ensure any bin files\n     * referenced by the loaded bin file are loaded at the correct path.\n     *\n     * ```js\n     * WL.scene.append(filename, { baseURL: 'scenes' }).then(({root, extensions}) => {\n     *     // do stuff\n     * });\n     * ```\n     *\n     * @deprecated Use the new {@link Prefab} and {@link Scene} API.\n     *\n     * @param file The .bin, .gltf or .glb file to append. Should be a URL or\n     *   an `ArrayBuffer` with the file content.\n     * @param options Additional options for loading.\n     * @returns Promise that resolves when the scene was appended.\n     */\n    async append(file, options = {}) {\n        /** @todo(2.0.0): Remove this method. */\n        const { baseURL = isString(file) ? getBaseUrl(file) : this.baseURL } = options;\n        const buffer = isString(file) ? await fetchWithProgress(file) : file;\n        const data = new Uint8Array(buffer);\n        const isBinFile = data.byteLength > MAGIC_BIN.length &&\n            data\n                .subarray(0, MAGIC_BIN.length)\n                .every((value, i) => value === MAGIC_BIN.charCodeAt(i));\n        const scene = isBinFile\n            ? this.engine.loadPrefabFromBuffer({ buffer, baseURL })\n            : this.engine.loadGLTFFromBuffer({\n                buffer,\n                baseURL,\n                extensions: options.loadGltfExtensions,\n            });\n        const result = this.instantiate(scene);\n        if (scene instanceof PrefabGLTF) {\n            if (!scene.extensions)\n                return result.root;\n            return {\n                root: result.root,\n                extensions: {\n                    ...result.extensions,\n                    root: scene.extensions.root,\n                },\n            };\n        }\n        return result.root;\n    }\n    /**\n     * Update the loading screen progress bar.\n     *\n     * @param value Current loading percentage, in the range [0; 1].\n     */\n    setLoadingProgress(percentage) {\n        const wasm = this.engine.wasm;\n        wasm._wl_set_loading_screen_progress(clamp(percentage, 0, 1));\n    }\n    /**\n     * Dispatch an event 'wle-scene-ready' in the document.\n     *\n     * @note This is used for automatic testing.\n     */\n    dispatchReadyEvent() {\n        document.dispatchEvent(new CustomEvent('wle-scene-ready', {\n            detail: { filename: this.filename },\n        }));\n    }\n    /**\n     * Set the current material to render the sky.\n     *\n     * @note The sky needs to be enabled in the editor when creating the scene.\n     * For more information, please refer to the background [tutorial](https://wonderlandengine.com/tutorials/background-effect/).\n     */\n    set skyMaterial(material) {\n        this.engine.wasm._wl_scene_set_sky_material(this._index, material?._id ?? 0);\n    }\n    /** Current sky material, or `null` if no sky is set. */\n    get skyMaterial() {\n        const index = this.engine.wasm._wl_scene_get_sky_material(this._index);\n        return this.engine.materials.wrap(index);\n    }\n    /**\n     * Reset the scene.\n     *\n     * This method deletes all used and allocated objects, and components.\n     *\n     * @deprecated Load a new scene and activate it instead.\n     */\n    reset() {\n        /** @todo(2.0.0): Remove this method. */\n    }\n    /**\n     * Download and apply queued dependency files (.bin).\n     *\n     * @hidden\n     */\n    async _downloadDependency(url) {\n        const wasm = this.engine.wasm;\n        const buffer = await fetchWithProgress(url);\n        const ptr = wasm.copyBufferToHeap(buffer);\n        try {\n            wasm._wl_scene_load_queued_bin(this._index, ptr, buffer.byteLength);\n        }\n        finally {\n            /* Catch calls to abort(), e.g. via asserts */\n            wasm._free(ptr);\n        }\n    }\n    /**\n     * Download and apply queued dependency files (.bin).\n     *\n     * @hidden\n     */\n    async _downloadDependencies() {\n        const wasm = this.engine.wasm;\n        const count = wasm._wl_scene_queued_bin_count(this._index);\n        if (!count)\n            return Promise.resolve();\n        const urls = new Array(count).fill(0).map((_, i) => {\n            const ptr = wasm._wl_scene_queued_bin_path(this._index, i);\n            const url = wasm.UTF8ToString(ptr);\n            return url;\n        });\n        wasm._wl_scene_clear_queued_bin_list(this._index);\n        return Promise.all(urls.map((url) => this._downloadDependency(url)));\n    }\n}\n", "import { Physics, I18N, MorphTargets, Font, DestroyedPrefabInstance, } from './wonderland.js';\nimport { Emitter, RetainEmitter } from './utils/event.js';\nimport { isString } from './utils/object.js';\nimport { MaterialManager } from './resources/material-manager.js';\nimport { MeshManager } from './resources/mesh-manager.js';\nimport { ResourceManager } from './resources/resource.js';\nimport { TextureManager } from './resources/texture-manager.js';\nimport { LogTag } from './index.js';\nimport { Prefab } from './prefab.js';\nimport { Scene } from './scene.js';\nimport { PrefabGLTF } from './scene-gltf.js';\nimport { onImageReady } from './utils/fetch.js';\nfunction checkXRSupport() {\n    if (!navigator.xr) {\n        const isLocalhost = location.hostname === 'localhost' || location.hostname === '127.0.0.1';\n        const missingHTTPS = location.protocol !== 'https:' && !isLocalhost;\n        return Promise.reject(missingHTTPS\n            ? 'WebXR is only supported with HTTPS or on localhost!'\n            : 'WebXR unsupported in this browser.');\n    }\n    return Promise.resolve();\n}\n/**\n * Main Wonderland Engine instance.\n *\n * Controls the canvas, rendering, and JS <-> WASM communication.\n */\nexport class WonderlandEngine {\n    /**\n     * {@link Emitter} for WebXR session end events.\n     *\n     * Usage from within a component:\n     *\n     * ```js\n     * this.engine.onXRSessionEnd.add(() => console.log(\"XR session ended.\"));\n     * ```\n     */\n    onXRSessionEnd = new Emitter();\n    /**\n     * {@link RetainEmitter} for WebXR session start events.\n     *\n     * Usage from within a component:\n     *\n     * ```js\n     * this.engine.onXRSessionStart.add((session, mode) => console.log(session, mode));\n     * ```\n     *\n     * By default, this emitter is retained and will automatically call any callback added\n     * while a session is already started:\n     *\n     * ```js\n     * // XR session is already active.\n     * this.engine.onXRSessionStart.add((session, mode) => {\n     *     console.log(session, mode); // Triggered immediately.\n     * });\n     * ```\n     */\n    onXRSessionStart = new RetainEmitter();\n    /**\n     * {@link Emitter} for canvas / main framebuffer resize events.\n     *\n     * Usage from within a component:\n     *\n     * ```js\n     * this.engine.onResize.add(() => {\n     *     const canvas = this.engine.canvas;\n     *     console.log(`New Size: ${canvas.width}, ${canvas.height}`);\n     * });\n     * ```\n     *\n     * @note The size of the canvas is in physical pixels, and is set via {@link WonderlandEngine.resize}.\n     */\n    onResize = new Emitter();\n    /** Whether AR is supported by the browser. */\n    arSupported = false;\n    /** Whether VR is supported by the browser. */\n    vrSupported = false;\n    /**\n     * {@link RetainEmitter} signalling the end of the loading screen.\n     *\n     * Listeners get notified when the first call to {@link Scene#load()} is\n     * invoked. At this point the new scene has not become active, and none of\n     * its resources or components are initialized.\n     *\n     * Compared to {@link onSceneLoaded}, this does not wait for all components\n     * to be fully initialized and activated. Any handler added inside\n     * {@link Component#init()}, {@link Component#start()} or\n     * {@link Component#onActivate()} will be called immediately.\n     *\n     * Usage:\n     *\n     * ```js\n     * this.engine.onLoadingScreenEnd.add(() => console.log(\"Wait is over!\"));\n     * ```\n     */\n    onLoadingScreenEnd = new RetainEmitter();\n    /**\n     * {@link Emitter} for scene loaded events.\n     *\n     * Listeners get notified when a call to {@link Scene#load()} finishes. At\n     * this point all resources are loaded and all components had their\n     * {@link Component#init()} as well as (if active)\n     * {@link Component#start()} and {@link Component#onActivate()} methods\n     * called.\n     *\n     * Usage from within a component:\n     *\n     * ```js\n     * this.engine.onSceneLoaded.add(() => console.log(\"Scene switched!\"));\n     * ```\n     *\n     * @deprecated Use {@link onSceneActivated} instead.\n     */\n    onSceneLoaded = new Emitter();\n    /**\n     * {@link Emitter} for scene activated events.\n     *\n     * This listener is notified with the old scene as first parameter, and\n     * the new scene as second.\n     *\n     * This listener is notified after all resources are loaded and all components had their\n     * {@link Component#init()} as well as (if active)\n     * {@link Component#start()} and {@link Component#onActivate()} methods\n     * called.\n     *\n     * Usage from within a component:\n     *\n     * ```js\n     * this.engine.onSceneActivated.add((oldScene, newScene) => {\n     *     console.log(`Scene switch from ${oldScene.filename} to ${newScene.filename}`);\n     * });\n     * ```\n     */\n    onSceneActivated = new Emitter();\n    /**\n     * Access to internationalization.\n     */\n    i18n = new I18N(this);\n    /**\n     * WebXR related state, `null` if no XR session is active.\n     */\n    xr = null;\n    /**\n     * If `true`, {@link Texture}, {@link Object3D}, and {@link Component}\n     * instances have their prototype erased upon destruction.\n     *\n     * #### Object\n     *\n     * ```js\n     * engine.erasePrototypeOnDestroy = true;\n     *\n     * const obj = engine.scene.addObject();\n     * obj.name = 'iamalive';\n     * console.log(obj.name); // Prints 'iamalive'\n     *\n     * obj.destroy();\n     * console.log(obj.name); // Throws an error\n     * ```\n     *\n     * #### Component\n     *\n     * Components will also be affected:\n     *\n     * ```js\n     * class MyComponent extends Component {\n     *     static TypeName = 'my-component';\n     *     static Properties = {\n     *         alive: Property.bool(true)\n     *     };\n     *\n     *     start() {\n     *         this.destroy();\n     *         console.log(this.alive) // Throws an error\n     *     }\n     * }\n     * ```\n     *\n     * A component is also destroyed if its ancestor gets destroyed:\n     *\n     * ```js\n     * class MyComponent extends Component {\n     *     ...\n     *     start() {\n     *         this.object.parent.destroy();\n     *         console.log(this.alive) // Throws an error\n     *     }\n     * }\n     * ```\n     *\n     * @note Native components will not be erased if destroyed via object destruction:\n     *\n     * ```js\n     * const mesh = obj.addComponent('mesh');\n     * obj.destroy();\n     * console.log(mesh.active) // Doesn't throw even if the mesh is destroyed\n     * ```\n     *\n     * @since 1.1.1\n     */\n    erasePrototypeOnDestroy = false;\n    /**\n     * If `true`, the materials will be wrapped in a proxy to support pre-1.2.0\n     * material access, i.e.,\n     *\n     * ```js\n     * const material = new Material(engine, 'Phong Opaque');\n     * material.diffuseColor = [1.0, 0.0, 0.0, 1.0];\n     * ```\n     *\n     * If `false`, property accessors will not be available and material\n     * properties should be accessed via methods, i.e.,\n     *\n     * ```js\n     * const PhongOpaque = engine.materials.getTemplate('Phong Opaque');\n     * const material = new PhongOpaque();\n     * material.setDiffuseColor([1.0, 0.0, 0.0, 1.0]);\n     * ...\n     * const diffuse = material.getDiffuseColor();\n     * ```\n     *\n     * When disabled, reading/writing to materials is slightly more efficient on the CPU.\n     */\n    legacyMaterialSupport = true;\n    /**\n     * Scene cache in scene manager.\n     *\n     * @hidden\n     */\n    _scenes = [];\n    /**\n     * Currently active scene.\n     *\n     * @hidden\n     */\n    _scene = null;\n    /** @hidden */\n    _textures = null;\n    /** @hidden */\n    _materials = null;\n    /** @hidden */\n    _meshes = null;\n    /** @hidden */\n    _morphTargets = null;\n    /** @hidden */\n    _fonts = null;\n    /**\n     * WebAssembly bridge.\n     *\n     * @hidden\n     */\n    #wasm;\n    /**\n     * Physics manager, only available when physx is enabled in the runtime.\n     *\n     * @hidden\n     */\n    #physics = null;\n    /**\n     * Resize observer to track for canvas size changes.\n     *\n     * @hidden\n     */\n    #resizeObserver = null;\n    /**\n     * Initial reference space type set by webxr_init. See {@link _init} for\n     * more information.\n     *\n     * @hidden\n     */\n    #initialReferenceSpaceType = null;\n    /**\n     * Create a new engine instance.\n     *\n     * @param wasm Wasm bridge instance\n     * @param loadingScreen Loading screen .bin file data\n     *\n     * @hidden\n     */\n    constructor(wasm, loadingScreen) {\n        this.#wasm = wasm;\n        this.#wasm['_setEngine'](this); /* String lookup to bypass private. */\n        this.#wasm._loadingScreen = loadingScreen;\n        this.canvas.addEventListener('webglcontextlost', (e) => this.log.error(LogTag.Engine, 'Context lost:', e), false);\n    }\n    /**\n     * Start the engine if it's not already running.\n     *\n     * When using the {@link loadRuntime} function, this method is called\n     * automatically.\n     */\n    start() {\n        this.wasm._wl_application_start();\n    }\n    /**\n     * Register a custom JavaScript component type.\n     *\n     * You can register a component directly using a class inheriting from {@link Component}:\n     *\n     * ```js\n     * import { Component, Type } from '@wonderlandengine/api';\n     *\n     * export class MyComponent extends Component {\n     *     static TypeName = 'my-component';\n     *     static Properties = {\n     *         myParam: {type: Type.Float, default: 42.0},\n     *     };\n     *     init() {}\n     *     start() {}\n     *     update(dt) {}\n     *     onActivate() {}\n     *     onDeactivate() {}\n     *     onDestroy() {}\n     * });\n     *\n     * // Here, we assume we have an engine already instantiated.\n     * // In general, the registration occurs in the `index.js` file in your\n     * // final application.\n     * engine.registerComponent(MyComponent);\n     * ```\n     *\n     * {@label CLASSES}\n     * @param classes Custom component(s) extending {@link Component}.\n     *\n     * @since 1.0.0\n     */\n    registerComponent(...classes) {\n        for (const arg of classes) {\n            this.wasm._registerComponent(arg);\n        }\n    }\n    /**\n     * Switch the current active scene.\n     *\n     * Once active, the scene will be updated and rendered on the canvas.\n     *\n     * The currently active scene is accessed via {@link WonderlandEngine.scene}:\n     *\n     * ```js\n     * import {Component} from '@wonderlandengine/api';\n     *\n     * class MyComponent extends Component{\n     *     start() {\n     *         console.log(this.scene === this.engine.scene); // Prints `true`\n     *     }\n     * }\n     * ```\n     *\n     * @note This method will throw if the scene isn't activatable.\n     *\n     * #### Component Lifecycle\n     *\n     * Marking a scene as active will:\n     * * Call {@link Component#onDeactivate} for all active components of the previous scene\n     * * Call {@link Component#onActivate} for all active components of the new scene\n     *\n     * #### Usage\n     *\n     * ```js\n     * const scene = await engine.loadScene('Scene.bin');\n     * engine.switchTo(scene);\n     * ```\n     *\n     * @returns A promise that resolves once the scene is ready.\n     *\n     * @since 1.2.0\n     */\n    async switchTo(scene, opts = {}) {\n        this.wasm._wl_deactivate_activeScene();\n        /* Switch reference on engine **just** before activating, to allow\n         * component to use `this.engine.scene` in `onActivate()`/`start()`. */\n        const previous = this.scene;\n        this._scene = scene;\n        this.wasm._wl_scene_activate(scene._index);\n        if (!this.onLoadingScreenEnd.isDataRetained) {\n            this.onLoadingScreenEnd.notify();\n        }\n        /* For now, we always automatically download dependencies for\n         * the user, i.e., separate textures.bin and languages.bin.\n         *\n         * In the future, we can eventually expose this in the chunk API\n         * to give more control to the user if needed.\n         *\n         * We do not make the user wait until the textures download is complete. */\n        scene._downloadDependencies();\n        /* Update the current active scene in the physx manager */\n        if (this.physics)\n            this.physics._hit._scene = scene;\n        await this.i18n.setLanguage(this.i18n.languageCode(0));\n        const { dispatchReadyEvent = false } = opts;\n        this.onSceneActivated.notify(previous, scene);\n        if (dispatchReadyEvent)\n            scene.dispatchReadyEvent();\n    }\n    /**\n     * Load the scene from a URL, as the main scene of a new {@link Scene}.\n     *\n     * #### Usage\n     *\n     * ```js\n     * // The method returns the main scene\n     * const scene = await engine.loadMainScene();\n     * ```\n     *\n     * #### Destruction\n     *\n     * Loading a new main scene entirely resets the state of the engine, and destroys:\n     * - All loaded scenes, prefabs, and gltf files\n     * - Meshes\n     * - Textures\n     * - Materials\n     *\n     * @note This method can only load Wonderland Engine `.bin` files.\n     *\n     * @param url The URL pointing to the scene to load.\n     * @param progress Optional progress callback.\n     * @returns The main scene of the new {@link Scene}.\n     */\n    async loadMainScene(opts, progress = () => { }) {\n        const options = await Scene.loadBuffer(opts, progress);\n        return this.loadMainSceneFromBuffer(options);\n    }\n    /**\n     * Similar to {@link WonderlandEngine.loadMainScene}, but loading is done from an ArrayBuffer.\n     *\n     * @param options An object containing the buffer and extra metadata.\n     * @returns The main scene of the new {@link Scene}.\n     */\n    async loadMainSceneFromBuffer(options) {\n        const { buffer, url } = Prefab.validateBufferOptions(options);\n        const wasm = this.#wasm;\n        /*\n         * - Deactivate currently active scene\n         * - Destroy all scenes\n         * - Mark all resources as destroyed\n         * - Activation of main scene to prevent the runtime to be in limbo\n         */\n        wasm._wl_deactivate_activeScene();\n        /* Only destroy all scene once the current active one is disabled */\n        for (let i = this._scenes.length - 1; i >= 0; --i) {\n            const scene = this._scenes[i];\n            if (scene)\n                scene.destroy();\n        }\n        /* Mark all resources as destroyed */\n        this._textures._clear();\n        this._materials._clear();\n        this._meshes._clear();\n        this._morphTargets._clear();\n        const ptr = wasm.copyBufferToHeap(buffer);\n        let index = -1;\n        try {\n            index = wasm._wl_load_main_scene(ptr, buffer.byteLength, wasm.tempUTF8(url));\n        }\n        finally {\n            /* Catch calls to abort(), e.g. via asserts */\n            wasm._free(ptr);\n        }\n        if (index === -1)\n            throw new Error('Failed to load main scene');\n        const mainScene = this._reload(index);\n        /**\n         * @todo(2.0.0)\n         *\n         * Backward compatibility: We need to set this instance reference on the\n         * engine **before** component creation occurs, since users have been accessing\n         * the scene with `this.engine.scene` in `init()`.\n         */\n        let previous = this.scene;\n        this._scene = mainScene;\n        mainScene._initialize();\n        this._scene = previous;\n        await this.switchTo(mainScene, options);\n        return mainScene;\n    }\n    /**\n     * Load a {@link Prefab} from a URL.\n     *\n     * #### Usage\n     *\n     * ```js\n     * const prefab = await engine.loadPrefab('Prefab.bin');\n     * ```\n     *\n     * @note This method can only load Wonderland Engine `.bin` files.\n     * @note This method is a wrapper around {@link WonderlandEngine.loadPrefabFromBuffer}.\n     *\n     * @param url The URL pointing to the prefab to load.\n     * @param progress Optional progress callback.\n     * @returns The loaded {@link Prefab}.\n     */\n    async loadPrefab(opts, progress = () => { }) {\n        const options = await Scene.loadBuffer(opts, progress);\n        return this.loadPrefabFromBuffer(options);\n    }\n    /**\n     * Similar to {@link WonderlandEngine.loadPrefab}, but loading is done from an ArrayBuffer.\n     *\n     * @param options An object containing the buffer and extra metadata.\n     * @returns A new loaded {@link Prefab}.\n     */\n    loadPrefabFromBuffer(options) {\n        const scene = this._loadSceneFromBuffer(Prefab, options);\n        if (this.wasm._wl_scene_activatable(scene._index)) {\n            this.wasm._wl_scene_destroy(scene._index);\n            throw new Error('File is not a prefab. To load a scene, use loadScene() instead');\n        }\n        scene._initialize();\n        return scene;\n    }\n    /**\n     * Load a scene from a URL.\n     *\n     * At the opposite of {@link WonderlandEngine.loadMainScene}, the scene loaded\n     * will be added to the list of existing scenes, and its resources will be made\n     * available for other scenes/prefabs/gltf to use.\n     *\n     * #### Resources Sharing\n     *\n     * Upon loading, the scene resources are added in the engine, and references\n     * to those resources are updated.\n     *\n     * It's impossible for a scene loaded with this method to import pipelines.\n     * Thus, the loaded scene will reference existing pipelines in the main scene,\n     * based on their names.\n     *\n     * #### Usage\n     *\n     * ```js\n     * const scene = await engine.loadScene('Scene.bin');\n     * ```\n     *\n     * @note This method can only load Wonderland Engine `.bin` files.\n     * @note This method is a wrapper around {@link WonderlandEngine#loadSceneFromBuffer}.\n     *\n     * @param url The URL pointing to the scene to load.\n     * @param progress Optional progress callback.\n     * @returns A new loaded {@link Scene}.\n     */\n    async loadScene(opts, progress = () => { }) {\n        const options = await Scene.loadBuffer(opts, progress);\n        return this.loadSceneFromBuffer(options);\n    }\n    /**\n     * Create a glTF scene from a URL.\n     *\n     * @note This method is a wrapper around {@link WonderlandEngine.loadGLTFFromBuffer}.\n     *\n     * @param options The URL as a string, or an object of the form {@link GLTFOptions}.\n     * @param progress Optional progress callback.\n     * @returns A new loaded {@link PrefabGLTF}.\n     */\n    async loadGLTF(opts, progress = () => { }) {\n        const memOptions = await Scene.loadBuffer(opts, progress);\n        const options = isString(opts) ? memOptions : { ...opts, ...memOptions };\n        return this.loadGLTFFromBuffer(options);\n    }\n    /**\n     * Similar to {@link WonderlandEngine.loadScene}, but loading is done from an ArrayBuffer.\n     *\n     * @throws If the scene is streamable.\n     *\n     * @param options An object containing the buffer and extra metadata.\n     * @returns A new loaded {@link Scene}.\n     */\n    loadSceneFromBuffer(options) {\n        const scene = this._loadSceneFromBuffer(Scene, options);\n        if (!this.wasm._wl_scene_activatable(scene._index)) {\n            this.wasm._wl_scene_destroy(scene._index);\n            throw new Error('File is not a scene. To load a prefab, use loadPrefab() instead');\n        }\n        scene._initialize();\n        return scene;\n    }\n    /**\n     * Similar to {@link WonderlandEngine.loadGLTF}, but loading is done from an ArrayBuffer.\n     *\n     * @param options An object containing the buffer and extra glTF metadata.\n     * @returns A new loaded {@link PrefabGLTF}.\n     */\n    loadGLTFFromBuffer(options) {\n        Scene.validateBufferOptions(options);\n        const { buffer, extensions = false } = options;\n        const wasm = this.wasm;\n        const ptr = wasm.copyBufferToHeap(buffer);\n        try {\n            const index = wasm._wl_glTF_scene_create(extensions, ptr, buffer.byteLength);\n            const scene = new PrefabGLTF(this, index);\n            this._scenes[scene._index] = scene;\n            return scene;\n        }\n        finally {\n            /* Catch calls to abort(), e.g. via asserts */\n            wasm._free(ptr);\n        }\n    }\n    /**\n     * Checks whether the given component is registered or not.\n     *\n     * @param typeOrClass A string representing the component typename (e.g., `'cursor-component'`),\n     *     or a component class (e.g., `CursorComponent`).\n     * @returns `true` if the component is registered, `false` otherwise.\n     */\n    isRegistered(typeOrClass) {\n        return this.#wasm.isRegistered(isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName);\n    }\n    /**\n     * Resize the canvas and the rendering context.\n     *\n     * @note The `width` and `height` parameters will be scaled by the\n     * `devicePixelRatio` value. By default, the pixel ratio used is\n     * [window.devicePixelRatio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio).\n     *\n     * @param width The width, in CSS pixels.\n     * @param height The height, in CSS pixels.\n     * @param devicePixelRatio The pixel ratio factor.\n     */\n    resize(width, height, devicePixelRatio = window.devicePixelRatio) {\n        width = width * devicePixelRatio;\n        height = height * devicePixelRatio;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.wasm._wl_application_resize(width, height);\n        this.onResize.notify();\n    }\n    /**\n     * Run the next frame.\n     *\n     * @param fixedDelta The elapsed time between this frame and the previous one.\n     *\n     * @note The engine automatically schedules next frames. You should only\n     * use this method for testing.\n     */\n    nextFrame(fixedDelta = 0) {\n        this.#wasm._wl_nextFrame(fixedDelta);\n    }\n    /**\n     * Request an XR session.\n     *\n     * @note Please use this call instead of directly calling `navigator.xr.requestSession()`.\n     * Wonderland Engine requires to be aware that a session is started, and this\n     * is done through this call.\n     *\n     * @param mode The XR mode.\n     * @param features An array of required features, e.g., `['local-floor', 'hit-test']`.\n     * @param optionalFeatures An array of optional features, e.g., `['bounded-floor', 'depth-sensing']`.\n     * @returns A promise resolving with the `XRSession`, a string error message otherwise.\n     */\n    requestXRSession(mode, features, optionalFeatures = []) {\n        return checkXRSupport().then(() => this.#wasm.webxr_requestSession(mode, features, optionalFeatures));\n    }\n    /**\n     * Offer an XR session.\n     *\n     * Adds an interactive UI element to the browser interface to start an XR\n     * session. Browser support is optional, so it's advised to still allow\n     * requesting a session with a UI element on the website itself.\n     *\n     * @note Please use this call instead of directly calling `navigator.xr.offerSession()`.\n     * Wonderland Engine requires to be aware that a session is started, and this\n     * is done through this call.\n     *\n     * @param mode The XR mode.\n     * @param features An array of required features, e.g., `['local-floor', 'hit-test']`.\n     * @param optionalFeatures An array of optional features, e.g., `['bounded-floor', 'depth-sensing']`.\n     * @returns A promise resolving with the `XRSession`, a string error message otherwise.\n     *\n     * @since 1.1.5\n     */\n    offerXRSession(mode, features, optionalFeatures = []) {\n        return checkXRSupport().then(() => this.#wasm.webxr_offerSession(mode, features, optionalFeatures));\n    }\n    /**\n     * Wrap an object ID using {@link Object}.\n     *\n     * @note This method performs caching and will return the same\n     * instance on subsequent calls.\n     *\n     * @param objectId ID of the object to create.\n     *\n     * @deprecated Use {@link Scene#wrap} instead.\n     *\n     * @returns The object\n     */\n    wrapObject(objectId) {\n        return this.scene.wrap(objectId);\n    }\n    toString() {\n        return 'engine';\n    }\n    /* Public Getters & Setter */\n    /** Currently active scene. */\n    get scene() {\n        return this._scene;\n    }\n    /**\n     * WebAssembly bridge.\n     *\n     * @note Use with care. This object is used to communicate\n     * with the WebAssembly code throughout the api.\n     *\n     * @hidden\n     */\n    get wasm() {\n        return this.#wasm;\n    }\n    /** Canvas element that Wonderland Engine renders to. */\n    get canvas() {\n        return this.#wasm.canvas;\n    }\n    /**\n     * Current WebXR session or `null` if no session active.\n     *\n     * @deprecated Use {@link XR.session} on the {@link xr}\n     * object instead.\n     */\n    get xrSession() {\n        return this.xr?.session ?? null;\n    }\n    /**\n     * Current WebXR frame or `null` if no session active.\n     *\n     * @deprecated Use {@link XR.frame} on the {@link xr}\n     * object instead.\n     */\n    get xrFrame() {\n        return this.xr?.frame ?? null;\n    }\n    /**\n     * Current WebXR base layer or `null` if no session active.\n     *\n     * @deprecated Use {@link XR.baseLayer} on the {@link xr}\n     * object instead.\n     */\n    get xrBaseLayer() {\n        return this.xr?.baseLayer ?? null;\n    }\n    /**\n     * Current WebXR framebuffer or `null` if no session active.\n     *\n     * @deprecated Use {@link XR.framebuffers} on the\n     * {@link xr} object instead.\n     */\n    get xrFramebuffer() {\n        return this.xr?.framebuffers[0] ?? null;\n    }\n    /** Framebuffer scale factor. */\n    get xrFramebufferScaleFactor() {\n        return this.#wasm.webxr_framebufferScaleFactor;\n    }\n    set xrFramebufferScaleFactor(value) {\n        this.#wasm.webxr_framebufferScaleFactor = value;\n    }\n    /** Physics manager, only available when physx is enabled in the runtime. */\n    get physics() {\n        return this.#physics;\n    }\n    /** Texture resources */\n    get textures() {\n        return this._textures;\n    }\n    /** Material resources */\n    get materials() {\n        return this._materials;\n    }\n    /** Mesh resources */\n    get meshes() {\n        return this._meshes;\n    }\n    /** Morph target set resources */\n    get morphTargets() {\n        return this._morphTargets;\n    }\n    /** Font resources */\n    get fonts() {\n        return this._fonts;\n    }\n    /** Get all uncompressed images. */\n    get images() {\n        const wasm = this.wasm;\n        const max = wasm._tempMemSize >> 1;\n        const count = wasm._wl_get_images(wasm._tempMem, max);\n        const result = new Array(count);\n        for (let i = 0; i < count; ++i) {\n            const index = wasm._tempMemUint16[i];\n            result[i] = wasm._images[index];\n        }\n        return result;\n    }\n    /**\n     * Promise that resolve once all uncompressed images are loaded.\n     *\n     * This is equivalent to calling {@link WonderlandEngine.images}, and wrapping each\n     * `load` listener into a promise.\n     */\n    get imagesPromise() {\n        const promises = this.images.map((i) => onImageReady(i));\n        return Promise.all(promises);\n    }\n    /*\n     * Enable or disable the mechanism to automatically resize the canvas.\n     *\n     * Internally, the engine uses a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\n     * Changing the canvas css will thus automatically be tracked by the engine.\n     */\n    set autoResizeCanvas(flag) {\n        const state = !!this.#resizeObserver;\n        if (state === flag)\n            return;\n        if (!flag) {\n            this.#resizeObserver?.unobserve(this.canvas);\n            this.#resizeObserver = null;\n            return;\n        }\n        this.#resizeObserver = new ResizeObserver((entries) => {\n            for (const entry of entries) {\n                if (entry.target === this.canvas) {\n                    this.resize(entry.contentRect.width, entry.contentRect.height);\n                }\n            }\n        });\n        this.#resizeObserver.observe(this.canvas);\n    }\n    /** `true` if the canvas is automatically resized by the engine. */\n    get autoResizeCanvas() {\n        return this.#resizeObserver !== null;\n    }\n    /** Retrieves the runtime version. */\n    get runtimeVersion() {\n        const wasm = this.#wasm;\n        const v = wasm._wl_application_version(wasm._tempMem);\n        return {\n            major: wasm._tempMemUint16[0],\n            minor: wasm._tempMemUint16[1],\n            patch: wasm._tempMemUint16[2],\n            rc: wasm._tempMemUint16[3],\n        };\n    }\n    /** Engine {@link Logger}. Use it to turn on / off logging. */\n    get log() {\n        return this.#wasm._log;\n    }\n    /* Internal-Only Methods */\n    /**\n     * Initialize the engine.\n     *\n     * @note Should be called after the WebAssembly is fully loaded.\n     *\n     * @hidden\n     */\n    _init() {\n        /* Force the reference space to 'local'/'viewer' for the loading screen\n         * to make sure the head input is at the origin. Doing it this way to\n         * avoid adding JS components to the loading screen. */\n        const onXRStart = () => {\n            this.#initialReferenceSpaceType = this.xr.currentReferenceSpaceType;\n            const newSpace = this.xr.referenceSpaceForType('local') ??\n                this.xr.referenceSpaceForType('viewer');\n            this.xr.currentReferenceSpace = newSpace;\n        };\n        /* Not once() because the user can enter and exit XR several times\n         * during a long loading screen */\n        this.onXRSessionStart.add(onXRStart);\n        /* This is called before all init()/start()/onActivate() so we avoid\n         * overwriting a user-set reference space */\n        this.onLoadingScreenEnd.once(() => {\n            this.onXRSessionStart.remove(onXRStart);\n            if (!this.xr || !this.#initialReferenceSpaceType)\n                return;\n            this.xr.currentReferenceSpace =\n                this.xr.referenceSpaceForType(this.#initialReferenceSpaceType) ??\n                    this.xr.referenceSpaceForType('viewer');\n            this.#initialReferenceSpaceType = null;\n        });\n        /* Setup the error handler. This is used to to manage native errors. */\n        this.#wasm._wl_set_error_callback(this.#wasm.addFunction((messagePtr) => {\n            throw new Error(this.#wasm.UTF8ToString(messagePtr));\n        }, 'vi'));\n        this.#physics = null;\n        if (this.#wasm.withPhysX) {\n            /* Setup the physics callback. */\n            const physics = new Physics(this);\n            this.#wasm._wl_physx_set_collision_callback(this.#wasm.addFunction((a, index, type, b) => {\n                const physxA = this.scene._components.wrapPhysx(a);\n                const physxB = this.scene._components.wrapPhysx(b);\n                const callback = physics._callbacks[physxA._id][index];\n                callback(type, physxB);\n            }, 'viiii'));\n            this.#physics = physics;\n        }\n        this.resize(this.canvas.clientWidth, this.canvas.clientHeight);\n        this._scene = this._reload(0);\n    }\n    /**\n     * Reset the runtime state, including:\n     *     - Component cache\n     *     - Images\n     *     - Callbacks\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @hidden\n     */\n    _reset() {\n        this.wasm.reset();\n        this._scenes.length = 0;\n        this._scene = this._reload(0);\n        this.switchTo(this._scene);\n    }\n    /**\n     * Add an empty scene.\n     *\n     * @returns The newly created scene\n     *\n     * @hidden\n     */\n    _createEmpty() {\n        const wasm = this.wasm;\n        const index = wasm._wl_scene_create_empty();\n        const scene = new Scene(this, index);\n        this._scenes[index] = scene;\n        return scene;\n    }\n    /** @hidden */\n    _destroyScene(instance) {\n        const wasm = this.wasm;\n        wasm._wl_scene_destroy(instance._index);\n        const index = instance._index;\n        instance._index = -1;\n        if (this.erasePrototypeOnDestroy) {\n            Object.setPrototypeOf(instance, DestroyedPrefabInstance);\n        }\n        this._scenes[index] = null;\n    }\n    /**\n     * Reload the state of the engine with a new main scene.\n     *\n     * @param index Scene index.\n     *\n     * @hidden\n     */\n    _reload(index) {\n        const scene = new Scene(this, index);\n        this._scenes[index] = scene;\n        this._textures = new TextureManager(this);\n        this._materials = new MaterialManager(this);\n        this._meshes = new MeshManager(this);\n        this._morphTargets = new ResourceManager(this, MorphTargets);\n        this._fonts = new ResourceManager(this, Font);\n        return scene;\n    }\n    /**\n     * Helper to load prefab and activatable scene.\n     *\n     * @param options Loading options.\n     * @returns The the loaded prefab.\n     *\n     * @hidden\n     */\n    _loadSceneFromBuffer(PrefabClass, options) {\n        const { buffer, url } = Scene.validateBufferOptions(options);\n        const wasm = this.wasm;\n        const ptr = wasm.copyBufferToHeap(buffer);\n        let index = -1;\n        try {\n            index = wasm._wl_scene_create(ptr, buffer.byteLength, wasm.tempUTF8(url));\n        }\n        finally {\n            /* Catch calls to abort(), e.g. via asserts */\n            wasm._free(ptr);\n        }\n        if (!index)\n            throw new Error('Failed to parse scene');\n        /** The scene was successfully loaded on the wasm side, we need to\n         * add it to the scene cache, since the wasm might read it. */\n        const scene = new PrefabClass(this, index);\n        this._scenes[index] = scene;\n        return scene;\n    }\n}\n", "/**\n * Assert that the given bit index is less than 32.\n *\n * @param bit The bit to test.\n */\nfunction assert(bit) {\n    if (bit >= 32) {\n        throw new Error(`BitSet.enable(): Value ${bit} is over 31`);\n    }\n}\n/**\n * Stores a bit pattern to quickly test if an index is enabled / disabled.\n *\n * This class can store up to **32** different values in the range [0; 31].\n *\n * #### Usage\n *\n * ```js\n * const bitset = new BitSet();\n * bitset.enable(10); // Enable bit at index `10`.\n * console.log(bitset.enabled(10)); // Prints 'true'.\n * ```\n *\n * #### TypeScript\n *\n * The set can be typed over an enum:\n *\n * ```ts\n * enum Tag {\n *     First = 0,\n *     Second = 1,\n * }\n *\n * const bitset = new BitSet<Tag>();\n * bitset.enable(Tag.First);\n * ```\n */\nexport class BitSet {\n    /** Enabled bits. @hidden */\n    _bits = 0;\n    /**\n     * Enable the bit at the given index.\n     *\n     * @param bits A spread of all the bits to enable.\n     * @returns Reference to self (for method chaining).\n     */\n    enable(...bits) {\n        for (const bit of bits) {\n            assert(bit);\n            /* Casts the result to an unsigned integer */\n            this._bits |= (1 << bit) >>> 0;\n        }\n        return this;\n    }\n    /**\n     * Enable all bits.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    enableAll() {\n        this._bits = ~0;\n        return this;\n    }\n    /**\n     * Disable the bit at the given index.\n     *\n     * @param bits A spread of all the bits to disable.\n     * @returns Reference to self (for method chaining).\n     */\n    disable(...bits) {\n        for (const bit of bits) {\n            assert(bit);\n            /* Casts the result to an unsigned integer */\n            this._bits &= ~((1 << bit) >>> 0);\n        }\n        return this;\n    }\n    /**\n     * Disable all bits.\n     *\n     * @returns Reference to self (for method chaining).\n     */\n    disableAll() {\n        this._bits = 0;\n        return this;\n    }\n    /**\n     * Checker whether the bit is set or not.\n     *\n     * @param bit The bit to check.\n     * @returns `true` if it's enabled, `false` otherwise.\n     */\n    enabled(bit) {\n        return !!(this._bits & ((1 << bit) >>> 0));\n    }\n}\n", "import { BitSet } from './bitset.js';\n/**\n * Logging levels supported by {@link Logger}.\n */\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Info\"] = 0] = \"Info\";\n    LogLevel[LogLevel[\"Warn\"] = 1] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 2] = \"Error\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Logging wrapper.\n *\n * This is used to allow turning on/off:\n *     - `console.log`\n *     - `console.warn`\n *     - `console.error`\n *\n * #### Usage\n *\n * ```js\n * import {Logger, LogLevel, LogTag} from '@wonderlandengine/api';\n *\n * // Create a logger with only the \"error\" and \"warn\" levels activated\n * const logger = new Logger(LogLevel.Warn, LogLevel.Error);\n *\n * // Only the \"error\" and \"warn\" levels are activated,\n * // this message isn't logged.\n * logger.info(LogTag.Component, 'This message is shushed')\n *\n * // Prints 'Hello Error!'\n * logger.error(LogTag.Component, 'Hello Error!');\n *\n * // Prints 'Hello Warning!'\n * logger.warn(LogTag.Component, 'Hello Warning!');\n * ```\n *\n * The log levels can be changed at anytime using the {@link BitSet} api:\n *\n * ```js\n * // Enable the \"info\" level\n * logger.levels.enable(LogLevel.Info);\n * * // Disable the \"warn\" level\n * logger.levels.disable(LogLevel.Warn);\n * ```\n *\n * #### Tags\n *\n * In addition, the logger supports tagging messages:\n *\n * ```js\n * import {Logger, LogLevel, LogTag} from '@wonderlandengine/api';\n *\n * const logger = new Logger(LogLevel.Info);\n *\n * logger.tags.disableAll();\n *\n * // All tags are off, this message isn't logged\n * logger.info(LogTag.Component, 'This message is shushed');\n *\n * logger.tags.enable(LogTag.Component);\n * logger.info(LogTag.Component, 'Hello World!') // Prints 'Hello World!'\n * ```\n *\n * The tagging system gives another layer of control to enable / disable\n * some specific logs.\n */\nexport class Logger {\n    /**\n     * Bitset of enabled levels.\n     *\n     * @hidden\n     */\n    levels = new BitSet();\n    /**\n     * Bitset of enabled tags.\n     *\n     * @hidden\n     */\n    tags = new BitSet().enableAll();\n    /**\n     * Create a new logger instance.\n     *\n     * @param levels Default set of levels to enable.\n     */\n    constructor(...levels) {\n        this.levels.enable(...levels);\n    }\n    /**\n     * Log the message(s) using `console.log`.\n     *\n     * @param tag Tag represented by a positive integer.\n     * @param msg A spread of message to log.\n     * @returns Reference to self (for method chaining).\n     */\n    info(tag, ...msg) {\n        if (this.levels.enabled(LogLevel.Info) && this.tags.enabled(tag)) {\n            console.log(...msg);\n        }\n        return this;\n    }\n    /**\n     * Log the message(s) using `console.warn`.\n     *\n     * @param tag Tag represented by a positive integer.\n     * @param msg A spread of message to log.\n     * @returns Reference to self (for method chaining).\n     */\n    warn(tag, ...msg) {\n        if (this.levels.enabled(LogLevel.Warn) && this.tags.enabled(tag)) {\n            console.warn(...msg);\n        }\n        return this;\n    }\n    /**\n     * Log the message(s) using `console.error`.\n     *\n     * @param tag Tag represented by a positive integer.\n     * @param msg A spread of message to log.\n     * @returns Reference to self (for method chaining).\n     */\n    error(tag, ...msg) {\n        if (this.levels.enabled(LogLevel.Error) && this.tags.enabled(tag)) {\n            console.error(...msg);\n        }\n        return this;\n    }\n}\n", "/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2016 Patrick Gansterer <paroga@paroga.com>\n * Copyright (c) 2020-2023 Aaron Huggins <ahuggins@aaronhuggins.com>\n * Copyright (c) 2024 Wonderland GmbH <contact@wonderlandengine.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nconst kCborTagBignum = 2;\nconst kCborTagNegativeBignum = 3;\n/* RFC 8746 Tag values for typed little-endian arrays */\nconst kCborTagUint8 = 64;\nconst kCborTagUint16 = 69;\nconst kCborTagUint32 = 70;\nconst kCborTagUint64 = 71;\nconst kCborTagInt8 = 72;\nconst kCborTagInt16 = 77;\nconst kCborTagInt32 = 78;\nconst kCborTagInt64 = 79;\nconst kCborTagFloat32 = 85;\nconst kCborTagFloat64 = 86;\n/**\n * Converts a Concise Binary Object Representation (CBOR) buffer into an object.\n *\n * ```js\n * const buffer = new Uint8Array([0xa2, 0x01, 0x02, 0x03, 0x04]).buffer;\n * const decoded = decode(buffer);\n * console.log(decoded); // { \"1\": 2, \"3\": 4 }\n * ```\n *\n * CBOR values can be wrapped in a numeric tag. To handle and possibly\n * transform tagged values, pass a tagger function:\n *\n * ```js\n * const buffer = new Uint8Array([\n *   0xa1, 0x63, 0x75, 0x72, 0x6c, 0xd8, 0x20, 0x70,\n *   0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x73,\n *   0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f\n * ]);\n * const decoded = decode(buffer, (tag, value) => {\n *     if (tag === 32) return new URL(value);\n *     return value;\n * });\n * console.log(decoded); // { url: URL { href: \"http://site.com/\" } }\n * ```\n *\n * Decoded basic types generally match the equivalent JavaScript types. Byte\n * strings are decoded to Uint8Array.\n *\n * Tagged values are left as-is, with the following exceptions:\n * - Bignum values (byte strings with tag 2 or 3) are decoded to BigInt\n * - Little-endian versions of typed arrays as defined in RFC 8746 are decoded\n *   to JavaScript typed arrays\n *\n * @param data A valid CBOR buffer.\n * @param tagger Optional callback for transformation of tagged values.\n * @param options Options for decoding behavior.\n * @returns The CBOR buffer converted to a JavaScript value.\n */\nfunction decode(data, tagger = (_, value) => value, options = {}) {\n    const { dictionary = 'object' } = options;\n    const dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    let offset = 0;\n    function commitRead(length, value) {\n        offset += length;\n        return value;\n    }\n    function readArrayBuffer(length) {\n        return commitRead(length, data.subarray(offset, offset + length));\n    }\n    function readFloat16() {\n        const POW_2_24 = 5.960464477539063e-8;\n        const tempArrayBuffer = new ArrayBuffer(4);\n        const tempDataView = new DataView(tempArrayBuffer);\n        const value = readUint16();\n        const sign = value & 0x8000;\n        let exponent = value & 0x7c00;\n        const fraction = value & 0x03ff;\n        if (exponent === 0x7c00)\n            exponent = 0xff << 10;\n        else if (exponent !== 0)\n            exponent += (127 - 15) << 10;\n        else if (fraction !== 0)\n            return (sign ? -1 : 1) * fraction * POW_2_24;\n        tempDataView.setUint32(0, (sign << 16) | (exponent << 13) | (fraction << 13));\n        return tempDataView.getFloat32(0);\n    }\n    function readFloat32() {\n        return commitRead(4, dataView.getFloat32(offset));\n    }\n    function readFloat64() {\n        return commitRead(8, dataView.getFloat64(offset));\n    }\n    function readUint8() {\n        return commitRead(1, data[offset]);\n    }\n    function readUint16() {\n        return commitRead(2, dataView.getUint16(offset));\n    }\n    function readUint32() {\n        return commitRead(4, dataView.getUint32(offset));\n    }\n    function readUint64() {\n        return commitRead(8, dataView.getBigUint64(offset));\n    }\n    function readBreak() {\n        if (data[offset] !== 0xff)\n            return false;\n        offset += 1;\n        return true;\n    }\n    function readLength(additionalInformation) {\n        if (additionalInformation < 24)\n            return additionalInformation;\n        if (additionalInformation === 24)\n            return readUint8();\n        if (additionalInformation === 25)\n            return readUint16();\n        if (additionalInformation === 26)\n            return readUint32();\n        if (additionalInformation === 27) {\n            const integer = readUint64();\n            if (integer <= Number.MAX_SAFE_INTEGER)\n                return Number(integer);\n            return integer;\n        }\n        if (additionalInformation === 31)\n            return -1;\n        throw new Error('CBORError: Invalid length encoding');\n    }\n    function readIndefiniteStringLength(majorType) {\n        const initialByte = readUint8();\n        if (initialByte === 0xff)\n            return -1;\n        const length = readLength(initialByte & 0x1f);\n        if (length < 0 || initialByte >> 5 !== majorType) {\n            throw new Error('CBORError: Invalid indefinite length element');\n        }\n        return Number(length);\n    }\n    function appendUtf16Data(utf16data, length) {\n        for (let i = 0; i < length; ++i) {\n            let value = readUint8();\n            if (value & 0x80) {\n                if (value < 0xe0) {\n                    value = ((value & 0x1f) << 6) | (readUint8() & 0x3f);\n                    length -= 1;\n                }\n                else if (value < 0xf0) {\n                    value =\n                        ((value & 0x0f) << 12) |\n                            ((readUint8() & 0x3f) << 6) |\n                            (readUint8() & 0x3f);\n                    length -= 2;\n                }\n                else {\n                    value =\n                        ((value & 0x07) << 18) |\n                            ((readUint8() & 0x3f) << 12) |\n                            ((readUint8() & 0x3f) << 6) |\n                            (readUint8() & 0x3f);\n                    length -= 3;\n                }\n            }\n            if (value < 0x10000) {\n                utf16data.push(value);\n            }\n            else {\n                value -= 0x10000;\n                utf16data.push(0xd800 | (value >> 10));\n                utf16data.push(0xdc00 | (value & 0x3ff));\n            }\n        }\n    }\n    function decodeItem() {\n        const initialByte = readUint8();\n        const majorType = initialByte >> 5;\n        const additionalInformation = initialByte & 0x1f;\n        let i;\n        let length;\n        if (majorType === 7) {\n            switch (additionalInformation) {\n                case 25:\n                    return readFloat16();\n                case 26:\n                    return readFloat32();\n                case 27:\n                    return readFloat64();\n            }\n        }\n        length = readLength(additionalInformation);\n        if (length < 0 && (majorType < 2 || 6 < majorType)) {\n            throw new Error('CBORError: Invalid length');\n        }\n        switch (majorType) {\n            case 0:\n                return length;\n            case 1:\n                if (typeof length === 'number') {\n                    return -1 - length;\n                }\n                return -1n - length;\n            case 2: {\n                if (length < 0) {\n                    const elements = [];\n                    let fullArrayLength = 0;\n                    while ((length = readIndefiniteStringLength(majorType)) >= 0) {\n                        fullArrayLength += length;\n                        elements.push(readArrayBuffer(length));\n                    }\n                    const fullArray = new Uint8Array(fullArrayLength);\n                    let fullArrayOffset = 0;\n                    for (i = 0; i < elements.length; ++i) {\n                        fullArray.set(elements[i], fullArrayOffset);\n                        fullArrayOffset += elements[i].length;\n                    }\n                    return fullArray;\n                }\n                return readArrayBuffer(length).slice();\n            }\n            case 3: {\n                /* Can't use TextDecoder.decode() because not all browsers\n                 * support calling it with an underlying SharedArrayBuffer yet.\n                 * See https://github.com/whatwg/encoding/issues/172 */\n                /** @todo Re-evaluate browser support */\n                const utf16data = [];\n                if (length < 0) {\n                    while ((length = readIndefiniteStringLength(majorType)) >= 0) {\n                        appendUtf16Data(utf16data, length);\n                    }\n                }\n                else {\n                    appendUtf16Data(utf16data, length);\n                }\n                let string = '';\n                const DECODE_CHUNK_SIZE = 8192;\n                for (i = 0; i < utf16data.length; i += DECODE_CHUNK_SIZE) {\n                    string += String.fromCharCode.apply(null, utf16data.slice(i, i + DECODE_CHUNK_SIZE));\n                }\n                return string;\n            }\n            case 4: {\n                let retArray;\n                if (length < 0) {\n                    retArray = [];\n                    let index = 0;\n                    while (!readBreak()) {\n                        retArray.push(decodeItem());\n                    }\n                }\n                else {\n                    retArray = new Array(length);\n                    for (i = 0; i < length; ++i) {\n                        retArray[i] = decodeItem();\n                    }\n                }\n                return retArray;\n            }\n            case 5: {\n                if (dictionary === 'map') {\n                    const retMap = new Map();\n                    for (i = 0; i < length || (length < 0 && !readBreak()); ++i) {\n                        const key = decodeItem();\n                        if (retMap.has(key)) {\n                            throw new Error('CBORError: Duplicate key encountered');\n                        }\n                        retMap.set(key, decodeItem());\n                    }\n                    return retMap;\n                }\n                const retObject = {};\n                for (i = 0; i < length || (length < 0 && !readBreak()); ++i) {\n                    const key = decodeItem();\n                    if (Object.prototype.hasOwnProperty.call(retObject, key)) {\n                        throw new Error('CBORError: Duplicate key encountered');\n                    }\n                    retObject[key] = decodeItem();\n                }\n                return retObject;\n            }\n            case 6: {\n                const value = decodeItem();\n                const tag = length;\n                if (value instanceof Uint8Array) {\n                    switch (tag) {\n                        case kCborTagBignum:\n                        case kCborTagNegativeBignum:\n                            let num = value.reduce((acc, n) => (acc << 8n) + BigInt(n), 0n);\n                            if (tag == kCborTagNegativeBignum) {\n                                num = -1n - num;\n                            }\n                            return num;\n                        /* Little-endian typed arrays (RFC 8746) */\n                        case kCborTagUint8:\n                            return value;\n                        case kCborTagInt8:\n                            return new Int8Array(value.buffer);\n                        case kCborTagUint16:\n                            return new Uint16Array(value.buffer);\n                        case kCborTagInt16:\n                            return new Int16Array(value.buffer);\n                        case kCborTagUint32:\n                            return new Uint32Array(value.buffer);\n                        case kCborTagInt32:\n                            return new Int32Array(value.buffer);\n                        case kCborTagUint64:\n                            return new BigUint64Array(value.buffer);\n                        case kCborTagInt64:\n                            return new BigInt64Array(value.buffer);\n                        case kCborTagFloat32:\n                            return new Float32Array(value.buffer);\n                        case kCborTagFloat64:\n                            return new Float64Array(value.buffer);\n                    }\n                }\n                return tagger(tag, value);\n            }\n            case 7:\n                switch (length) {\n                    case 20:\n                        return false;\n                    case 21:\n                        return true;\n                    case 22:\n                        return null;\n                    case 23:\n                        return undefined;\n                    default:\n                        return length;\n                }\n        }\n    }\n    const ret = decodeItem();\n    if (offset !== data.byteLength) {\n        throw new Error('CBORError: Remaining bytes');\n    }\n    return ret;\n}\nexport const CBOR = {\n    decode,\n};\n", "import { LogTag } from './index.js';\nimport { Type, defaultPropertyCloner } from './property.js';\nimport { RetainEmitter } from './utils/event.js';\nimport { CBOR } from './utils/cbor.js';\nimport { Logger } from './utils/logger.js';\nimport { inheritProperties, Component, BrokenComponent, XR, } from './wonderland.js';\n/**\n * Default component parameter value per type.\n */\nconst _componentDefaults = new Map([\n    [Type.Bool, false],\n    [Type.Int, 0],\n    [Type.Float, 0.0],\n    [Type.String, ''],\n    [Type.Enum, undefined],\n    [Type.Object, null],\n    [Type.Mesh, null],\n    [Type.Texture, null],\n    [Type.Material, null],\n    [Type.Animation, null],\n    [Type.Skin, null],\n    [Type.Color, Float32Array.from([0.0, 0.0, 0.0, 1.0])],\n    [Type.Vector2, Float32Array.from([0.0, 0.0])],\n    [Type.Vector3, Float32Array.from([0.0, 0.0, 0.0])],\n    [Type.Vector4, Float32Array.from([0.0, 0.0, 0.0, 0.0])],\n]);\n/**\n * Setup the defaults value of the properties on a given\n * component class.\n *\n * @param ctor The component class\n */\nfunction _setupDefaults(ctor) {\n    for (const name in ctor.Properties) {\n        const p = ctor.Properties[name];\n        if (p.type === Type.Enum) {\n            /* Enum default can be a string or an index. Convert to and/or\n             * sanity-check the index. */\n            if (p.values?.length) {\n                /* Don't try to look up the default if the user specified a\n                 * number or we already converted to one. */\n                if (typeof p.default !== 'number') {\n                    /* If undefined, missing element or wrong type this returns\n                     * -1 which becomes 0 below. This matches editor behavior. */\n                    p.default = p.values.indexOf(p.default);\n                }\n                if (p.default < 0 || p.default >= p.values.length) {\n                    p.default = 0;\n                }\n            }\n            else {\n                /* There's no index value that makes sense */\n                p.default = undefined;\n            }\n        }\n        else if ((p.type === Type.Color ||\n            p.type === Type.Vector2 ||\n            p.type === Type.Vector3 ||\n            p.type === Type.Vector4) &&\n            Array.isArray(p.default)) {\n            /* Defaults provided by user code are currently always a standard\n             * array, but become a typed array on the property */\n            p.default = Float32Array.from(p.default);\n        }\n        else if (p.default === undefined) {\n            const cloner = p.cloner ?? defaultPropertyCloner;\n            p.default = cloner.clone(p.type, _componentDefaults.get(p.type));\n        }\n        ctor.prototype[name] = p.default;\n    }\n}\n/**\n * Determines a fixed order for property attributes used for deserialization.\n *\n * @param ctor The component class\n */\nfunction _setPropertyOrder(ctor) {\n    ctor._propertyOrder = ctor.hasOwnProperty('Properties')\n        ? Object.keys(ctor.Properties).sort()\n        : [];\n}\n/**\n * Low-level wrapper to interact with the WebAssembly code.\n *\n * @hidden\n */\nexport class WASM {\n    /**\n     * Emscripten worker field.\n     *\n     * @note This api is meant to be used internally.\n     */\n    worker = '';\n    /**\n     * Emscripten wasm field.\n     *\n     * @note This api is meant to be used internally.\n     */\n    wasm = null;\n    /**\n     * Emscripten canvas.\n     *\n     * @note This api is meant to be used internally.\n     */\n    canvas = null;\n    /**\n     * WebGPU device.\n     *\n     * @note This api is meant to be used internally.\n     */\n    preinitializedWebGPUDevice = null;\n    /** Current WebXR  */\n    /**\n     * Emscripten WebXR session.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_session = null;\n    /**\n     * Emscripten WebXR request session callback.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_requestSession = null;\n    /**\n     * Emscripten WebXR offer session callback.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_offerSession = null;\n    /**\n     * Emscripten WebXR frame.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_frame = null;\n    /**\n     * Emscripten current WebXR reference space.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_refSpace = null;\n    /**\n     * Emscripten WebXR reference spaces.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_refSpaces = null;\n    /**\n     * Emscripten WebXR current reference space type.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_refSpaceType = null;\n    /**\n     * Emscripten WebXR GL projection layer.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_baseLayer = null;\n    /**\n     * Emscripten WebXR framebuffer scale factor.\n     *\n     * @note This api is meant to be used internally.\n     */\n    webxr_framebufferScaleFactor = 1.0;\n    /**\n     * Emscripten WebXR framebuffer(s).\n     *\n     * @note This api is meant to be used internally.\n     */\n    /* webxr_fbo will not get overwritten if we are rendering to the\n     * default framebuffer, e.g., when using WebXR emulator. */\n    webxr_fbo = 0;\n    /**\n     * Convert a WASM memory view to a JavaScript string.\n     *\n     * @param ptr Pointer start\n     * @param ptrEnd Pointer end\n     * @returns JavaScript string\n     */\n    UTF8ViewToString;\n    /** Logger instance. */\n    _log = new Logger();\n    /** If `true`, logs will not spam the console on error. */\n    _deactivate_component_on_error = false;\n    /** Temporary memory pointer. */\n    _tempMem = null;\n    /** Temporary memory size. */\n    _tempMemSize = 0;\n    /** Temporary float memory view. */\n    _tempMemFloat = null;\n    /** Temporary int memory view. */\n    _tempMemInt = null;\n    /** Temporary uint8 memory view. */\n    _tempMemUint8 = null;\n    /** Temporary uint32 memory view. */\n    _tempMemUint32 = null;\n    /** Temporary uint16 memory view. */\n    _tempMemUint16 = null;\n    /** Loading screen .bin file data */\n    _loadingScreen = null;\n    /** List of callbacks triggered when the scene is loaded. */\n    _sceneLoadedCallback = [];\n    /** Image cache. */\n    _images = [null];\n    /** Component instances. */\n    _components = null;\n    /** Component Type info. */\n    _componentTypes = [];\n    /** Index per component type name. */\n    _componentTypeIndices = {};\n    /** Wonderland engine instance. */\n    _engine = null;\n    /**\n     * `true` if this runtime is using physx.\n     *\n     * @note This api is meant to be used internally.\n     */\n    _withPhysX = false;\n    /** Decoder for UTF8 `ArrayBuffer` to JavaScript string. */\n    _utf8Decoder = new TextDecoder('utf8');\n    /**\n     * Registration index of {@link BrokenComponent}.\n     *\n     * This is used to return dummy instances when a component\n     * isn't registered.\n     *\n     * @hidden\n     */\n    _brokenComponentIndex = 0;\n    /**\n     * Create a new instance of the WebAssembly <> API bridge.\n     *\n     * @param threads `true` if the runtime used has threads support\n     */\n    constructor(threads) {\n        if (threads) {\n            this.UTF8ViewToString = (s, e) => {\n                if (!s)\n                    return '';\n                return this._utf8Decoder.decode(this.HEAPU8.slice(s, e));\n            };\n        }\n        else {\n            this.UTF8ViewToString = (s, e) => {\n                if (!s)\n                    return '';\n                return this._utf8Decoder.decode(this.HEAPU8.subarray(s, e));\n            };\n        }\n        this._brokenComponentIndex = this._registerComponent(BrokenComponent);\n    }\n    /**\n     * Reset the cache of the library.\n     *\n     * @note Should only be called when tearing down the runtime.\n     */\n    reset() {\n        /* Called first to perform cleanup. */\n        this._wl_reset();\n        this._components = null;\n        this._images.length = 1;\n        this.allocateTempMemory(1024);\n        this._componentTypes = [];\n        this._componentTypeIndices = {};\n        this._brokenComponentIndex = this._registerComponent(BrokenComponent);\n    }\n    /**\n     * Checks whether the given component is registered or not.\n     *\n     * @param ctor  A string representing the component typename (e.g., `'cursor-component'`).\n     * @returns `true` if the component is registered, `false` otherwise.\n     */\n    isRegistered(type) {\n        return type in this._componentTypeIndices;\n    }\n    /**\n     * Register a legacy component in this Emscripten instance.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @param typeName The name of the component.\n     * @param params An object containing the parameters (properties).\n     * @param object The object's prototype.\n     * @returns The registration index\n     */\n    _registerComponentLegacy(typeName, params, object) {\n        const ctor = class CustomComponent extends Component {\n        };\n        ctor.TypeName = typeName;\n        ctor.Properties = params;\n        Object.assign(ctor.prototype, object);\n        return this._registerComponent(ctor);\n    }\n    /**\n     * Register a class component in this Emscripten instance.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @param ctor The class to register.\n     * @returns The registration index.\n     */\n    _registerComponent(ctor) {\n        if (!ctor.TypeName)\n            throw new Error('no name provided for component.');\n        if (!ctor.prototype._triggerInit) {\n            throw new Error(`registerComponent(): Component ${ctor.TypeName} must extend Component`);\n        }\n        inheritProperties(ctor);\n        _setupDefaults(ctor);\n        _setPropertyOrder(ctor);\n        const typeIndex = ctor.TypeName in this._componentTypeIndices\n            ? this._componentTypeIndices[ctor.TypeName]\n            : this._componentTypes.length;\n        this._componentTypes[typeIndex] = ctor;\n        this._componentTypeIndices[ctor.TypeName] = typeIndex;\n        if (ctor === BrokenComponent)\n            return typeIndex;\n        this._log.info(LogTag.Engine, 'Registered component', ctor.TypeName, `(class ${ctor.name})`, 'with index', typeIndex);\n        if (ctor.onRegister)\n            ctor.onRegister(this._engine);\n        return typeIndex;\n    }\n    /**\n     * Allocate the requested amount of temporary memory\n     * in this WASM instance.\n     *\n     * @param size The number of bytes to allocate\n     */\n    allocateTempMemory(size) {\n        this._log.info(LogTag.Engine, 'Allocating temp mem:', size);\n        this._tempMemSize = size;\n        if (this._tempMem)\n            this._free(this._tempMem);\n        this._tempMem = this._malloc(this._tempMemSize);\n        this.updateTempMemory();\n    }\n    /**\n     * @todo: Delete this and only keep `allocateTempMemory`\n     *\n     * @param size Number of bytes to allocate\n     */\n    requireTempMem(size) {\n        if (this._tempMemSize >= size)\n            return;\n        /* Grow in 1kb increments */\n        this.allocateTempMemory(Math.ceil(size / 1024) * 1024);\n    }\n    /**\n     * Update the temporary memory views. This must be called whenever the\n     * temporary memory address changes.\n     *\n     * @note This api is meant to be used internally.\n     */\n    updateTempMemory() {\n        this._tempMemFloat = new Float32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\n        this._tempMemInt = new Int32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\n        this._tempMemUint32 = new Uint32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\n        this._tempMemUint16 = new Uint16Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 1);\n        this._tempMemUint8 = new Uint8Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize);\n    }\n    /**\n     * Returns a uint8 buffer view on temporary WASM memory.\n     *\n     * **Note**: this method might allocate if the requested memory is bigger\n     * than the current temporary memory allocated.\n     *\n     * @param count The number of **elements** required\n     * @returns A {@link TypedArray} over the WASM memory\n     */\n    getTempBufferU8(count) {\n        this.requireTempMem(count);\n        return this._tempMemUint8;\n    }\n    /**\n     * Returns a uint16 buffer view on temporary WASM memory.\n     *\n     * **Note**: this method might allocate if the requested memory is bigger\n     * than the current temporary memory allocated.\n     *\n     * @param count The number of **elements** required\n     * @returns A {@link TypedArray} over the WASM memory\n     */\n    getTempBufferU16(count) {\n        this.requireTempMem(count * 2);\n        return this._tempMemUint16;\n    }\n    /**\n     * Returns a uint32 buffer view on temporary WASM memory.\n     *\n     * **Note**: this method might allocate if the requested memory is bigger\n     * than the current temporary memory allocated.\n     *\n     * @param count The number of **elements** required.\n     * @returns A {@link TypedArray} over the WASM memory.\n     */\n    getTempBufferU32(count) {\n        this.requireTempMem(count * 4);\n        return this._tempMemUint32;\n    }\n    /**\n     * Returns a int32 buffer view on temporary WASM memory.\n     *\n     * **Note**: this method might allocate if the requested memory is bigger\n     * than the current temporary memory allocated.\n     *\n     * @param count The number of **elements** required.\n     * @returns A {@link TypedArray} over the WASM memory.\n     */\n    getTempBufferI32(count) {\n        this.requireTempMem(count * 4);\n        return this._tempMemInt;\n    }\n    /**\n     * Returns a float32 buffer view on temporary WASM memory.\n     *\n     * **Note**: this method might allocate if the requested memory is bigger\n     * than the current temporary memory allocated.\n     *\n     * @param count The number of **elements** required.\n     * @returns A {@link TypedArray} over the WASM memory.\n     */\n    getTempBufferF32(count) {\n        this.requireTempMem(count * 4);\n        return this._tempMemFloat;\n    }\n    /**\n     * Copy the string into temporary WASM memory and retrieve the pointer.\n     *\n     * @note This method will compute the strlen and append a `\\0`.\n     *\n     * @note The result should be used **directly** otherwise it might get\n     * overridden by any next call modifying the temporary memory.\n     *\n     * @param str The string to write to temporary memory\n     * @param byteOffset The starting byte offset in the temporary memory at which\n     *     the string should be written. This is useful when using multiple temporaries.\n     * @return The temporary pointer onto the WASM memory\n     */\n    tempUTF8(str, byteOffset = 0) {\n        const strLen = this.lengthBytesUTF8(str) + 1;\n        this.requireTempMem(strLen + byteOffset);\n        const ptr = this._tempMem + byteOffset;\n        this.stringToUTF8(str, ptr, strLen);\n        return ptr;\n    }\n    /**\n     * Copy the buffer into the WASM heap.\n     *\n     * @note The returned pointer must be freed.\n     *\n     * @param buffer The buffer to copy into the heap.\n     * @returns An allocated pointer, that must be free after use.\n     */\n    copyBufferToHeap(buffer) {\n        const size = buffer.byteLength;\n        const ptr = this._malloc(size);\n        this.HEAPU8.set(new Uint8Array(buffer), ptr);\n        return ptr;\n    }\n    /**\n     * Returns `true` if the runtime supports physx or not.\n     */\n    get withPhysX() {\n        return this._withPhysX;\n    }\n    /**\n     * Set the engine instance holding this bridge.\n     *\n     * @note This api is meant to be used internally.\n     *\n     * @param engine The engine instance.\n     */\n    _setEngine(engine) {\n        this._engine = engine;\n    }\n    /* WebAssembly to JS call bridge. */\n    _wljs_xr_session_start(mode) {\n        if (this._engine.xr === null) {\n            this._engine.xr = new XR(this, mode);\n            this._engine.onXRSessionStart.notify(this.webxr_session, mode);\n        }\n    }\n    _wljs_xr_session_end() {\n        const startEmitter = this._engine.onXRSessionStart;\n        if (startEmitter instanceof RetainEmitter)\n            startEmitter.reset();\n        this._engine.onXRSessionEnd.notify();\n        this._engine.xr = null;\n    }\n    _wljs_xr_disable() {\n        /* @todo This could directly be fully handled in JS. */\n        this._engine.arSupported = false;\n        this._engine.vrSupported = false;\n    }\n    _wljs_init(withPhysX) {\n        this._withPhysX = withPhysX;\n        /* Target memory for JS API functions that return arrays */\n        this.allocateTempMemory(1024);\n    }\n    _wljs_scene_switch(index) {\n        const scene = this._engine._scenes[index];\n        /* Scene can be null during testing with `engine.reset()` */\n        this._components = scene?._jsComponents ?? null;\n    }\n    _wljs_destroy_image(index) {\n        const img = this._images[index];\n        if (!img)\n            return;\n        this._images[index] = null;\n        if (img.src !== undefined) {\n            img.src = '';\n        }\n        if (img.onload !== undefined) {\n            img.onload = null;\n        }\n        if (img.onerror !== undefined) {\n            img.onerror = null;\n        }\n    }\n    _wljs_objects_markDestroyed(sceneIndex, idsPtr, count) {\n        const scene = this._engine._scenes[sceneIndex];\n        const start = idsPtr >>> 1;\n        for (let i = 0; i < count; ++i) {\n            const id = this.HEAPU16[start + i];\n            scene._destroyObject(id);\n        }\n    }\n    _wljs_scene_initialize(sceneIndex, idsPtr, idsEnd, paramDataPtr, paramDataEndPtr, offsetsPtr, offsetsEndPtr) {\n        const cbor = this.HEAPU8.subarray(paramDataPtr, paramDataEndPtr);\n        const offsets = this.HEAPU32.subarray(offsetsPtr >>> 2, offsetsEndPtr >>> 2);\n        const ids = this.HEAPU16.subarray(idsPtr >>> 1, idsEnd >>> 1);\n        const engine = this._engine;\n        const scene = engine._scenes[sceneIndex];\n        const components = scene._jsComponents;\n        let decoded;\n        try {\n            decoded = CBOR.decode(cbor);\n        }\n        catch (e) {\n            this._log.error(LogTag.Engine, 'Exception during component parameter decoding');\n            this._log.error(LogTag.Component, e);\n            return;\n        }\n        if (!Array.isArray(decoded)) {\n            this._log.error(LogTag.Engine, 'Parameter data must be an array');\n            return;\n        }\n        if (decoded.length !== ids.length) {\n            this._log.error(LogTag.Engine, `Parameter data has size ${decoded.length} but expected ${ids.length}`);\n            return;\n        }\n        for (let i = 0; i < decoded.length; ++i) {\n            const id = Component._pack(sceneIndex, ids[i]);\n            const index = this._wl_get_js_component_index_for_id(id);\n            const component = components[index];\n            const ctor = component.constructor;\n            if (ctor == BrokenComponent)\n                continue;\n            const paramNames = ctor._propertyOrder;\n            const paramValues = decoded[i];\n            if (!Array.isArray(paramValues)) {\n                this._log.error(LogTag.Engine, 'Component parameter data must be an array');\n                continue;\n            }\n            if (paramValues.length !== paramNames.length) {\n                this._log.error(LogTag.Engine, `Component parameter data has size ${paramValues.length} but expected ${paramNames.length}`);\n                continue;\n            }\n            for (let j = 0; j < paramValues.length; ++j) {\n                const name = paramNames[j];\n                const property = ctor.Properties[name];\n                const type = property.type;\n                let value = paramValues[j];\n                /* Default values are sent as undefined to avoid wasting space */\n                if (value === undefined) {\n                    const cloner = property.cloner ?? defaultPropertyCloner;\n                    value = cloner.clone(type, property.default);\n                    component[name] = value;\n                    continue;\n                }\n                /* This skips unset resource parameters as those are sent\n                 * directly with type null. Offsets for Int and Float types\n                 * should always be 0. */\n                /** @todo CBOR tag to mark resources? Wastes a byte though. */\n                if (typeof value === 'number') {\n                    value += offsets[type];\n                }\n                switch (type) {\n                    case Type.Bool:\n                    case Type.Int:\n                    case Type.Float:\n                    case Type.String:\n                    case Type.Enum:\n                    case Type.Vector2:\n                    case Type.Vector3:\n                    case Type.Vector4:\n                        /* Nothing to do */\n                        break;\n                    case Type.Object:\n                        value = value\n                            ? scene.wrap(this._wl_object_id(scene._index, value))\n                            : null;\n                        break;\n                    case Type.Mesh:\n                        value = engine.meshes.wrap(value);\n                        break;\n                    case Type.Texture:\n                        value = engine.textures.wrap(value);\n                        break;\n                    case Type.Material:\n                        value = engine.materials.wrap(value);\n                        break;\n                    case Type.Animation:\n                        value = scene.animations.wrap(value);\n                        break;\n                    case Type.Skin:\n                        value = scene.skins.wrap(value);\n                        break;\n                    case Type.Color:\n                        /* Colors are sent as Uint8Array. Normalize positive\n                         * integer values to 0-1. Don't assume any bit size\n                         * here, could become Uint16Array as well. */\n                        const max = (1 << (value.BYTES_PER_ELEMENT * 8)) - 1;\n                        value = Float32Array.from(value, (f, _) => f / max);\n                        break;\n                }\n                component[name] = value;\n            }\n        }\n    }\n    _wljs_set_component_param_translation(scene, component, param, valuePtr, valueEndPtr) {\n        const components = this._engine._scenes[scene]._jsComponents;\n        const comp = components[component];\n        const value = this.UTF8ViewToString(valuePtr, valueEndPtr);\n        const ctor = comp.constructor;\n        const paramName = ctor._propertyOrder[param];\n        comp[paramName] = value;\n    }\n    _wljs_get_component_type_index(namePtr, nameEndPtr) {\n        const typename = this.UTF8ViewToString(namePtr, nameEndPtr);\n        const index = this._componentTypeIndices[typename];\n        if (index === undefined) {\n            return this._brokenComponentIndex;\n        }\n        return index;\n    }\n    _wljs_component_create(sceneIndex, index, id, type, object) {\n        const scene = this._engine._scenes[sceneIndex];\n        scene._components.createJs(index, id, type, object);\n    }\n    _wljs_component_init(scene, component) {\n        const components = this._engine._scenes[scene]._jsComponents;\n        const c = components[component];\n        c._triggerInit();\n    }\n    _wljs_component_update(component, dt) {\n        const c = this._components[component];\n        c._triggerUpdate(dt);\n    }\n    _wljs_component_onActivate(component) {\n        const c = this._components[component];\n        c._triggerOnActivate();\n    }\n    _wljs_component_onDeactivate(component) {\n        const c = this._components[component];\n        c._triggerOnDeactivate();\n    }\n    _wljs_component_markDestroyed(sceneIndex, manager, componentId) {\n        const scene = this._engine._scenes[sceneIndex];\n        const component = scene._components.get(manager, componentId);\n        component?._triggerOnDestroy();\n    }\n    _wljs_swap(scene, a, b) {\n        const components = this._engine._scenes[scene]._jsComponents;\n        const componentA = components[a];\n        components[a] = components[b];\n        components[b] = componentA;\n    }\n    _wljs_copy(srcSceneIndex, srcIndex, dstSceneIndex, dstIndex, offsetsPtr) {\n        const srcScene = this._engine._scenes[srcSceneIndex];\n        const dstScene = this._engine._scenes[dstSceneIndex];\n        const destComp = dstScene._jsComponents[dstIndex];\n        const srcComp = srcScene._jsComponents[srcIndex];\n        try {\n            destComp._copy(srcComp, offsetsPtr);\n        }\n        catch (e) {\n            this._log.error(LogTag.Component, `Exception during ${destComp.type} copy() on object ${destComp.object.name}`);\n            this._log.error(LogTag.Component, e);\n        }\n    }\n    /**\n     * Forward an animation event to a corresponding\n     * {@link AnimationComponent}\n     *\n     * @note This api is meant to be used internally. Please have a look at\n     * {@link AnimationComponent.onEvent} instead.\n     *\n     * @param componentId Component id in the manager\n     * @param namePtr Pointer to UTF8 event name\n     * @param nameEndPtr Pointer to end of UTF8 event name\n     */\n    _wljs_trigger_animationEvent(componentId, namePtr, nameEndPtr) {\n        const scene = this._engine.scene;\n        const comp = scene._components.wrapAnimation(componentId);\n        const nameStr = this.UTF8ViewToString(namePtr, nameEndPtr);\n        comp.onEvent.notify(nameStr);\n    }\n}\n/*\n * Api <> Runtime compatibility.\n *\n * Some features exposed in the API are only available from a specific\n * runtime version.\n *\n * Every added feature must throw by default. If the runtime loaded\n * has the specific feature, the method will be overwritten by Emscripten\n * upon loading.\n */\n/**\n * Throwing function used for features added in a patch version.\n *\n * #### Usage\n *\n * ```ts\n * const requireRuntime1_1_1 = throwInvalidRuntime('1.1.1');\n * WASM.prototype._wl_new_function = requireRuntime1_1_1;\n * ```\n *\n * @param version The version in which the feature was added.\n * @returns A function that will throw when called.\n */\nfunction throwInvalidRuntime(version) {\n    return function () {\n        throw new Error(`Feature added in version ${version}.` +\n            `\\n\\t\u2192 Please use a Wonderland Engine editor version >= ${version}`);\n    };\n}\n", "/**\n * This file is automatically generated.\n *\n * **Do not** modify this file directly, but instead update\n * the 'write-version.mjs' script.\n */\n/** Version of this API. */\nexport const APIVersion = {\n    major: 1,\n    minor: 2,\n    patch: 0,\n    rc: 0\n};\n", "import {AnimationComponent, Component, Emitter, Property} from '@wonderlandengine/api';\n\n/**\n * Configurable gun script\n *\n * A gun can be configured by the following 3 properties:\n * - Firing mode: Does the gun fire semi or full auto\n * - Fire rate: How many bullets the gun can shoot per second\n * - Mag size: Maximum number of bullets that can be fired before having to reload\n *\n * This script is responsible for playing animations, listening to animation events\n * and keeping track of the ammo currently loaded in the gun, as well as reloading.\n */\nexport class Gun extends Component {\n    static AnimationNames = {\n        Idle: \"idle\",\n        Draw: \"draw\",\n        Hide: \"hide\",\n        Shoot: \"shoot\",\n        Reload: \"reload\",\n        FullReload: \"fullreload\",\n    };\n\n    static TypeName = 'gun';\n    /* Properties that are configurable in the editor */\n    static Properties = {\n        semiAuto: Property.bool(false),\n        fireRate: Property.float(650.0),\n        magSize: Property.int(30),\n        animationsObject: Property.object(),\n        idleAnimation: Property.animation(),\n        drawAnimation: Property.animation(),\n        shootAnimation: Property.animation(),\n        reloadAnimation: Property.animation(),\n        fullReloadAnimation: Property.animation(),\n        hideAnimation: Property.animation(),\n    };\n\n    init() {\n        this.drawing = false;\n        this.drawn = false;\n        this.reloading = false;\n        this.chambered = false;\n\n        this.animators = new Map();\n\n        this.onHide = new Emitter();\n    }\n\n    start() {\n        this.animationComponents = this.animationsObject.getComponents(AnimationComponent);\n        this.mag = this.magSize;\n\n        this.animators.set(Gun.AnimationNames.Idle, this.findAnimator(this.idleAnimation));\n        this.animators.set(Gun.AnimationNames.Draw, this.findAnimator(this.drawAnimation));\n        this.animators.set(Gun.AnimationNames.Hide, this.findAnimator(this.hideAnimation));\n        this.animators.set(Gun.AnimationNames.Shoot, this.findAnimator(this.shootAnimation));\n        this.animators.set(Gun.AnimationNames.Reload, this.findAnimator(this.reloadAnimation));\n        this.animators.set(Gun.AnimationNames.FullReload, this.findAnimator(this.fullReloadAnimation));\n\n        const drawAnimator = this.animators.get(Gun.AnimationNames.Draw);\n        if (drawAnimator) {\n            drawAnimator.onEvent.add(this.onDrawEvent.bind(this));\n            drawAnimator.onEvent.add(this.onEndEvent.bind(this));\n        }\n\n        const shootAnimator = this.animators.get(Gun.AnimationNames.Shoot);\n        if (shootAnimator) {\n            shootAnimator.onEvent.add(this.onShootEvent.bind(this));\n            shootAnimator.onEvent.add(this.onEndEvent.bind(this));\n        }\n\n        const reloadAnimator = this.animators.get(Gun.AnimationNames.Reload);\n        if (reloadAnimator) {\n            reloadAnimator.onEvent.add(this.onReloadEvent.bind(this));\n            reloadAnimator.onEvent.add(this.onEndEvent.bind(this));\n        }\n\n        const fullReloadAnimator = this.animators.get(Gun.AnimationNames.FullReload);\n        if (fullReloadAnimator) {\n            fullReloadAnimator.onEvent.add(this.onReloadEvent.bind(this));\n            fullReloadAnimator.onEvent.add(this.onEndEvent.bind(this));\n        }\n\n        const hideAnimator = this.animators.get(Gun.AnimationNames.Hide);\n        if (hideAnimator) {\n            hideAnimator.onEvent.add(this.onHideEvent.bind(this));\n            hideAnimator.onEvent.add(this.onEndEvent.bind(this));\n        } else {\n            drawAnimator.onEvent.add(this.onHideEvent.bind(this));\n        }\n\n        this.hideObject();\n    }\n\n    /** Play the shoot animation and reduce the ammo count by 1 */\n    shoot() {\n        console.log('shoot!');\n        this.playAnimation(Gun.AnimationNames.Shoot);\n        --this.mag;\n    }\n\n    /** Check whether the gun can shoot */\n    canShoot() {\n        return !this.reloading && this.drawn && this.mag > 0;\n    }\n\n    /** Unhide and play the draw animation on the gun */\n    draw() {\n        if (this.drawn) return;\n        this.drawing = true;\n        this.showObject();\n        this.playAnimation(Gun.AnimationNames.Draw);\n    }\n\n    /** Is the mag full? */\n    isFull() {\n        return this.mag >= this.magSize;\n    }\n\n    /**\n     * Reload the gun\n     *\n     * Takes into account that a bullet could already be chambered into the gun\n     * so plays a different animation for an empty and non-empty mag.\n     */\n    reload() {\n        if (this.mag == 0) {\n            this.playAnimation(Gun.AnimationNames.FullReload);\n            this.chambered = false;\n        } else {\n            this.playAnimation(Gun.AnimationNames.Reload);\n            this.chambered = true;\n        }\n        this.reloading = true;\n    }\n\n    /**\n     * Play the holster animation on the gun,\n     * which is the draw/unholster animation in reverse\n     * */\n    hide() {\n        this.cancelReload();\n        this.drawn = false;\n        if (!this.hideAnimation) {\n            this.playAnimationReverse(Gun.AnimationNames.Draw);\n        } else {\n            this.playAnimationReverse(Gun.AnimationNames.Hide);\n        }\n    }\n\n    /** Play the idle animation on the gun */\n    idle() {\n        this.playAnimationReverse(Gun.AnimationNames.Idle);\n    }\n\n    /**\n     * Cancel the reload, this stops the reload animation\n     *\n     * If the reload event already triggered on the animation,\n     * this allows the player to skip part of the reload animation.\n     * This is done in some games to add an extra layer of skill\n     * to reloading by having to time the cancel as closely\n     * to the reload timing as possible.\n     */\n    cancelReload() {\n        if (!this.reloading) return;\n        this.stopAnimation(Gun.AnimationNames.Reload);\n        this.stopAnimation(Gun.AnimationNames.FullReload);\n        this.reloading = false;\n        this.playAnimation(Gun.AnimationNames.Idle);\n    }\n\n    /**\n     * Play an animation on the gun\n     *\n     * @param anim Name of the animation to play, see AnimationNames\n     */\n    playAnimation(anim) {\n        this.stopAnimation(Gun.AnimationNames.Idle);\n        const animator = this.animators.get(anim);\n        if (!animator) return;\n        animator.stop();\n        animator.speed = 1.0;\n        animator.play();\n    }\n\n    /**\n     * Play an animation on the gun in reverse\n     *\n     * @param anim Name of the animation to play, see AnimationNames\n     */\n    playAnimationReverse(anim) {\n        this.stopAnimation(Gun.AnimationNames.Idle);\n        const animator = this.animators.get(anim);\n        if (!animator) return;\n        animator.stop();\n        animator.speed = -1.0;\n        animator.play();\n    }\n\n    /**\n     * Stop an animation on the gun\n     *\n     * @param anim Name of the animation to stop, see AnimationNames\n     */\n    stopAnimation(anim) {\n        this.animators.get(anim)?.stop();\n    }\n\n    /**\n     * Find an animation component for the given animation\n     *\n     * @param anim Name of the animation to find a component for, see AnimationNames\n     */\n    findAnimator(anim) {\n        for (var i = 0; i < this.animationComponents.length; ++i) {\n            if (this.animationComponents[i].animation.equals(anim)) {\n                return this.animationComponents[i];\n            }\n        }\n        return null;\n    }\n\n    /** Callback for the draw animation event */\n    onDrawEvent(name) {\n        if (name != \"draw\" || !this.drawing) return;\n        this.drawn = true;\n        this.drawing = false;\n        this.playAnimation(Gun.AnimationNames.Idle);\n    }\n\n    /** Callback for the shoot animation event */\n    onShootEvent(name) {\n        if (name != \"shoot\") return;\n        console.log(\"Shoot Event!\");\n    }\n\n    /** Callback for the reload animation event */\n    onReloadEvent(name) {\n        if (name != \"reload\") return;\n        this.mag = this.magSize;\n        if (this.chambered) ++this.mag;\n    }\n\n    /** Callback for event placed at the end of every animation */\n    onEndEvent(name) {\n        if (name != \"end\") return;\n        if (this.reloading) {\n            this.cancelReload();\n            return;\n        }\n\n        if (!this.drawn) return;\n        this.playAnimation(Gun.AnimationNames.Idle);\n    }\n\n    /** Callback for the hide animation event */\n    onHideEvent(name) {\n        if (name != \"hide\" || this.drawing) return;\n        this.onHide.notify();\n        this.hideObject();\n    }\n\n    /** Hide the gun object */\n    hideObject() {\n        this.object.setPositionLocal([0,100,0]);\n    }\n\n    /** Show the gun object */\n    showObject() {\n        this.object.setPositionLocal([0,0,0]);\n    }\n}\n", "import {Component, Property} from '@wonderlandengine/api';\nimport { Gun } from './gun.js';\n\n/**\n * Gun controller\n *\n * Responsible for controlling the currently equiped gun,\n * by forwarding input from Controls to the equiped gun.\n * Also responsible for keeping track of which gun is currently equiped,\n * and swapping between guns.\n */\nexport class GunController extends Component {\n    static TypeName = 'gun-controller';\n    /* Properties that are configurable in the editor */\n    static Properties = {\n        firstGunObject: Property.object(),\n    };\n\n    fireTimer = 0.0;\n    shootDown = false;\n    guns = new Array();\n\n    start() {\n        this.guns.push(this.firstGunObject.getComponent(Gun));\n        this.gun = null;\n        this.nextGun = null;\n    }\n\n    update(dt) {\n        if (this.fireTimer > 0.0) {\n            this.fireTimer -= dt;\n        }\n    }\n\n    /** Forward the start of a shoot input */\n    onShootInput() {\n        if (!this.gun) return;\n        if (this.shootDown && this.gun.semiAuto) return;\n        this.shootDown = true;\n        const canShoot = this.fireTimer <= 0.0 && this.gun.canShoot();\n        if (!canShoot) return;\n        this.fireTimer = 60 / this.gun.fireRate;\n        this.gun.shoot();\n    }\n\n    /** Forward the end of a shoot input */\n    onShootInputEnd() {\n        if (this.shootDown && this.gun && !this.gun.semiAuto)\n            this.gun.idle();\n\n        this.shootDown = false;\n    }\n\n    /** Forward a reload input */\n    onReloadInput() {\n        if (!this.gun) return;\n        if (this.gun.reloading) {\n            this.gun.cancelReload();\n            return;\n        }\n        if (this.gun.isFull()) return;\n        this.gun.reload();\n    }\n\n    /**\n     * Forward draw weapon input\n     *\n     * @param index Index of the weapon to draw, or -1 to holster\n     *\n     * First triggers the holster animation on the currently equiped weapon.\n     * If the index is not -1 it listens to the hide event of the gun.\n     */\n    onDrawInput(index) {\n        if (index != -1 && this.guns[index].drawn) return;\n\n        this.nextGun = index == -1 ? null : this.guns[index];\n        if (this.gun) {\n            this.gun.hide();\n            this.gun.onHide.add(this.onHideGun.bind(this));\n            return;\n        }\n        this.gun = this.nextGun;\n        this.gun.draw();\n    }\n\n    /** Callback for when the currently equiped gun has holstered */\n    onHideGun() {\n        this.gun = this.nextGun;\n        if (this.gun)\n            this.gun.draw();\n    }\n}\n", "import {Component, Property} from '@wonderlandengine/api';\nimport { GunController } from './gun-controller.js';\n\n/**\n * Controls\n *\n * Responsible for reading input and forwarding it to the gun controller.\n */\nexport class Controls extends Component {\n    static TypeName = 'controls';\n\n    init() {\n        this.reloadDown = false;\n        this.drawWeaponDown = false;\n        this.holsterDown = false;\n        this.mouseDown = false;\n\n        window.addEventListener('keydown', this.press.bind(this));\n        window.addEventListener('keyup', this.release.bind(this));\n\n        const canvas = this.engine.canvas;\n        canvas.addEventListener('mousedown', this.onMouseDown);\n        canvas.addEventListener('mouseup', this.onMouseUp);\n    }\n\n    onActivate() {\n        const canvas = this.engine.canvas;\n        canvas.addEventListener('mousedown', this.onMouseDown);\n        canvas.addEventListener('mouseup', this.onMouseUp);\n    }\n    onDeactivate() {\n        const canvas = this.engine.canvas;\n        canvas.removeEventListener('mousedown', this.onMouseDown);\n        canvas.removeEventListener('mouseup', this.onMouseUp);\n    }\n\n    start() {\n        this.gunController = this.object.getComponent(GunController);\n    }\n\n    /** Callback for when a button is pressed */\n    press(e) {\n        /* R to reload */\n        if (e.keyCode === 82) {\n            if (this.reloadDown) return;\n            this.reloadDown = true;\n            this.gunController.onReloadInput();\n        /* 1 to draw weapon */\n        } else if (e.keyCode === 49) {\n            if (this.drawWeaponDown) return;\n            this.drawWeaponDown = true;\n            this.gunController.onDrawInput(0);\n        /* F to holster weapon */\n        } else if (e.keyCode === 70) {\n            if (this.holsterDown) return;\n            this.holsterDown = true;\n            this.gunController.onDrawInput(-1);\n        }\n    }\n\n    /** Callback for when a button is released */\n    release(e) {\n        if (e.keyCode === 82) {\n            this.reloadDown = false;\n        } else if (e.keyCode === 49) {\n            this.drawWeaponDown = false;\n        } else if (e.keyCode === 70) {\n            this.holsterDown = false;\n        }\n    }\n\n    update(dt) {\n        if (this.mouseDown) {\n            this.gunController.onShootInput(dt);\n        } else {\n            this.gunController.onShootInputEnd(dt);\n        }\n    }\n\n    /** Callback for when a mouse button is down */\n    onMouseDown = (e) => {\n        /* Left mouse button */\n        if (e.button === 0) {\n            this.mouseDown = true;\n            if (e.button === 1) {\n                e.preventDefault();\n                return false;\n            }\n        }\n    }\n\n    /** Callback for when a mouse button is released */\n    onMouseUp = (e) => {\n        /* Left mouse button */\n        if (e.button === 0) {\n            this.mouseDown = false;\n        }\n    }\n}\n", "/**\n * /!\\ This file is auto-generated.\n *\n * This is the entry point of your standalone application.\n *\n * There are multiple tags used by the editor to inject code automatically:\n *     - `wle:auto-imports:start` and `wle:auto-imports:end`: The list of import statements\n *     - `wle:auto-register:start` and `wle:auto-register:end`: The list of component to register\n *     - `wle:auto-constants:start` and `wle:auto-constants:end`: The project's constants,\n *        such as the project's name, whether it should use the physx runtime, etc...\n *     - `wle:auto-benchmark:start` and `wle:auto-benchmark:end`: Append the benchmarking code\n */\n\n/* wle:auto-imports:start */\nimport {Controls} from './controls.js';\nimport {GunController} from './gun-controller.js';\nimport {Gun} from './gun.js';\n/* wle:auto-imports:end */\n\nimport {loadRuntime} from '@wonderlandengine/api';\nimport * as API from '@wonderlandengine/api'; // Deprecated: Backward compatibility.\n\n/* wle:auto-constants:start */\nconst Constants = {\n    ProjectName: 'AnimationEvents',\n    RuntimeBaseName: 'WonderlandRuntime',\n    WebXRRequiredFeatures: ['local',],\n    WebXROptionalFeatures: ['local','hand-tracking','hit-test',],\n};\nconst RuntimeOptions = {\n    physx: false,\n    loader: false,\n    xrFramebufferScaleFactor: 1,\n    xrOfferSession: {\n        mode: 'auto',\n        features: Constants.WebXRRequiredFeatures,\n        optionalFeatures: Constants.WebXROptionalFeatures,\n    },\n    canvas: 'canvas',\n};\n/* wle:auto-constants:end */\n\nconst engine = await loadRuntime(Constants.RuntimeBaseName, RuntimeOptions);\nObject.assign(engine, API); // Deprecated: Backward compatibility.\nwindow.WL = engine; // Deprecated: Backward compatibility.\n\nengine.onSceneLoaded.once(() => {\n    const el = document.getElementById('version');\n    if (el) setTimeout(() => el.remove(), 2000);\n});\n\n/* WebXR setup. */\n\nfunction requestSession(mode) {\n    engine\n        .requestXRSession(mode, Constants.WebXRRequiredFeatures, Constants.WebXROptionalFeatures)\n        .catch((e) => console.error(e));\n}\n\nfunction setupButtonsXR() {\n    /* Setup AR / VR buttons */\n    const arButton = document.getElementById('ar-button');\n    if (arButton) {\n        arButton.dataset.supported = engine.arSupported;\n        arButton.addEventListener('click', () => requestSession('immersive-ar'));\n    }\n    const vrButton = document.getElementById('vr-button');\n    if (vrButton) {\n        vrButton.dataset.supported = engine.vrSupported;\n        vrButton.addEventListener('click', () => requestSession('immersive-vr'));\n    }\n}\n\nif (document.readyState === 'loading') {\n    window.addEventListener('load', setupButtonsXR);\n} else {\n    setupButtonsXR();\n}\n\n/* wle:auto-register:start */\nengine.registerComponent(Controls);\nengine.registerComponent(GunController);\nengine.registerComponent(Gun);\n/* wle:auto-register:end */\n\nengine.scene.load(`${Constants.ProjectName}.bin`).catch((e) => {\n    console.error(e);\n    window.alert(`Failed to load ${Constants.ProjectName}.bin:`, e);\n});\n\n/* wle:auto-benchmark:start */\n/* wle:auto-benchmark:end */\n"],
  "mappings": "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",
  "names": ["e", "Type", "TransactionType", "engine", "ptr", "engine", "createDestroyedProxy", "LogTag", "Collider", "Alignment", "VerticalAlignment", "TextEffect", "InputType", "LightType", "AnimationState", "ForceMode", "CollisionEventType", "Shape", "MeshAttribute", "createDestroyedProxy", "property", "LockAxis", "engine", "MeshIndexType", "MeshSkinningType", "index", "engine", "engine", "MaterialParamType", "engine", "createDestroyedProxy", "engine", "engine", "engine", "engine", "LogLevel", "threads", "engine", "property", "checkXRSupport", "simd", "threads", "filename", "engine"]
}
